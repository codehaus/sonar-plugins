rule.findbugs.IMSE_DONT_CATCH_IMSE.name=バッドプラクティス - 疑わしい IllegalMonitorStateException のキャッチ
rule.findbugs.BX_BOXING_IMMEDIATELY_UNBOXED.name=性能 - プリミティブ値がボクシングされて、すぐにアンボクシングされる
rule.findbugs.IJU_SETUP_NO_SUPER.name=正確性 - TestCase は super.setup() を呼び出さない setUp メソッドを実装している
rule.findbugs.TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED.name=正確性 - 型修飾子でアノテーションされた値がその修飾子を付けてはならない値を必要とする場所で使われている
rule.findbugs.TLW_TWO_LOCK_WAIT.name=マルチスレッドの正確性 - 2つ以上のロックを保持して wait メソッドを呼び出している
rule.findbugs.RV_01_TO_INT.name=正確性 - 0から1の乱数値は整数値0に丸められる
rule.findbugs.NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE.name=危ないコード - パラメータは  非 null でなければならないが null 可能としてアノテートされている
rule.findbugs.RV_ABSOLUTE_VALUE_OF_RANDOM_INT.name=正確性 - 符号付き整数の乱数の絶対値を計算する間違った試み
rule.findbugs.EC_INCOMPATIBLE_ARRAY_COMPARE.name=正確性 - equals(...) メソッドを使用して互換性のない配列を比較している
rule.findbugs.UL_UNRELEASED_LOCK_EXCEPTION_PATH.name=マルチスレッドの正確性 - すべての例外経路でロックが解除されないメソッド
rule.findbugs.SE_NONSTATIC_SERIALVERSIONID.name=バッドプラクティス - serialVersionUID が static ではない
rule.findbugs.UCF_USELESS_CONTROL_FLOW.name=危ないコード - 役に立たない制御フロー
rule.findbugs.BC_IMPOSSIBLE_CAST.name=正確性 - 不可能なキャスト
rule.findbugs.XSS_REQUEST_PARAMETER_TO_SEND_ERROR.name=セキュリティ - 反射型クロスサイトスクリプティング脆弱性がエラーページにあるサーブレット
rule.findbugs.DM_NEW_FOR_GETCLASS.name=性能 - クラスオブジェクトを得るためだけにインスタンスを作成しているメソッド
rule.findbugs.OBL_UNSATISFIED_OBLIGATION.name=実験用 - ストリームやリソースのクリーンアップに失敗するかもしれないメソッド
rule.findbugs.UW_UNCOND_WAIT.name=マルチスレッドの正確性 - wait メソッドの無条件呼び出し
rule.findbugs.DLS_DEAD_LOCAL_STORE_OF_NULL.name=危ないコード - ローカル変数への無効な null 代入
rule.findbugs.NM_CLASS_NAMING_CONVENTION.name=バッドプラクティス - クラス名は大文字から始めるべき
rule.findbugs.RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN.name=バッドプラクティス - Boolean 値の疑わしい参照比較
rule.findbugs.MWN_MISMATCHED_NOTIFY.name=マルチスレッドの正確性 - 不整合な notify メソッド
rule.findbugs.NM_VERY_CONFUSING.name=正確性 - 非常に紛らわしい名前のメソッド
rule.findbugs.FI_NULLIFY_SUPER.name=バッドプラクティス - ファイナライザはスーパークラスのファイナライザを無効にしている
rule.findbugs.MTIA_SUSPECT_STRUTS_INSTANCE_FIELD.name=危ないコード - Struts Action を拡張したクラスでのインスタンス変数の使用
rule.findbugs.DM_STRING_CTOR.name=性能 - 効率が悪い new String(String) コンストラクタを呼び出しているメソッド
rule.findbugs.STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE.name=マルチスレッドの正確性 - static DateFormat の呼び出し
rule.findbugs.NP_NULL_PARAM_DEREF_NONVIRTUAL.name=正確性 - 非 null パラメータに null を渡している非仮想メソッドの呼び出し
rule.findbugs.FI_EMPTY.name=バッドプラクティス - 空のファイナライザは削除するべき
rule.findbugs.CD_CIRCULAR_DEPENDENCY.name=危ないコード - クラス間の循環依存関係のテスト
rule.findbugs.EC_UNRELATED_TYPES.name=正確性 - equals メソッドを呼び出して異なる型を比較している
rule.findbugs.EI_EXPOSE_STATIC_REP2.name=悪質なコード脆弱性 - static フィールドに可変オブジェクトを格納することによって、内部の静的状態を暴露するかもしれないメソッド
rule.findbugs.DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY.name=正確性 - 配列で toString メソッドを呼び出している
rule.findbugs.SIC_INNER_SHOULD_BE_STATIC_ANON.name=性能 - 名前付き static 内部クラスにリファクタリングできるかもしれない
rule.findbugs.STI_INTERRUPTED_ON_UNKNOWNTHREAD.name=正確性 - スレッドインスタンスで static Thread.interrupted() を呼び出している
rule.findbugs.CN_IDIOM_NO_SUPER_CALL.name=バッドプラクティス - clone メソッドが super.clone() を呼び出していない
rule.findbugs.VA_FORMAT_STRING_BAD_ARGUMENT.name=正確性 - 書式指示子へ渡している引数に互換性がない
rule.findbugs.EQ_DOESNT_OVERRIDE_EQUALS.name=危ないコード - スーパークラスの equals メソッドをオーバーライドしていないクラス
rule.findbugs.BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY.name=正確性 - toArray メソッドの結果の不可能なダウンキャスト
rule.findbugs.SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION.name=バッドプラクティス - Externalizable なクラスが引数なしコンストラクタを定義していない
rule.findbugs.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK.name=危ないコード - 値は型修飾子を必要としているが、不明としてマークされている
rule.findbugs.SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS.name=性能 - static 内部クラスにリファクタリングできるかもしれない
rule.findbugs.EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS.name=バッドプラクティス - equals メソッドは互換性のないオペランドをチェックしている
rule.findbugs.RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED.name=マルチスレッドの正確性 - putIfAbsent の戻り値は無視されて putIfAbsent に渡した値は再利用された
rule.findbugs.STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE.name=マルチスレッドの正確性 - static Calendar の呼び出し
rule.findbugs.MS_CANNOT_BE_FINAL.name=悪質なコード脆弱性 - final でないフィールドは悪質なコードから保護できない
rule.findbugs.IS_INCONSISTENT_SYNC.name=マルチスレッドの正確性 - 一貫性のない同期化
rule.findbugs.SE_NO_SERIALVERSIONID.name=バッドプラクティス - Serializable なクラスが serialVersionUID を定義していない
rule.findbugs.EI_EXPOSE_REP2.name=悪質なコード脆弱性 - 可変オブジェクトへの参照を取り込むことによって内部表現を暴露するかもしれないメソッド
rule.findbugs.NM_METHOD_CONSTRUCTOR_CONFUSION.name=正確性 - 明らかなメソッドとコンストラクタの混乱
rule.findbugs.ICAST_INTEGER_MULTIPLY_CAST_TO_LONG.name=危ないコード - 整数乗算の結果を long にキャストしている
rule.findbugs.QF_QUESTIONABLE_FOR_LOOP.name=危ないコード - 複雑か巧妙か間違ったインクリメントの for ループ
rule.findbugs.DLS_DEAD_STORE_OF_CLASS_LITERAL.name=正確性 - クラスリテラルの無効な代入
rule.findbugs.NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER.name=バッドプラクティス - Java の後のバージョンのキーワードである識別子を使用している
rule.findbugs.BC_VACUOUS_INSTANCEOF.name=危ないコード - 常に true を返す instanceof
rule.findbugs.INT_VACUOUS_BIT_OPERATION.name=危ないコード - 整数値の無意味なビットマスク演算
rule.findbugs.NP_NULL_INSTANCEOF.name=正確性 - null とわかっている値をその型のインスタンスなのか確かめている
rule.findbugs.SIC_THREADLOCAL_DEADLY_EMBRACE.name=正確性 - 非 static 内部クラスとスレッドローカルのデッドロック
rule.findbugs.EQ_UNUSUAL.name=危ないコード - 異常な equals メソッド
rule.findbugs.IJU_NO_TESTS.name=正確性 - TestCase はテストがない
rule.findbugs.EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC.name=正確性 - equals メソッドはスーパークラスの equals メソッドをオーバーライドしているが、対称的ではないかもしれない
rule.findbugs.XFB_XML_FACTORY_BYPASS.name=危ないコード - XMLインタフェースの特定の実装のインスタンスを作成しているメソッド
rule.findbugs.SWL_SLEEP_WITH_LOCK_HELD.name=マルチスレッドの正確性 - ロックを保持して Thread.sleep() を呼び出しているメソッド
rule.findbugs.CN_IDIOM.name=バッドプラクティス - Cloneable を実装したクラスが clone メソッドを定義していないか、使用していない
rule.findbugs.WA_AWAIT_NOT_IN_LOOP.name=マルチスレッドの正確性 - Condition.await() がループの中にない
rule.findbugs.DM_FP_NUMBER_CTOR.name=性能 - 効率が悪い浮動小数点 Number コンストラクタを呼び出しているメソッド
rule.findbugs.SF_SWITCH_NO_DEFAULT.name=危ないコード - default がない switch 文を発見した
rule.findbugs.NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE.name=危ないコード - null になっている可能性があるメソッドの戻り値を利用している
rule.findbugs.NP_CLONE_COULD_RETURN_NULL.name=バッドプラクティス - null を返すかもしれない clone メソッド
rule.findbugs.MS_OOI_PKGPROTECT.name=悪質なコード脆弱性 - インタフェースから移動してパッケージプロテクテッドにすべきフィールド
rule.findbugs.DM_BOXED_PRIMITIVE_TOSTRING.name=性能 - toString メソッドを呼び出すためにプリミティブ型のラッパクラスのインスタンスを作成している
rule.findbugs.EQ_ABSTRACT_SELF.name=バッドプラクティス - 抽象クラスは共変な equals メソッドを宣言している
rule.findbugs.DM_STRING_TOSTRING.name=性能 - String の toString メソッドを呼び出しているメソッド
rule.findbugs.SE_METHOD_MUST_BE_PRIVATE.name=正確性 - 直列化機構のために private にしなければならないメソッド
rule.findbugs.DL_SYNCHRONIZATION_ON_BOOLEAN.name=マルチスレッドの正確性 - Boolean の同期化
rule.findbugs.UWF_UNWRITTEN_FIELD.name=正確性 - 書き込まれていないフィールド
rule.findbugs.IS2_INCONSISTENT_SYNC.name=マルチスレッドの正確性 - 一貫性のない同期化
rule.findbugs.IM_AVERAGE_COMPUTATION_COULD_OVERFLOW.name=危ないコード - 平均の計算はオーバーフローする可能性がある
rule.findbugs.BIT_SIGNED_CHECK_HIGH_BIT.name=正確性 - ビット演算の符号をチェックする
rule.findbugs.FL_MATH_USING_FLOAT_PRECISION.name=正確性 - 浮動小数点精度を使用した計算をしている
rule.findbugs.WS_WRITEOBJECT_SYNC.name=マルチスレッドの正確性 - writeObject メソッドは同期化しているがその他のメソッドは同期化していないクラス
rule.findbugs.RV_RETURN_VALUE_IGNORED.name=正確性 - 戻り値を無視しているメソッド
rule.findbugs.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE.name=セキュリティ - SQL の Statement の  execute メソッドに定数でない文字列を渡している
rule.findbugs.JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS.name=バッドプラクティス - 不変クラスのフィールドは final にすべき
rule.findbugs.AM_CREATES_EMPTY_ZIP_FILE_ENTRY.name=バッドプラクティス - 空の ZIP ファイルエントリの作成
rule.findbugs.DM_NEXTINT_VIA_NEXTDOUBLE.name=性能 - 整数の乱数を生成するためには nextDouble メソッド ではなく nextInt メソッドを使用する
rule.findbugs.UI_INHERITANCE_UNSAFE_GETRESOURCE.name=バッドプラクティス - クラスが拡張されるなら getResource の使い方は安全ではないかもしれない
rule.findbugs.SIO_SUPERFLUOUS_INSTANCEOF.name=正確性 - instanceof 演算子を使用した不必要な型チェック
rule.findbugs.EQ_OTHER_NO_OBJECT.name=正確性 - equals(Object) メソッドをオーバーライドしていない equals メソッドの定義
rule.findbugs.USM_USELESS_ABSTRACT_METHOD.name=危ないコード - 実装されたインタフェースですでに定義された抽象メソッド
rule.findbugs.MTIA_SUSPECT_SERVLET_INSTANCE_FIELD.name=危ないコード - Servlet クラスを拡張したクラスでのインスタンス変数の使用
rule.findbugs.DM_USELESS_THREAD.name=マルチスレッドの正確性 - デフォルトの空の run メソッドを使用して作成されたスレッド
rule.findbugs.ML_SYNC_ON_UPDATED_FIELD.name=マルチスレッドの正確性 - 更新されるフィールドで同期化しているメソッド
rule.findbugs.CO_SELF_NO_OBJECT.name=バッドプラクティス - 共変な compareTo メソッドの定義
rule.findbugs.BC_UNCONFIRMED_CAST.name=危ないコード - 未チェック/未確認のキャスト
rule.findbugs.FI_FINALIZER_NULLS_FIELDS.name=バッドプラクティス - ファイナライザはフィールドを null にする
rule.findbugs.BIT_AND.name=正確性 - 互換性のないビットマスク
rule.findbugs.FE_FLOATING_POINT_EQUALITY.name=危ないコード - 浮動小数点の等価性のためのテスト
rule.findbugs.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK.name=危ないコード - 値は型修飾子を必要としないが、不明としてマークされている
rule.findbugs.NP_NULL_PARAM_DEREF.name=正確性 - メソッド呼び出しは非 null パラメータに対して null を渡している
rule.findbugs.FB_MISSING_EXPECTED_WARNING.name=正確性 - 失われた FindBugs からの予期した/望ましい警告
rule.findbugs.DMI_INVOKING_HASHCODE_ON_ARRAY.name=正確性 - 配列で hashCode メソッドを呼び出している
rule.findbugs.QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT.name=正確性 - 論理式で boolean リテラル値を代入しているメソッド
rule.findbugs.SA_FIELD_SELF_COMPARISON.name=正確性 - フィールドとそれ自身との自己比較
rule.findbugs.UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR.name=正確性 - スーパークラスのコンストラクタから呼び出されるメソッドで初期化されていないフィールドを読み出している
rule.findbugs.ES_COMPARING_PARAMETER_STRING_WITH_EQ.name=バッドプラクティス - String パラメータを == や != を使用して比較している
rule.findbugs.INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE.name=正確性 - 負でない値と負の定数との間違った比較
rule.findbugs.INT_BAD_COMPARISON_WITH_SIGNED_BYTE.name=正確性 - 符号付きバイトの間違った比較
rule.findbugs.IO_APPENDING_TO_OBJECT_OUTPUT_STREAM.name=正確性 - オブジェクト出力ストリームへの追加は失敗に終わる
rule.findbugs.FI_MISSING_SUPER_CALL.name=バッドプラクティス - ファイナライザはスーパークラスのファイナライザを呼び出していない
rule.findbugs.VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED.name=正確性 - 書式文字列で実際に使われるより、多くの引数が渡されている
rule.findbugs.HE_EQUALS_USE_HASHCODE.name=バッドプラクティス - equals メソッドを定義して Object.hashCode() を使用しているクラス
rule.findbugs.IJU_BAD_SUITE_METHOD.name=正確性 - TestCase は suite メソッドの間違った宣言をしている
rule.findbugs.DMI_CONSTANT_DB_PASSWORD.name=セキュリティ - ハードコードされた定数データベースパスワード
rule.findbugs.REC_CATCH_EXCEPTION.name=危ないコード - 例外がスローされないのに例外をキャッチしている
rule.findbugs.PS_PUBLIC_SEMAPHORES.name=危ないコード - 公開インタフェースで同期化とセマフォを暴露するクラス
rule.findbugs.EC_UNRELATED_INTERFACES.name=正確性 - equals メソッドを呼び出して異なる型のインタフェースを比較している
rule.findbugs.UCF_USELESS_CONTROL_FLOW_NEXT_LINE.name=危ないコード - 次の行へ続くだけの役に立たない制御フロー
rule.findbugs.LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE.name=実験用 - ロガーの変更は OpenJDK の弱参照が原因で潜在的に失われる
rule.findbugs.NP_UNWRITTEN_FIELD.name=正確性 - 書き込まれていないフィールドの読み出し
rule.findbugs.DMI_UNSUPPORTED_METHOD.name=危ないコード - サポートされていないメソッドの呼び出し
rule.findbugs.RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE.name=危ないコード - null でない値と null 値との冗長な比較
rule.findbugs.EC_BAD_ARRAY_COMPARE.name=正確性 - 配列の equals メソッド呼び出しは == と等価である
rule.findbugs.EI_EXPOSE_REP.name=悪質なコード脆弱性 - 可変オブジェクトへの参照を返すことによって内部表現を暴露するかもしれないメソッド
rule.findbugs.NP_DEREFERENCE_OF_READLINE_VALUE.name=危ないコード - readLine メソッドの結果が null なのか確かめないで値を利用している
rule.findbugs.UPM_UNCALLED_PRIVATE_METHOD.name=性能 - private メソッドは決して呼び出されない
rule.findbugs.NP_NULL_ON_SOME_PATH.name=正確性 - null 値を利用している可能性がある
rule.findbugs.NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT.name=バッドプラクティス - equals メソッドは null の引数をチェックしていない
rule.findbugs.EC_NULL_ARG.name=正確性 - equals(null) の呼び出し
rule.findbugs.SE_BAD_FIELD_STORE.name=バッドプラクティス - 非直列化可能な値を直列化可能クラスのインスタンスフィールドに格納している
rule.findbugs.VO_VOLATILE_REFERENCE_TO_ARRAY.name=マルチスレッドの正確性 - 配列への volatile 参照は、配列要素を volatile として扱わない
rule.findbugs.NP_SYNC_AND_NULL_CHECK_FIELD.name=マルチスレッドの正確性 - 同じフィールドでの同期化と null チェック
rule.findbugs.DM_EXIT.name=バッドプラクティス - System.exit(...) を呼び出しているメソッド
rule.findbugs.RC_REF_COMPARISON.name=正確性 - 疑わしい参照比較
rule.findbugs.SE_NO_SUITABLE_CONSTRUCTOR.name=バッドプラクティス - Serializable なクラスのスーパークラスで、引数なしコンストラクタを定義していない
rule.findbugs.DC_DOUBLECHECK.name=マルチスレッドの正確性 - フィールドのダブルチェックの可能性
rule.findbugs.DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT.name=正確性 - int に対して Double.longBitsToDouble() を呼び出している
rule.findbugs.RpC_REPEATED_CONDITIONAL_TEST.name=正確性 - 条件テストの繰り返し
rule.findbugs.WMI_WRONG_MAP_ITERATOR.name=性能 - entrySet イテレータではなく効率が悪い keySet イテレータを使用している
rule.findbugs.DLS_DEAD_LOCAL_STORE.name=危ないコード - ローカル変数への無効な代入
rule.findbugs.INT_BAD_REM_BY_1.name=危ないコード - 1を法とする整数の剰余
rule.findbugs.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE.name=バッドプラクティス - 例外的戻り値を無視しているメソッド
rule.findbugs.SA_LOCAL_SELF_ASSIGNMENT.name=危ないコード - ローカル変数の自己代入
rule.findbugs.MS_SHOULD_BE_FINAL.name=悪質なコード脆弱性 - final にすべきフィールド
rule.findbugs.SIC_INNER_SHOULD_BE_STATIC.name=性能 - static 内部クラスにすべき
rule.findbugs.NP_GUARANTEED_DEREF.name=正確性 - null 値を利用することが保証されている
rule.findbugs.SE_READ_RESOLVE_MUST_RETURN_OBJECT.name=バッドプラクティス - readResolve メソッドの戻り値の型が Object で宣言されていない
rule.findbugs.NP_LOAD_OF_KNOWN_NULL_VALUE.name=危ないコード - null とわかっている値のロード
rule.findbugs.BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION.name=性能 - プリミティブ値がプリミティブ型の型変換をするためにボクシングされて、アンボクシングされる
rule.findbugs.CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE.name=バッドプラクティス - Cloneable を実装していないクラスが clone メソッドを定義している
rule.findbugs.CO_ABSTRACT_SELF.name=バッドプラクティス - 抽象クラスは共変な compareTo メソッドを定義している
rule.findbugs.BAC_BAD_APPLET_CONSTRUCTOR.name=正確性 - 初期化されていない AppletStub に依存する間違ったアプレットコンストラクタ
rule.findbugs.EQ_GETCLASS_AND_CLASS_CONSTANT.name=バッドプラクティス - equals メソッドはサブタイプのために失敗する
rule.findbugs.DB_DUPLICATE_SWITCH_CLAUSES.name=危ないコード - switch 文の2つの case のために同じコードを使用しているメソッド
rule.findbugs.DB_DUPLICATE_BRANCHES.name=危ないコード - 2つの分岐のために同じコードを使用しているメソッド
rule.findbugs.UOE_USE_OBJECT_EQUALS.name=実験用 - Object の equals メソッドをオーバーライドしていない final クラスの equals メソッドを呼び出している
rule.findbugs.FI_USELESS.name=バッドプラクティス - ファイナライザはスーパークラスのファイナライザを呼び出しているだけ
rule.findbugs.NP_ALWAYS_NULL.name=正確性 - null 値を利用している
rule.findbugs.DMI_VACUOUS_SELF_COLLECTION_CALL.name=正確性 - コレクションへの無意味な呼び出し
rule.findbugs.DLS_DEAD_LOCAL_STORE_IN_RETURN.name=危ないコード - return 文に役に立たない代入がある
rule.findbugs.IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD.name=正確性 - run メソッドでの JUnit アサーションは JUnit によって通知されない
rule.findbugs.DMI_EMPTY_DB_PASSWORD.name=セキュリティ - 空のデータベースパスワード
rule.findbugs.DM_BOOLEAN_CTOR.name=性能 - 効率が悪い Boolean コンストラクタを呼び出しているメソッド
rule.findbugs.BC_IMPOSSIBLE_DOWNCAST.name=正確性 - 不可能なダウンキャスト
rule.findbugs.BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS.name=バッドプラクティス - equals メソッドは引数の型を仮定するべきではない
rule.findbugs.RV_EXCEPTION_NOT_THROWN.name=正確性 - 作成した例外をスローするのではなく捨てている
rule.findbugs.VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG.name=正確性 - 可変長引数を期待しているメソッドにプリミティブ型の配列を渡している
rule.findbugs.LI_LAZY_INIT_UPDATE_STATIC.name=マルチスレッドの正確性 - 更新される static フィールドの間違った遅延初期化
rule.findbugs.SA_FIELD_SELF_ASSIGNMENT.name=正確性 - フィールドの自己代入
rule.findbugs.EQ_ALWAYS_FALSE.name=正確性 - equals メソッドは常に false を戻す
rule.findbugs.DMI_RANDOM_USED_ONLY_ONCE.name=バッドプラクティス - Random オブジェクトが作成され1度しか使われない
rule.findbugs.NM_CLASS_NOT_EXCEPTION.name=バッドプラクティス - 例外クラスのように命名されているが、クラスは Exception から派生されていない
rule.findbugs.SA_LOCAL_DOUBLE_ASSIGNMENT.name=危ないコード - ローカル変数の二重代入
rule.findbugs.NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS.name=正確性 - メソッド呼び出しは非 null パラメータに対して null を渡している
rule.findbugs.NP_TOSTRING_COULD_RETURN_NULL.name=バッドプラクティス - null を返すかもしれない toString メソッド
rule.findbugs.BC_BAD_CAST_TO_ABSTRACT_COLLECTION.name=危ないコード - 抽象コレクションへの疑わしいキャスト
rule.findbugs.NM_LCASE_HASHCODE.name=正確性 - クラスは hashcode() を定義しています。hashCode() にすべきですか?
rule.findbugs.RU_INVOKE_RUN.name=マルチスレッドの正確性 - スレッドで run メソッドを呼び出している
rule.findbugs.DMI_INVOKING_TOSTRING_ON_ARRAY.name=正確性 - 配列で toString メソッドを呼び出している
rule.findbugs.NM_METHOD_NAMING_CONVENTION.name=バッドプラクティス - メソッド名は小文字から始めるべきです
rule.findbugs.RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES.name=危ないコード - 2つの null 値の冗長な比較
rule.findbugs.SA_LOCAL_SELF_COMPUTATION.name=正確性 - 変数の無意味な自己演算 (たとえば、x & x)
rule.findbugs.MS_MUTABLE_HASHTABLE.name=悪質なコード脆弱性 - 可変 Hashtable のフィールド
rule.findbugs.RV_DONT_JUST_NULL_CHECK_READLINE.name=危ないコード - readLine メソッドの結果を null でないのか確かめた後で捨てている
rule.findbugs.ES_COMPARING_STRINGS_WITH_EQ.name=バッドプラクティス - String オブジェクトを == や != を使用して比較している
rule.findbugs.DL_SYNCHRONIZATION_ON_SHARED_CONSTANT.name=マルチスレッドの正確性 - 正準化した文字列の同期化
rule.findbugs.MF_METHOD_MASKS_FIELD.name=正確性 - フィールドを隠す変数を定義しているメソッド
rule.findbugs.EQ_SELF_USE_OBJECT.name=正確性 - 共変な equals メソッドを定義して、Object.equals(Object) を継承している
rule.findbugs.ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND.name=正確性 - 整数値を float にキャストして Math.round() に渡している
rule.findbugs.GC_UNRELATED_TYPES.name=正確性 - 型パラメータとメソッド引数に関係がない
rule.findbugs.BC_IMPOSSIBLE_INSTANCEOF.name=正確性 - 常に false を返す instanceof
rule.findbugs.SBSC_USE_STRINGBUFFER_CONCATENATION.name=性能 - ループの中で + を使用して文字列を連結しているメソッド
rule.findbugs.ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL.name=正確性 - 整数値を double にキャストして Math.ceil() に渡している
rule.findbugs.UG_SYNC_SET_UNSYNC_GET.name=マルチスレッドの正確性 - 同期化していない get メソッド、同期化している set メソッド
rule.findbugs.RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION.name=正確性 - 正規表現のための無効な構文
rule.findbugs.SA_FIELD_SELF_COMPUTATION.name=正確性 - フィールドの無意味な自己演算 (たとえば、 x & x)
rule.findbugs.DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS.name=正確性 - コアプールサイズが0の ScheduledThreadPoolExecutor の作成
rule.findbugs.DMI_USELESS_SUBSTRING.name=危ないコード - substring(0) の呼び出しは元の値を返す
rule.findbugs.IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD.name=危ないコード - 継承されたメソッドなのか外部のメソッドなのかあいまいなメソッドの呼び出し
rule.findbugs.OS_OPEN_STREAM.name=バッドプラクティス - ストリームのクローズに失敗するかもしれないメソッド
rule.findbugs.HE_INHERITS_EQUALS_USE_HASHCODE.name=バッドプラクティス - equals メソッドを継承して Object.hashCode() を使用しているクラス
rule.findbugs.SE_NONFINAL_SERIALVERSIONID.name=バッドプラクティス - serialVersionUID が final ではない
rule.findbugs.EQ_SELF_NO_OBJECT.name=バッドプラクティス - 共変な equals メソッドの定義
rule.findbugs.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH.name=正確性 - switch 文のフォールスルーのために格納が無効になっている
rule.findbugs.SW_SWING_METHODS_INVOKED_IN_SWING_THREAD.name=バッドプラクティス - Swing メソッドは AWT イベントディスパッチスレッドから呼び出す必要がある
rule.findbugs.VA_FORMAT_STRING_ILLEGAL.name=正確性 - 無効な書式文字列
rule.findbugs.DM_NUMBER_CTOR.name=性能 - 効率が悪い Number コンストラクタを呼び出しているメソッド
rule.findbugs.RV_REM_OF_RANDOM_INT.name=危ないコード - 符号付き32ビット整数の乱数の剰余
rule.findbugs.EQ_COMPARING_CLASS_NAMES.name=正確性 - equals メソッドはクラスオブジェクトではなくクラス名を比較している
rule.findbugs.ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD.name=危ないコード - インスタンスメソッドから static フィールドへの書き込み
rule.findbugs.TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED.name=正確性 - 型修飾子でアノテーションされていない値がその修飾子が付けられた値を必要とする場所で使われている
rule.findbugs.NS_NON_SHORT_CIRCUIT.name=危ないコード - 非短絡論理の疑わしい使用
rule.findbugs.VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT.name=正確性 - 書式文字列ための前の引数がない
rule.findbugs.SE_PRIVATE_READ_RESOLVE_NOT_INHERITED.name=危ないコード - サブクラスで継承できない private な readResolve メソッド
rule.findbugs.RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE.name=危ないコード - null でないことがわかっている値の冗長な null チェック
rule.findbugs.NM_LCASE_TOSTRING.name=正確性 - クラスは tostring() を定義しています。toString() にすべきですか?
rule.findbugs.HSC_HUGE_SHARED_STRING_CONSTANT.name=性能 - 複数のクラスファイルにわたって複製されている巨大な文字列定数
rule.findbugs.SE_TRANSIENT_FIELD_NOT_RESTORED.name=バッドプラクティス - 直列化復元によって設定されない transient フィールド
rule.findbugs.JLM_JSR166_LOCK_MONITORENTER.name=マルチスレッドの正確性 - Lock で同期化している
rule.findbugs.EQ_ALWAYS_TRUE.name=正確性 - equals メソッドは常に true を返す
rule.findbugs.ISC_INSTANTIATE_STATIC_CLASS.name=バッドプラクティス - static メソッドだけを提供するクラスの不必要なインスタンス化
rule.findbugs.ICAST_IDIV_CAST_TO_DOUBLE.name=危ないコード - 整数の除算の結果を double または float にキャストしている
rule.findbugs.RC_REF_COMPARISON_BAD_PRACTICE.name=バッドプラクティス - 定数への疑わしい参照比較
rule.findbugs.FI_EXPLICIT_INVOCATION.name=バッドプラクティス - ファイナライザの明示的な呼び出し
rule.findbugs.ESync_EMPTY_SYNC.name=マルチスレッドの正確性 - 空の synchronized ブロック
rule.findbugs.DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION.name=バッドプラクティス - コレクションを消去するために removeAll メソッドを使用しない
rule.findbugs.SE_BAD_FIELD.name=バッドプラクティス - 直列化可能クラスの非 transient で非直列化可能なインスタンスフィールド
rule.findbugs.NP_STORE_INTO_NONNULL_FIELD.name=正確性 - @NonNull でアノテートされたフィールドに null を格納している
rule.findbugs.IT_NO_SUCH_ELEMENT.name=バッドプラクティス - Iterator.next() が NoSuchElementException をスローできない
rule.findbugs.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER.name=セキュリティ - HTTP レスポンススプリッティング脆弱性
rule.findbugs.DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED.name=危ないコード - Thread オブジェクトが Runnable が期待されているところに渡されている
rule.findbugs.NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH.name=正確性 - null 値を例外経路で利用することが保証されている
rule.findbugs.RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE.name=危ないコード - null とわかっている値の冗長な null チェック
rule.findbugs.DMI_CALLING_NEXT_FROM_HASNEXT.name=正確性 - hasNext メソッドで next メソッドを呼び出している
rule.findbugs.HE_HASHCODE_USE_OBJECT_EQUALS.name=バッドプラクティス - hashCode メソッドを定義して Object.equals() を使用しているクラス
rule.findbugs.VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED.name=正確性 - printf スタイルの書式が期待されているところで MessageFormat が与えられている
rule.findbugs.NP_BOOLEAN_RETURN_NULL.name=バッドプラクティス - 戻り型が Boolean のメソッドが明示的に null を返している
rule.findbugs.RI_REDUNDANT_INTERFACES.name=危ないコード - スーパークラスと同じインタフェースを実装しているクラス
rule.findbugs.DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE.name=マルチスレッドの正確性 - ボクシングされたプリミティブ値の同期化
rule.findbugs.STCAL_STATIC_CALENDAR_INSTANCE.name=マルチスレッドの正確性 - static Calendar フィールド
rule.findbugs.RR_NOT_CHECKED.name=バッドプラクティス - InputStream.read() の戻り値を無視しているメソッド
rule.findbugs.IL_INFINITE_RECURSIVE_LOOP.name=正確性 - 明らかな無限再帰ループ
rule.findbugs.DMI_NONSERIALIZABLE_OBJECT_WRITTEN.name=危ないコード - ObjectOutput に書き込まれる非直列化可能オブジェクト
rule.findbugs.GC_UNCHECKED_TYPE_IN_GENERIC_CALL.name=バッドプラクティス - 検査されない型への総称呼び出し
rule.findbugs.IMA_INEFFICIENT_MEMBER_ACCESS.name=性能 - 所有クラスの private メンバー変数にアクセスしているメソッド
rule.findbugs.FI_PUBLIC_SHOULD_BE_PROTECTED.name=悪質なコード脆弱性 - ファイナライザは public ではなく protected にすべき
rule.findbugs.RV_CHECK_FOR_POSITIVE_INDEXOF.name=危ないコード - String.indexOf の結果が正かどうか確かめている
rule.findbugs.ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT.name=危ないコード - 符号なし右シフトを short/byte にキャストしている
rule.findbugs.DM_STRING_VOID_CTOR.name=性能 - 効率が悪い new String() コンストラクタを呼び出しているメソッド
rule.findbugs.RE_POSSIBLE_UNINTENDED_PATTERN.name=正確性 - 正規表現のために使われている "."
rule.findbugs.WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL.name=マルチスレッドの正確性 - クラスリテラルではなく getClass で同期化している
rule.findbugs.ICAST_BAD_SHIFT_AMOUNT.name=正確性 - 32ビット int の0から31の範囲を超えた量によるシフト
rule.findbugs.SF_SWITCH_FALLTHROUGH.name=危ないコード - 1つの case が次の case へと通り抜ける switch 文を発見した
rule.findbugs.DP_DO_INSIDE_DO_PRIVILEGED.name=悪質なコード脆弱性 - doPrivileged ブロック内で呼び出すべきメソッド
rule.findbugs.NO_NOTIFY_NOT_NOTIFYALL.name=マルチスレッドの正確性 - notifyAll メソッドではなく notify メソッドを使用している
rule.findbugs.SS_SHOULD_BE_STATIC.name=性能 - 読み出されないフィールド
rule.findbugs.DM_RUN_FINALIZERS_ON_EXIT.name=バッドプラクティス - 危険なメソッド runFinalizersOnExit を呼び出しているメソッド
rule.findbugs.MS_FINAL_PKGPROTECT.name=悪質なコード脆弱性 - final かつパッケージプロテクテッドにすべきフィールド
rule.findbugs.BC_BAD_CAST_TO_CONCRETE_COLLECTION.name=危ないコード - 具象コレクションへの疑わしいキャスト
rule.findbugs.BIT_IOR_OF_SIGNED_BYTE.name=正確性 - 符号付きバイト値のビット論理和
rule.findbugs.MSF_MUTABLE_SERVLET_FIELD.name=マルチスレッドの正確性 - 可変サーブレットフィールド
rule.findbugs.SE_BAD_FIELD_INNER_CLASS.name=バッドプラクティス - 非直列化可能クラスに直列化可能な内部クラスがある
rule.findbugs.BIT_ADD_OF_SIGNED_BYTE.name=正確性 - 符号付きバイト値のビット加算
rule.findbugs.FI_FINALIZER_ONLY_NULLS_FIELDS.name=バッドプラクティス - ファイナライザはフィールドを null にするだけ
rule.findbugs.DE_MIGHT_IGNORE.name=バッドプラクティス - 例外を無視しているかもしれないメソッド
rule.findbugs.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER.name=セキュリティ - 反射型クロスサイトスクリプティング脆弱性があるサーブレット
rule.findbugs.ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD.name=マルチスレッドの正確性 - フィールドを同期化でガードしようとする無駄な試み
rule.findbugs.SQL_BAD_PREPARED_STATEMENT_ACCESS.name=正確性 - インデックスが0で PreparedStatement にアクセスしようとしているメソッド
rule.findbugs.DM_CONVERT_CASE.name=国際化 - 呼び出したメソッドの Locale パラメータの使用を検討する
rule.findbugs.SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS.name=危ないコード - Serializable でないクラスの transient フィールド
rule.findbugs.NN_NAKED_NOTIFY.name=マルチスレッドの正確性 - 裸の notify メソッド
rule.findbugs.VA_FORMAT_STRING_MISSING_ARGUMENT.name=正確性 - 書式文字列は足りない引数を参照している
rule.findbugs.IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION.name=バッドプラクティス - スーパークラスは初期化中にサブクラスを使用している
rule.findbugs.SA_LOCAL_SELF_COMPARISON.name=正確性 - ローカル変数とそれ自身との自己比較
rule.findbugs.IM_BAD_CHECK_FOR_ODD.name=危ないコード - 負数で機能しない奇数チェック
rule.findbugs.NP_CLOSING_NULL.name=正確性 - 常に null 値のオブジェクトで close メソッドを呼び出している
rule.findbugs.XSS_REQUEST_PARAMETER_TO_JSP_WRITER.name=セキュリティ - 反射型クロスサイトスクリプティング脆弱性がある JSP
rule.findbugs.IS_FIELD_NOT_GUARDED.name=マルチスレッドの正確性 - 並行アクセスに対してガードされていないフィールド
rule.findbugs.DM_GC.name=性能 - 明示的なガベージコレクション
rule.findbugs.IM_MULTIPLYING_RESULT_OF_IREM.name=正確性 - 整数剰余の結果の整数乗算
rule.findbugs.SE_COMPARATOR_SHOULD_BE_SERIALIZABLE.name=バッドプラクティス - Comparator は Serializable を実装していない
rule.findbugs.HE_HASHCODE_NO_EQUALS.name=バッドプラクティス - hashCode メソッドを定義しているのに equals メソッドは定義していないクラス
rule.findbugs.MF_CLASS_MASKS_FIELD.name=正確性 - スーパークラスのフィールドを隠すフィールドを定義しているクラス
rule.findbugs.NM_VERY_CONFUSING_INTENTIONAL.name=バッドプラクティス - 非常に紛らわしい名前のメソッド (たぶん意図的)
rule.findbugs.SR_NOT_CHECKED.name=バッドプラクティス - InputStream.skip() の戻り値を無視しているメソッド
rule.findbugs.LI_LAZY_INIT_STATIC.name=マルチスレッドの正確性 - static フィールドの間違った遅延初期化
rule.findbugs.DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION.name=正確性 - ランタイムリテンションなしで、アノテーションの存在を調べるためにリフレクションを使用することはできない
rule.findbugs.ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH.name=バッドプラクティス - 例外経路でデータベースリソースのクローズに失敗するかもしれないメソッド
rule.findbugs.BIT_IOR.name=正確性 - 互換性のないビットマスク
rule.findbugs.ODR_OPEN_DATABASE_RESOURCE.name=バッドプラクティス - データベースリソースのクローズに失敗するかもしれないメソッド
rule.findbugs.IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN.name=正確性 - メソッドで読み取られずに上書きされているパラメータ
rule.findbugs.SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING.name=セキュリティ - PreparedStatement が定数でない文字列から生成されている
rule.findbugs.UUF_UNUSED_FIELD.name=性能 - 未使用のフィールド
rule.findbugs.RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE.name=正確性 - すでに利用していた値の null チェック
rule.findbugs.EQ_OTHER_USE_OBJECT.name=正確性 - Object.equals(Object) をオーバーライドしていない equals メソッドの定義
rule.findbugs.SP_SPIN_ON_FIELD.name=マルチスレッドの正確性 - スピンロックをしているメソッド
rule.findbugs.SI_INSTANCE_BEFORE_FINALS_ASSIGNED.name=バッドプラクティス - スタティックイニシャライザは、すべての static final フィールドが代入される前にインスタンスを作成する
rule.findbugs.NP_ALWAYS_NULL_EXCEPTION.name=正確性 - null 値を例外経路で利用している
rule.findbugs.MS_EXPOSE_REP.name=悪質なコード脆弱性 - 配列を返すことによって内部表現を暴露するかもしれない public static メソッド
rule.findbugs.VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN.name=危ないコード - Boolean 型でない引数を ％b 書式指示子を使用してフォーマットしている
rule.findbugs.MS_PKGPROTECT.name=悪質なコード脆弱性 - パッケージプロテクテッドにすべきフィールド
rule.findbugs.NP_NONNULL_RETURN_VIOLATION.name=正確性 - null を返すかもしれないメソッドが @NonNull 宣言されている
rule.findbugs.J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION.name=バッドプラクティス - HttpSession への非直列化可能オブジェクトの格納
rule.findbugs.NM_SAME_SIMPLE_NAME_AS_SUPERCLASS.name=バッドプラクティス - クラス名はスーパークラスの単純名を遮るべきではない
rule.findbugs.DMI_BLOCKING_METHODS_ON_URL.name=性能 - URL の equals メソッドと hashCode メソッドはブロックする
rule.findbugs.HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS.name=正確性 - ハッシュ化された文脈でハッシュ化できないクラスの使用がシグネチャで宣言されている
rule.findbugs.UR_UNINIT_READ.name=正確性 - コンストラクタで初期化されていないフィールドを読み出している
rule.findbugs.WA_NOT_IN_LOOP.name=マルチスレッドの正確性 - wait メソッドがループの中にない
rule.findbugs.DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR.name=正確性 - ScheduledThreadPoolExecutor の最大プールサイズを変えようとする無駄な試み
rule.findbugs.RV_RETURN_VALUE_IGNORED2.name=正確性 - 戻り値を無視しているメソッド
rule.findbugs.NM_FIELD_NAMING_CONVENTION.name=バッドプラクティス - フィールド名は小文字から始めるべき
rule.findbugs.FB_UNEXPECTED_WARNING.name=正確性 - FindBugs からの予期しない/望ましくない警告
rule.findbugs.BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR.name=正確性 - プリミティブ値が3項演算子のためにアンボクシングされて、型変換される
rule.findbugs.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED.name=悪質なコード脆弱性 - doPrivileged ブロック内で作成されるべきクラスローダ
rule.findbugs.NM_WRONG_PACKAGE.name=正確性 - パラメータの間違ったパッケージのために、スーパークラスのメソッドをオーバーライドしていないメソッド
rule.findbugs.IL_CONTAINER_ADDED_TO_ITSELF.name=正確性 - コレクションは自分自身を追加している
rule.findbugs.CI_CONFUSED_INHERITANCE.name=危ないコード - final なクラスが protected フィールドを宣言している
rule.findbugs.HE_USE_OF_UNHASHABLE_CLASS.name=正確性 - ハッシュデータ構造で hashCode メソッドのないクラスを使用している
rule.findbugs.IJU_SUITE_NOT_STATIC.name=正確性 - TestCase は 非 static な suite メソッドを実装している
rule.findbugs.RS_READOBJECT_SYNC.name=マルチスレッドの正確性 - readObject メソッドを同期化しているクラス
rule.findbugs.AM_CREATES_EMPTY_JAR_FILE_ENTRY.name=バッドプラクティス - 空の JAR ファイルエントリの作成
rule.findbugs.VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY.name=正確性 - 書式文字列を使用して役に立たない方法で配列をフォーマットしている
rule.findbugs.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW.name=正確性 - スローする switch 文のフォールスルーのために格納が無効になっている
rule.findbugs.RV_ABSOLUTE_VALUE_OF_HASHCODE.name=正確性 - 符号付き32ビットハッシュコードの絶対値を計算する間違った試み
rule.findbugs.EQ_DONT_DEFINE_EQUALS_FOR_ENUM.name=正確性 - 列挙型は共変な equals メソッドを定義している
rule.findbugs.SA_FIELD_DOUBLE_ASSIGNMENT.name=危ないコード - フィールドの二重代入
rule.findbugs.DMI_COLLECTION_OF_URLS.name=性能 - URL の Map や Set はひどい性能になる可能性がある
rule.findbugs.NM_SAME_SIMPLE_NAME_AS_INTERFACE.name=バッドプラクティス - クラス名は実装されたインタフェースの単純名を遮るべきではない
rule.findbugs.UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR.name=危ないコード - コンストラクタで初期化されていないフィールドを null チェックなしで null 値を利用している
rule.findbugs.TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK.name=正確性 - 型修飾子を付けているかもしれない値がその型修飾子を禁止する方法で常に使われている
rule.findbugs.SE_NONLONG_SERIALVERSIONID.name=バッドプラクティス - serialVersionUID が long ではない
rule.findbugs.RV_REM_OF_HASHCODE.name=危ないコード - ハッシュコードの剰余は負かもしれない
rule.findbugs.NS_DANGEROUS_NON_SHORT_CIRCUIT.name=危ないコード - 潜在的な非短絡論理の危険な使用
rule.findbugs.USM_USELESS_SUBCLASS_METHOD.name=危ないコード - 親クラスのメソッドに過剰に委譲しているメソッド
rule.findbugs.ITA_INEFFICIENT_TO_ARRAY.name=性能 - 長さが0の配列の引数で toArray メソッドを使用しているメソッド
rule.findbugs.DM_MONITOR_WAIT_ON_CONDITION.name=マルチスレッドの正確性 - Condition で wait メソッドを呼び出している
rule.findbugs.BOA_BADLY_OVERRIDDEN_ADAPTER.name=正確性 - スーパークラスの Adapter で実装されるメソッドを誤ってオーバーライドしているクラス
rule.findbugs.IC_INIT_CIRCULARITY.name=危ないコード - 初期化が循環している
rule.findbugs.NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER.name=バッドプラクティス - Java の後のバージョンのキーワードである識別子を使用している
rule.findbugs.EC_UNRELATED_CLASS_AND_INTERFACE.name=正確性 - equals メソッドを呼び出して無関係のクラスとインタフェースを比較している
rule.findbugs.TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK.name=正確性 - 型修飾子を付けていないかもしれない値がその型修飾子を必要とする方法で常に使われている
rule.findbugs.FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER.name=正確性 - NaN への等価性のための絶望的なテスト
rule.findbugs.NM_CONFUSING.name=バッドプラクティス - 紛らわしい名前のメソッド
rule.findbugs.VA_FORMAT_STRING_ARG_MISMATCH.name=正確性 - 書式文字列への引数の数と書式指示子の数が一致していない
rule.findbugs.NP_NULL_ON_SOME_PATH_EXCEPTION.name=正確性 - null 値を例外経路で利用している可能性がある
rule.findbugs.DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE.name=マルチスレッドの正確性 - デッドロックの原因になる可能性があるボクシングされたプリミティブ型の同期化
rule.findbugs.IJU_TEARDOWN_NO_SUPER.name=正確性 - TestCase は super.tearDown() を呼び出さない tearDown メソッドを実装している
rule.findbugs.SE_READ_RESOLVE_IS_STATIC.name=正確性 - readResolve メソッドが static メソッドとして宣言されている
rule.findbugs.NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE.name=危ないコード - null 値を実行不可能かもしれない分岐で利用している可能性がある
rule.findbugs.UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS.name=正確性 - 呼び出し不可能なメソッドが無名クラスで定義されている
rule.findbugs.VA_FORMAT_STRING_BAD_CONVERSION.name=正確性 - 与えられた引数の型は書式指示子に合致しません
rule.findbugs.EC_ARRAY_AND_NONARRAY.name=正確性 - equals メソッドを使用して配列と非配列を比較している
rule.findbugs.NM_BAD_EQUAL.name=正確性 - クラスは equal(Object) を定義しています。equals(Object) にすべきですか?
rule.findbugs.EC_UNRELATED_TYPES_USING_POINTER_EQUALITY.name=正確性 - 参照等価性を使用して異なる型を比較している
rule.findbugs.STI_INTERRUPTED_ON_CURRENTTHREAD.name=正確性 - interrupted メソッドを呼び出すために不要な currentThread メソッドを呼び出している
rule.findbugs.RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION.name=正確性 - 正規表現のために使われている File.separator
rule.findbugs.MWN_MISMATCHED_WAIT.name=マルチスレッドの正確性 - 不整合な wait メソッド
rule.findbugs.IL_INFINITE_LOOP.name=正確性 - 明らかな無限ループ
rule.findbugs.NP_IMMEDIATE_DEREFERENCE_OF_READLINE.name=危ないコード - readLine メソッドの結果をすぐに利用している
rule.findbugs.SC_START_IN_CTOR.name=マルチスレッドの正確性 - Thread.start() を呼び出しているコンストラクタ
rule.findbugs.STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE.name=マルチスレッドの正確性 - static DateFormat
rule.findbugs.HE_EQUALS_NO_HASHCODE.name=バッドプラクティス - equals メソッドは定義しているのに hashCode メソッドは定義していないクラス
rule.findbugs.UL_UNRELEASED_LOCK.name=マルチスレッドの正確性 - すべての経路でロックが解除されないメソッド
rule.findbugs.PZLA_PREFER_ZERO_LENGTH_ARRAYS.name=危ないコード - null ではなく長さが0の配列を返すことを検討する
rule.findbugs.SKIPPED_CLASS_TOO_BIG.name=実験用 - 解析するにはあまりにも大きいクラス
rule.findbugs.NP_ARGUMENT_MIGHT_BE_NULL.name=正確性 - null の引数をチェックしていないメソッド
rule.findbugs.UM_UNNECESSARY_MATH.name=性能 - 定数値で Math クラスの static メソッドを呼び出しているメソッド
rule.findbugs.NM_WRONG_PACKAGE_INTENTIONAL.name=バッドプラクティス - パラメータの間違ったパッケージのためにスーパークラスのメソッドをオーバーライドしていないメソッド
rule.findbugs.NP_NONNULL_PARAM_VIOLATION.name=正確性 - メソッド呼び出しは非 null パラメータに対して null を渡している
rule.findbugs.BIT_AND_ZZ.name=正確性 - ((...) & 0) == 0 なのか確かめている
rule.findbugs.HRS_REQUEST_PARAMETER_TO_COOKIE.name=セキュリティ - 信頼できない入力から形成された HTTP cookie
rule.findbugs.SQL_BAD_RESULTSET_ACCESS.name=正確性 - インデックスが0で ResultSet にアクセスしようとしているメソッド
rule.findbugs.INT_VACUOUS_COMPARISON.name=危ないコード - 整数値の無意味な比較
rule.findbugs.EQ_COMPARETO_USE_OBJECT_EQUALS.name=バッドプラクティス - compareTo(...) メソッドを定義して Object.equals() を使用しているクラス
rule.findbugs.DMI_HARDCODED_ABSOLUTE_FILENAME.name=危ないコード - ハードコードされた絶対パス名への参照がある
rule.findbugs.DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES.name=正確性 - コレクションは自分自身を含めるべきではない
rule.findbugs.URF_UNREAD_FIELD.name=性能 - 読み出されないフィールド
rule.findbugs.DLS_OVERWRITTEN_INCREMENT.name=正確性 - 上書きされたインクリメント
rule.findbugs.BIT_SIGNED_CHECK.name=バッドプラクティス - ビット演算の符号をチェックする
rule.findbugs.UWF_NULL_FIELD.name=正確性 - null に設定されるだけのフィールド
rule.findbugs.DE_MIGHT_DROP.name=バッドプラクティス - 例外を捨てているかもしれないメソッド
rule.findbugs.DMI_BAD_MONTH.name=正確性 - 月のための間違った定数値
rule.findbugs.MS_MUTABLE_ARRAY.name=悪質なコード脆弱性 - 可変配列のフィールド
rule.findbugs.SE_INNER_CLASS.name=バッドプラクティス - 直列化可能な内部クラス
rule.findbugs.OS_OPEN_STREAM_EXCEPTION_PATH.name=バッドプラクティス - 例外経路でストリームのクローズに失敗するかもしれないメソッド
rule.findbugs.AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION.name=マルチスレッドの正確性 - 並行抽象の呼び出しシーケンスはアトミックではないかもしれない
rule.findbugs.BX_UNBOXING_IMMEDIATELY_REBOXED.name=性能 - ボクシングされた値がアンボクシングされて、すぐに再ボクシングされる
rule.findbugs.CO_COMPARETO_RESULTS_MIN_VALUE.name=正確性 - compareTo()/compare() は Integer.MIN_VALUE を返す
rule.findbugs.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD.name=危ないコード - フィールドを遮るローカル変数への無効な代入
rule.findbugs.DMI_ARGUMENTS_WRONG_ORDER.name=正確性 - 逆にされた引数
rule.findbugs.DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE.name=正確性 - 正確に表されない double から構築された BigDecimal
rule.findbugs.DMI_DOH.name=正確性 - D'oh! 無意味なメソッド呼び出し
rule.findbugs.DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS.name=バッドプラクティス - エントリセットの要素を加えることは、Entry オブジェクトの再利用のために失敗するかもしれない
rule.findbugs.DM_DEFAULT_ENCODING.name=国際化 - デフォルトエンコーディングへの依存
rule.findbugs.ICAST_INT_2_LONG_AS_INSTANT.name=正確性 - int 値を long に変換して絶対時間として使用している
rule.findbugs.INT_BAD_COMPARISON_WITH_INT_VALUE.name=正確性 - int 値と long 定数との間違った比較
rule.findbugs.JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT.name=マルチスレッドの正確性 - util.concurrent 抽象でモニタスタイルの wait メソッドを使用している
rule.findbugs.NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD.name=危ないコード - 書き込まれていない public または protected フィールドの読み出し
rule.findbugs.OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE.name=実験用 - チェック例外でストリームやリソースのクリーンアップに失敗するかもしれないメソッド
rule.findbugs.PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS.name=バッドプラクティス - 繰り返しでエントリオブジェクトを再利用しない
rule.findbugs.RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE.name=正確性 - compareTo によって返された特定の値のコードチェック
rule.findbugs.RV_NEGATING_RESULT_OF_COMPARETO.name=バッドプラクティス - compareTo()/compare() の結果を無効にする
rule.findbugs.RV_RETURN_VALUE_IGNORED_INFERRED.name=危ないコード - メソッドは戻り値を無視しています、これは間違いではないですか?
rule.findbugs.SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD.name=正確性 - フィールドへの代入ではなくローカル変数への自己代入
rule.findbugs.URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD.name=危ないコード - 読み出されない public または protected フィールド
rule.findbugs.UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD.name=危ないコード - 未使用の public または protected フィールド
rule.findbugs.UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD.name=危ないコード - 書き込まてれいない public または protected フィールド
rule.findbugs.VA_FORMAT_STRING_USES_NEWLINE.name=バッドプラクティス - 書式文字列は \n よりも %n を使用するべき
rule.findbugs.VO_VOLATILE_INCREMENT.name=マルチスレッドの正確性 - volatile フィールドへのインクリメントはアトミックではない
