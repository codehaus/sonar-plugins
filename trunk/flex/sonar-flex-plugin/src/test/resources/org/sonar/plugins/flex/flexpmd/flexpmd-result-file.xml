<?xml version="1.0" encoding="UTF-8"?>
<pmd version="4.2.1" timestamp="Thu Dec 24 20:08:46 CET 2009">
   <file name="E:/TestHudson/flex/src/com/almirun/common/data/BatchedQuery.as">
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="Style Rules" package="com.almirun.common.data" class="BatchedQuery.as" externalInfoUrl="" priority="5">The copyright header is missing in this file</violation>
   </file>
   <file name="E:/TestHudson/flex/src/com/almirun/common/util/Inspector.as">
      <violation beginline="32" endline="32" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="Maintanability Rules" package="com.almirun.common.util" class="Inspector.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="50" endline="50" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="Maintanability Rules" package="com.almirun.common.util" class="Inspector.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="50" endline="50" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="Unused Rules" package="com.almirun.common.util" class="Inspector.as" externalInfoUrl="" priority="1">This private method (getObjNames) does not seem to be used.
      </violation>
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="Style Rules" package="com.almirun.common.util" class="Inspector.as" externalInfoUrl="" priority="5">The copyright header is missing in this file</violation>
   </file>
   <file name="E:/TestHudson/flex/src/com/almirun/common/events/LoremIpsumEvent.as">
      <violation beginline="7" endline="7" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.event.EventMissingCloneFunction" ruleset="Event Rules" package="com.almirun.common.events" class="LoremIpsumEvent.as" externalInfoUrl="" priority="1">The clone event must be overiden in a custom event. When creating your own custom Event class, you must override the inherited Event.clone() method in order for it to duplicate the properties of your custom class. If you do not set all the properties that you add in your event subclass, those properties will not have the correct values when the event is cloned. This is important because the Flex SDK clones events whenever redispatching takes place. </violation>
      <violation beginline="18" endline="18" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="Maintanability Rules" package="com.almirun.common.events" class="LoremIpsumEvent.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (_data).
        </violation>
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="Style Rules" package="com.almirun.common.events" class="LoremIpsumEvent.as" externalInfoUrl="" priority="5">The copyright header is missing in this file</violation>
   </file>
   <file name="E:/TestHudson/flex/src/com/almirun/common/util/loremipsum/LoremIpsumGenerator.as">
      <violation beginline="146" endline="146" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.EmptyPrivateMethod" ruleset="Unused Rules" package="com.almirun.common.util.loremipsum" class="LoremIpsumGenerator.as" externalInfoUrl="" priority="1">This private method (handleLoaderHttpStatusEvent) is used but its content is empty.
      </violation>
      <violation beginline="151" endline="151" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.EmptyPrivateMethod" ruleset="Unused Rules" package="com.almirun.common.util.loremipsum" class="LoremIpsumGenerator.as" externalInfoUrl="" priority="1">This private method (handleLoaderIOErrorEvent) is used but its content is empty.
      </violation>
      <violation beginline="170" endline="170" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.switchrules.SwitchStatementsShouldHaveDefault" ruleset="Switches Rules" package="com.almirun.common.util.loremipsum" class="LoremIpsumGenerator.as" externalInfoUrl="" priority="1">A switch statement does not contain a default statement. Switch statements should have a default label in order to detect corner cases</violation>
      <violation beginline="191" endline="191" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.switchrules.SwitchStatementsShouldHaveDefault" ruleset="Switches Rules" package="com.almirun.common.util.loremipsum" class="LoremIpsumGenerator.as" externalInfoUrl="" priority="1">A switch statement does not contain a default statement. Switch statements should have a default label in order to detect corner cases</violation>
      <violation beginline="15" endline="15" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="Sizing Rules" package="com.almirun.common.util.loremipsum" class="LoremIpsumGenerator.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="64" endline="64" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.ArrayFieldWithNoArrayElementType" ruleset="Maintanability Rules" package="com.almirun.common.util.loremipsum" class="LoremIpsumGenerator.as" externalInfoUrl="" priority="3">ArrayElementType metadata is not specified for this array-type field (cache).
        </violation>
      <violation beginline="155" endline="155" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="Sizing Rules" package="com.almirun.common.util.loremipsum" class="LoremIpsumGenerator.as" externalInfoUrl="" priority="3">This function is far too long (20 maximum, but 26 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="-1" endline="-1" begincolumn="0" endcolumn="0" rule="adobe.ac.pmd.rules.style.CopyrightMissing" ruleset="Style Rules" package="com.almirun.common.util.loremipsum" class="LoremIpsumGenerator.as" externalInfoUrl="" priority="5">The copyright header is missing in this file</violation>
      <violation beginline="124" endline="124" begincolumn="0" endcolumn="35" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="Naming Rules" package="com.almirun.common.util.loremipsum" class="LoremIpsumGenerator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 2 actually). Detects when a field, local, or parameter has a very short name</violation>
      <violation beginline="163" endline="163" begincolumn="0" endcolumn="19" rule="adobe.ac.pmd.rules.naming.TooShortVariable" ruleset="Naming Rules" package="com.almirun.common.util.loremipsum" class="LoremIpsumGenerator.as" externalInfoUrl="" priority="5">This variable name is too short (3 characters minimum, but 1 actually). Detects when a field, local, or parameter has a very short name</violation>
   </file>
</pmd>