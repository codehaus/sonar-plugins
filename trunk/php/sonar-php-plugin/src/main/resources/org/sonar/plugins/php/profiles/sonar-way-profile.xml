<?xml version="1.0" encoding="ISO-8859-1"?>
<profile>
  <name>Sonar Way</name>
  <language>php</language>
  <rules>

    <!-- PHPMD rules -->
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/CyclomaticComplexity]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/NPathComplexity]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveMethodLength]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveClassLength]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveParameterList]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessivePublicCount]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/TooManyFields]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/TooManyMethods]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveClassComplexity]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/ExitExpression]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/EvalExpression]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/GotoStatement]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/NumberOfChildren]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/DepthOfInheritance]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/CouplingBetweenObjects]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedPrivateField]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedLocalVariable]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedPrivateMethod]]></key>
    </rule>

    <!-- PHP CodeSniffer rules -->
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Classes.DuplicateClassName.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.EmptyStatement.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.EmptyStatement.NotAllowedWarning</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.ForLoopShouldBeWhileLoop.CanSimplify</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.JumbledIncrementer.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.UnconditionalIfStatement.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.UnnecessaryFinalModifier.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.UnusedFunctionParameter.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.UselessOverridingMethod.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.ControlStructures.InlineControlStructure.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.ControlStructures.InlineControlStructure.Discouraged</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Files.LineEndings.InvalidEOLChar</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Files.LineLength.TooLong</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Files.LineLength.MaxExceeded</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.DisallowMultipleStatements.SameLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.CallTimePassByReference.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Metrics.CyclomaticComplexity.MaxExceeded</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Metrics.CyclomaticComplexity.TooHigh</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Metrics.NestingLevel.MaxExceeded</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Metrics.NestingLevel.TooHigh</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.ConstructorName.OldStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.ConstructorName.OldStyleCall</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.NoSilencedErrors.Forbidden</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Strings.UnnecessaryStringConcat.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.WhiteSpace.DisallowTabIndent.TabsUsed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.WhiteSpace.ScopeIndent.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.BracketsNotRequired</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseIncludeOnce</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseInclude</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseRequireOnce</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseRequire</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.ValidDefaultValue.NotAtEnd</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.DuplicateProperty.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.SelfMemberReference.IncorrectCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.SelfMemberReference.NotUsed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.SelfMemberReference.SpaceBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.SelfMemberReference.SpaceAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDuplicateArgument.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Objects.ObjectInstantiation.NotAssigned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.CommentedOutCode.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.GlobalKeyword.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.NonExecutableCode.Unreachable</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.NonExecutableCode.ReturnNotRequired</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Scope.MemberVarScope.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Scope.StaticThisUsage.Found</key>
    </rule>
  </rules>
</profile>
