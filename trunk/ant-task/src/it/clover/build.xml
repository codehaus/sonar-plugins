<?xml version="1.0" encoding="UTF-8"?>
<project name="ant-clover" default="all" basedir="." xmlns:sonar="antlib:org.sonar.ant">

  <property name="src.dir" value="src"/>

  <property name="lib.dir" value="../ant-libs"/>

  <property name="lib.junit.dir" value="${lib.dir}/junit"/>
  <property name="lib.clover.dir" value="${lib.dir}/clover"/>

  <property name="build.dir" value="target"/>

  <property name="classes.dir" value="${build.dir}/classes"/>

  <property name="reports.dir" value="${build.dir}/reports"/>
  <property name="reports.junit.xml.dir" value="${reports.dir}/junit/xml"/>
  <property name="reports.junit.html.dir" value="${reports.dir}/junit/html"/>

  <property name="reports.coverage.data.file" value="${reports.dir}/clover/clover.db"/>
  <property name="reports.coverage.xml.dir" value="${reports.dir}/clover/xml"/>
  <property name="reports.coverage.html.dir" value="${reports.dir}/clover/html"/>

  <path id="classpath">
    <fileset dir="${lib.junit.dir}" includes="*.jar"/>
  </path>

  <path id="clover.classpath">
    <fileset dir="${lib.clover.dir}">
      <include name="*.jar" />
    </fileset>
  </path>

  <taskdef classpathref="clover.classpath" resource="cloverlib.xml" />

  <target name="with.clover">
    <clover-setup initstring="${reports.coverage.data.file}" />
  </target>

  <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
    <classpath>
      <path refid="classpath"/>
    </classpath>
  </taskdef>

  <taskdef name="junitreport" classname="org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator">
    <classpath>
      <path refid="classpath"/>
    </classpath>
  </taskdef>

  <target name="clean" description="Remove all files created by the build/test process.">
    <delete dir="${build.dir}" />
    <delete dir="${reports.dir}" />
  </target>

  <target name="init" depends="with.clover">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${classes.dir}" />
    <mkdir dir="${reports.dir}" />
    <mkdir dir="${reports.junit.xml.dir}" />
    <mkdir dir="${reports.junit.html.dir}" />
    <mkdir dir="${reports.coverage.xml.dir}" />
    <mkdir dir="${reports.coverage.html.dir}" />
  </target>

  <target name="compile" depends="init">
    <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" fork="true" debug="true" includeAntRuntime="false" />
  </target>

  <target name="test" depends="compile">
    <junit fork="yes" dir="${basedir}" failureProperty="test.failed">
      <classpath location="${classes.dir}" />
      <classpath refid="clover.classpath" />
      <classpath refid="classpath" />

      <formatter type="xml" />
      <batchtest todir="${reports.junit.xml.dir}">
        <fileset dir="${src.dir}">
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
    </junit>

    <junitreport todir="${reports.junit.html.dir}">
      <fileset dir="${reports.junit.xml.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${reports.junit.html.dir}" />
    </junitreport>
  </target>

  <target name="coverage.xml" depends="init">
    <clover-report>
      <current outfile="${reports.coverage.xml.dir}/coverage.xml">
        <format type="xml"/>
      </current>
    </clover-report>
  </target>

  <target name="coverage.html" depends="init">
    <clover-html-report outdir="${reports.coverage.html.dir}"/>
  </target>

  <target name="reports" depends="coverage.xml,coverage.html" />

  <target name="sonar">
    <!-- Import Sonar Ant tasks -->
    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
      <!-- TODO remove hardcoded version -->
      <classpath path="../../../target/sonar-ant-task-0.1-SNAPSHOT.jar" />
    </taskdef>

    <!-- Execute Sonar -->
    <sonar:sonar workDir="${build.dir}/sonar-work" key="org.sonar.ant.tests:clover" version="0.1-SNAPSHOT">
      <property key="sonar.dynamicAnalysis" value="reuseReports" />
      <property key="sonar.core.codeCoveragePlugin" value="clover" />
      <property key="sonar.clover.reportPath" value="${reports.coverage.xml.dir}/coverage.xml" />

      <property key="sonar.surefire.reportsPath" value="${reports.junit.xml.dir}" />

      <sources>
        <path location="${src.dir}"/>
      </sources>
    </sonar:sonar>
  </target>

  <target name="all"
          depends="clean,compile,test,reports,sonar"
          description="Compile, run the tests and generate JUnit and coverage reports." />

</project>
