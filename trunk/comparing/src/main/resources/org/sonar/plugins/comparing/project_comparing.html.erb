<% # Define utils method
   def get_values_for_language(project, metric) 
     result = nil

     measure = ProjectMeasure.find(:first, :conditions => ['snapshot_id IS NULL AND metric_id = ?', metric.id])
     if measure != nil
       aggregates_tab = measure.data.split('|')
       for aggregate in aggregates_tab
         aggregate_split = aggregate.split('=')
         if project.language == aggregate_split[0]
           tampon = aggregate_split[1].split(';')
           result = tampon[0]
         end
       end
     end

     result
   end 

   def get_values_for_project(metric, projectId)
     snapshot_project = Snapshot.find(:first, 
        :include => 'project', 
        :conditions => ['projects.id = ? AND islast = ?', projectId, true])
     measure = ProjectMeasure.find(:first, 
        :joins => :snapshot,
        :conditions => ['snapshots.id = ? and metric_id = ?', snapshot_project.id, metric.id])
     result = nil
     
     if measure != nil
       result = measure.value
     else
       result = 3
     end

     result     
   end

   def create_overview_widget(project, metrics_tab, title, qualitative)
     widget =  '<div class="block"><div class="widget-title" id="widget_title">'
     widget += title
     widget += '</div>'
     widget += '<div class="widget1" style="height:100%;"><div class="widget">'
     widget += '<br /><table align="center" cellspacing="5px" cellpadding="5px" class="data">'
     widget += '<thead><tr><th align="center" class="right" width="175px">&nbsp;</th>'
     widget += '<th align="center" class="center" width="150px"><h4 style="font-size: 12px;">Project value</h4></th>'
     widget += '<th align="center" class="center" width="150px"><h4 style="font-size: 12px;">'
     if params[:projectId] != nil && params[:projectId] != ''
       project = Project.find(:first, 
            :conditions => ["id = ?", params[:projectId]])
       widget += project.name
       widget += ' value'
     else
       widget += 'Average value'
     end
     widget += '</h4></th></thead><tbody>'
     position = 0
     for metric in metrics_tab
       cell = create_gridline(project, metric, position)
       if cell != nil
         widget += cell
         position += 1
       end
     end
     widget += '</tbody></table></div></div></div>'

     widget
   end

   def create_gridline(project, metric_key, position)
     # Load the metric matches with the metric_key
     metric = metric(metric_key)
     measure = measure(metric_key)

     measure_tab = nil
     if params[:projectId] != nil && params[:projectId] != ''
       measure_tab = get_values_for_project(metric, params[:projectId])
     else
       # Load the aggregate nbloc value for the language use by the current project
       measure_tab = get_values_for_language(project, metric('aggregate_' + metric_key))
     end

     cell = nil
     if measure_tab != nil
       if measure != nil
         if (position % 2) == 1
           cell =  '<tr class="odd">'
         else
           cell =  '<tr class="even">'
         end
         cell += '  <td align="left"><h4 style="font-size: 12px;">'
         cell += metric.short_name
         cell += '  </h4></td>'
         cell += '  <td align="right">'
     
         measure_average = nil
         if metric.val_type == 'INT'
           measure_average = measure_tab.to_f.round
         else
           measure_average = measure_tab.to_f.round(1)
         end
         cell += create_project_cell(metric, measure_average)
         cell += '  </td>'
         cell += '  <td align="right">'
         cell += '    <table align="center" width="65px"><tr><td align="right" width="100%"><b>'
         cell += number_with_delimiter(measure_average)
         cell += '    </b></td></tr></table>'
         cell += '  </td></tr>'

       end
     end

     cell     
   end

   def create_project_cell(metric, valueCompare) 
     cell =  '<table align="center" width="150px">'
     color = get_color(metric, valueCompare)
     cell += '  <tr><td style="color: '
     cell += color
     cell += ';" align="right" width="50%"><b>'
     measure = nil
     variation = nil
     if metric.val_type == 'INT'
       measure = measure(metric).value.to_i
       variation = measure - valueCompare
     else
       measure = measure(metric).value.to_f
       variation = (measure - valueCompare).round(1)
     end
     cell += number_with_delimiter(measure)
     cell += '  </b>&nbsp;</td>'
     variation_str = nil
     if variation < 0
       variation_str = number_with_delimiter(variation)
     else
       variation_str =  '+'
       variation_str += number_with_delimiter(variation)
     end
     cell += '<td style="color: '
     cell += color
     cell += ';" align="left" width="50%"><b>(' + variation_str + ')</b></td></tr>'
     cell += '</table>'

     cell
   end

   def get_color(metric, valueCompare)
      color = 'gray'
      measure_tmp = measure(metric)
      if measure_tmp != nil
        if metric.qualitative == true
          if measure(metric).value > valueCompare
             if metric.direction < 0
                color = 'red'
             else
                color = 'green'
             end
          else
             if metric.direction < 0
                color = 'green'
             else
                color = 'red'
             end
          end
       end
     end

     color
   end

   def get_imagename_for_compare(metric, valueCompare) 
     image_name = nil
     measure = measure(metric)
     if measure.value > valueCompare
       image_name = 'plus_'
     else
       image_name = 'minus_'
     end
     image_name += get_color(metric, valueCompare)
     image_name += '.png'

     image_name
   end 

%>

<div id="dashboard">
  <div style="width: 100%;display: block; float: none">

<% measure_test = ProjectMeasure.find(:all, :conditions => ['snapshot_id IS NULL AND metric_id = ?', metric('global_project').id])
   if measure_test[0] == nil   %>

    <div class="warning" id="warning">
       <span id="warningmsg">Run one analysis to compute the aggregate values.</span>
    </div>

<% else %>

    <!-- the right margin with 1px is a trick for IE. See SONAR-2637 -->
    <div class="dashboard-column-wrapper" style="width: 50%;margin: 0 -1px 0 0;">
      <div class="dashboard-column" id="dashboard-column-1" style="margin: 0 5px 0 0px;">
        <div class="block"><div class="widget-title" id="widget_title">Informations</div>
        <div class="widget1" style="height:100%;"><div class="widget">
          <div class="notice" id="info">
             <span id="infomsg">Average values computed from <b><%= get_values_for_language(@project, metric('global_project')) -%></b> projects</span>
          </div>
          <br />
          Choose a project to compare measures: 
          <form method="GET" action="<%= url_for :id => @resource.id -%>" style="display: inline" class="spacer-left">
            <input type="hidden" name="page" value="project_overview"/>
<%          projects = Project.find(:all, 
                :conditions => ["root_id IS NULL AND scope = 'PRJ' AND qualifier = 'TRK' AND language = ?", @project.language],
                :order => 'name ASC') %>
            <select id="project-id" name="projectId" onchange="submit()" class="small">
              <option value="">Average</option>
<%            for project in projects %>
                <option value="<%= project.id -%>"
<%              if project.id.to_s == params[:projectId] %>
                  selected
<%              end %>><%= project.name -%></option>
<%            end %>
            </select>
          </form>
        </div></div></div>
        <%= create_overview_widget(@project, ['ncloc', 'files', 'functions', 'statements'], 'Size', false) %>
        <%= create_overview_widget(@project, ['violations_density', 'violations', 'blocker_violations', 'critical_violations', 'major_violations', 'minor_violations', 'info_violations'], 'Violations', true) %>
      </div>
    </div>

    <div class="dashboard-column-wrapper" style="width: 50%;margin: 0 -1px 0 0;">
      <div class="dashboard-column" id="dashboard-column-2" style="margin: 0 0px 0 5px;">
        <%= create_overview_widget(@project, ['complexity', 'function_complexity', 'file_complexity'], 'Complexity', true) %>
        <%= create_overview_widget(@project, ['duplicated_lines_density', 'duplicated_lines', 'duplicated_blocks', 'duplicated_files'], 'Duplication', true) %>
        <%= create_overview_widget(@project, ['comment_lines_density', 'comment_lines', 'public_documented_api_density', 'public_undocumented_api'], 'Documentation', true) %>
      </div>
    </div>

<% end %>

  </div>
</div>