<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.codehaus.sonar-plugins</groupId>
    <artifactId>parent</artifactId>
    <version>13</version>
    <relativePath>../parent</relativePath>
  </parent>

  <artifactId>sonar-scala-plugin</artifactId>
  <packaging>sonar-plugin</packaging>
  <version>0.1-SNAPSHOT</version>

  <name>Sonar Scala Plugin</name>
  <description>Enables analysis of Scala projects into Sonar.</description>
  <url>http://docs.codehaus.org/display/SONAR/Scala+Plugin</url>
  <inceptionYear>2011</inceptionYear>
  <organization>
    <name>Felix Müller</name>
  </organization>

  <licenses>
    <license>
      <name>GNU LGPL 3</name>
      <url>http://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>fmueller</id>
      <name>Felix Müller</name>
      <email>felix.mueller.berlin@googlemail.com</email>
    </developer>
  </developers>

  <scm>
    <connection>scm:svn:http://svn.codehaus.org/sonar-plugins/trunk/scala</connection>
    <developerConnection>scm:svn:https://svn.codehaus.org/sonar-plugins/trunk/scala</developerConnection>
    <url>scm:svn:https://svn.codehaus.org/sonar-plugins/trunk/scala</url>
  </scm>

  <issueManagement>
    <system>JIRA</system>
    <url>http://jira.codehaus.org/browse/SONARPLUGINS/component/14772</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>scala-tools</id>
      <name>Scala Tools</name>
      <url>http://scala-tools.org/repo-releases/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <sonar.version>2.9</sonar.version>
    <sonar.pluginKey>scala</sonar.pluginKey>
    <sonar.pluginName>Scala</sonar.pluginName>
    <sonar.pluginClass>org.sonar.plugins.scala.ScalaPlugin</sonar.pluginClass>

    <license.mailto>felix.mueller.berlin@googlemail.com</license.mailto>

    <scala.version>2.9.1</scala.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scalariform</groupId>
      <artifactId>scalariform_${scala.version}</artifactId>
      <version>0.1.1</version>
    </dependency>

    <!-- unit tests -->
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-testing-harness</artifactId>
      <version>${sonar.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.version}</artifactId>
      <version>1.6.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
    	<groupId>org.apache.maven</groupId>
    	<artifactId>maven-project</artifactId>
    	<version>2.2.1</version>
    	<scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.sonar-plugins.pdf-report</groupId>
          <artifactId>maven-pdfreport-plugin</artifactId>
          <version>1.2</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>1.0-beta-2</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.sonar</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>2.9</version>
        </plugin>

        <!--
          This plugin's configuration is used to store Eclipse m2e settings 
          only. It has no influence on the Maven build itself.
        -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.scala-tools</groupId>
                    <artifactId>maven-scala-plugin</artifactId>
                    <versionRange>[2.15.2,)</versionRange>
                    <goals>
                      <goal>testCompile</goal>
                      <goal>compile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.sonar</groupId>
                    <artifactId>
                      sonar-packaging-maven-plugin
                    </artifactId>
                    <versionRange>[1.1,)</versionRange>
                    <goals>
                      <goal>check-dependencies</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.mycila.maven-license-plugin</groupId>
                    <artifactId>maven-license-plugin</artifactId>
                    <versionRange>[1.9.0,)</versionRange>
                    <goals>
                      <goal>check</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.2</version>
        <executions>
          <execution>
            <id>scala-compile</id>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
        <version>1.9.0</version>
        <configuration>
          <includes>
            <include>src/main/java/**</include>
            <include>src/test/java/**</include>
            <include>src/main/scala/**</include>
            <include>src/test/scala/**</include>
          </includes>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
            <scala>SLASHSTAR_STYLE</scala>
          </mapping>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <includes>
            <include>**/*Spec.class</include>
            <include>**/*Test.class</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
