<?xml version="1.0" encoding="ISO-8859-1"?>
<profile>
  <name>PHP_CodeSniffer rules</name>
  <language>php</language>
  <rules>
    <rule priority="MAJOR">
      <key>Generic.CodeAnalysis.EmptyStatement.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmptyStatementNotAllowed</name>
      <configKey>rulesets/EmptyStatement</configKey>
      <description><![CDATA[Empty %s statement detected]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.CodeAnalysis.ForLoopShouldBeWhileLoop.CanSimplify</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopShouldBeWhileLoopCanSimplify</name>
      <configKey>rulesets/ForLoopShouldBeWhileLoop</configKey>
      <description><![CDATA[This FOR loop can be simplified to a WHILE loop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopWithTestFunctionCallNotAllowed</name>
      <configKey>rulesets/ForLoopWithTestFunctionCall</configKey>
      <description><![CDATA[Avoid function calls in a FOR loop test part]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.CodeAnalysis.JumbledIncrementer.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>JumbledIncrementerFound</name>
      <configKey>rulesets/JumbledIncrementer</configKey>
      <description><![CDATA[Loop incrementor (%s) jumbling with inner loop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.CodeAnalysis.UnconditionalIfStatement.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>UnconditionalIfStatementFound</name>
      <configKey>rulesets/UnconditionalIfStatement</configKey>
      <description><![CDATA[Avoid IF statements that are always true or false]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.CodeAnalysis.UnnecessaryFinalModifier.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>UnnecessaryFinalModifierFound</name>
      <configKey>rulesets/UnnecessaryFinalModifier</configKey>
      <description><![CDATA[Unnecessary FINAL modifier in FINAL class]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.CodeAnalysis.UnusedFunctionParameter.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>UnusedFunctionParameterFound</name>
      <configKey>rulesets/UnusedFunctionParameter</configKey>
      <description><![CDATA[The method parameter %s is never used]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Commenting.Todo.TaskFound</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>Todotyp</name>
      <configKey>rulesets/Todo</configKey>
      <description><![CDATA[Comment refers to a TODO task]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Files.LineEndings.InvalidEOLChar</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LineEndingsInvalidEOLChar</name>
      <configKey>rulesets/LineEndings</configKey>
      <description><![CDATA[End of line character is invalid; expected "%s" but found "%s]]></description>
      <parameters>
        <parameter>
          <key>eolChar</key>
          <value>aa</value>
        </parameter>
      </parameters>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Files.LineLength.MaxExceeded</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LineLengthMaxExceeded</name>
      <configKey>rulesets/LineLength</configKey>
      <description><![CDATA[Line exceeds maximum limit of %s characters; contains %s characters]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Formatting.DisallowMultipleStatements.SameLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowMultipleStatementsSameLine</name>
      <configKey>rulesets/DisallowMultipleStatements</configKey>
      <description><![CDATA[Each PHP statement must be on a line by itself]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Formatting.MultipleStatementAlignment.Incorrect</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultipleStatementAlignmenttyp</name>
      <configKey>rulesets/MultipleStatementAlignment</configKey>
      <description><![CDATA[Equals sign not aligned correctly; expected %s but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Formatting.NoSpaceAfterCast.SpaceFound</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>NoSpaceAfterCastSpaceFound</name>
      <configKey>rulesets/NoSpaceAfterCast</configKey>
      <description><![CDATA[A cast statement must not be followed by a space]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Formatting.SpaceAfterCast.NoSpace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SpaceAfterCastNoSpace</name>
      <configKey>rulesets/SpaceAfterCast</configKey>
      <description><![CDATA[A cast statement must be followed by a single space]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Formatting.SpaceAfterCast.TooMuchSpace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SpaceAfterCastTooMuchSpace</name>
      <configKey>rulesets/SpaceAfterCast</configKey>
      <description><![CDATA[A cast statement must be followed by a single space]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.CallTimePassByReference.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>CallTimePassByReferenceNotAllowed</name>
      <configKey>rulesets/CallTimePassByReference</configKey>
      <description><![CDATA[Call-time pass-by-reference calls are prohibited]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.FunctionCallArgumentSpacing.SpaceBeforeComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallArgumentSpacingSpaceBeforeComma</name>
      <configKey>rulesets/FunctionCallArgumentSpacing</configKey>
      <description><![CDATA[Space found before comma in function call]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallArgumentSpacingNoSpaceAfterComma</name>
      <configKey>rulesets/FunctionCallArgumentSpacing</configKey>
      <description><![CDATA[No space found after comma in function call]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallArgumentSpacingTooMuchSpaceAfterComma</name>
      <configKey>rulesets/FunctionCallArgumentSpacing</configKey>
      <description><![CDATA[Expected 1 space after comma in function call; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceBeforeEquals</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallArgumentSpacingNoSpaceBeforeEquals</name>
      <configKey>rulesets/FunctionCallArgumentSpacing</configKey>
      <description><![CDATA[Expected 1 space before = sign of default value]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterEquals</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallArgumentSpacingNoSpaceAfterEquals</name>
      <configKey>rulesets/FunctionCallArgumentSpacing</configKey>
      <description><![CDATA[Expected 1 space after = sign of default value]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpeningFunctionBraceBsdAllmanBraceOnSameLine</name>
      <configKey>rulesets/OpeningFunctionBraceBsdAllman</configKey>
      <description><![CDATA[Opening brace should be on a new line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceSpacing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpeningFunctionBraceBsdAllmanBraceSpacing</name>
      <configKey>rulesets/OpeningFunctionBraceBsdAllman</configKey>
      <description><![CDATA[Opening brace should be on the line after the declaration; found %s blank line(s)]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpeningFunctionBraceBsdAllmanBraceIndent</name>
      <configKey>rulesets/OpeningFunctionBraceBsdAllman</configKey>
      <description><![CDATA[Opening brace indented incorrectly; expected %s spaces]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpeningFunctionBraceKernighanRitchieBraceOnNewLine</name>
      <configKey>rulesets/OpeningFunctionBraceKernighanRitchie</configKey>
      <description><![CDATA[Opening brace should be on the same line as the declaration]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpeningFunctionBraceKernighanRitchieSpaceBeforeBrace</name>
      <configKey>rulesets/OpeningFunctionBraceKernighanRitchie</configKey>
      <description><![CDATA[Expected 1 space between the closing parenthesis and the opening brace; found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpeningFunctionBraceKernighanRitchieSpaceBeforeBrace</name>
      <configKey>rulesets/OpeningFunctionBraceKernighanRitchie</configKey>
      <description><![CDATA[Expected a single space character between closing parenthesis and opening brace; found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Metrics.CyclomaticComplexity.MaxExceeded</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>CyclomaticComplexityMaxExceeded</name>
      <configKey>rulesets/CyclomaticComplexity</configKey>
      <description><![CDATA[Function\'s cyclomatic complexity (%s) exceeds allowed maximum of %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Metrics.NestingLevel.MaxExceeded</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>NestingLevelMaxExceeded</name>
      <configKey>rulesets/NestingLevel</configKey>
      <description><![CDATA[Function\'s nesting level (%s) exceeds allowed maximum of %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.NamingConventions.ConstructorName.OldStyle</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ConstructorNameOldStyle</name>
      <configKey>rulesets/ConstructorName</configKey>
      <description><![CDATA[Class PHP_CodeSniffer_Standards_AbstractScopeSniff not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.NamingConventions.ConstructorName.OldStyleCall</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ConstructorNameOldStyleCall</name>
      <configKey>rulesets/ConstructorName</configKey>
      <description><![CDATA[PHP4 style calls to parent constructors are not allowed; use "parent::__construct()" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>UpperCaseConstantNameClassConstantNotUpperCase</name>
      <configKey>rulesets/UpperCaseConstantName</configKey>
      <description><![CDATA[Class constants must be uppercase; expected %s but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>UpperCaseConstantNameConstantNotUpperCase</name>
      <configKey>rulesets/UpperCaseConstantName</configKey>
      <description><![CDATA[Constants must be uppercase; expected %s but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>UpperCaseConstantNameConstantNotUpperCase</name>
      <configKey>rulesets/UpperCaseConstantName</configKey>
      <description><![CDATA[Constants must be uppercase; expected %s but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.PHP.DisallowShortOpenTag.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowShortOpenTagFound</name>
      <configKey>rulesets/DisallowShortOpenTag</configKey>
      <description><![CDATA[Short PHP opening tag used; expected "<?php" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.PHP.DisallowShortOpenTag.EchoFound</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowShortOpenTagEchoFound</name>
      <configKey>rulesets/DisallowShortOpenTag</configKey>
      <description><![CDATA[Short PHP opening tag used with echo; expected "<?php echo %s ..." but found "%s %s ...]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.PHP.ForbiddenFunctions.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForbiddenFunctionstyp</name>
      <configKey>rulesets/ForbiddenFunctions</configKey>
      <description><![CDATA[The use of function %s() is ]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.PHP.LowerCaseConstant.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LowerCaseConstantFound</name>
      <configKey>rulesets/LowerCaseConstant</configKey>
      <description><![CDATA[TRUE]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.PHP.NoSilencedErrors.Forbidden</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>NoSilencedErrorsForbidden</name>
      <configKey>rulesets/NoSilencedErrors</configKey>
      <description><![CDATA[Silencing errors is forbidden]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.PHP.NoSilencedErrors.Discouraged</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>NoSilencedErrorsDiscouraged</name>
      <configKey>rulesets/NoSilencedErrors</configKey>
      <description><![CDATA[Silencing errors is discouraged]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.PHP.UpperCaseConstant.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>UpperCaseConstantFound</name>
      <configKey>rulesets/UpperCaseConstant</configKey>
      <description><![CDATA[TRUE]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.Strings.UnnecessaryStringConcat.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>UnnecessaryStringConcatFound</name>
      <configKey>rulesets/UnnecessaryStringConcat</configKey>
      <description><![CDATA[String concat is not required here; use a single string instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.VersionControl.SubversionProperties.Unexpected</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SubversionPropertiesUnexpected</name>
      <configKey>rulesets/SubversionProperties</configKey>
      <description><![CDATA[Unexpected Subversion property "%s" = "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.VersionControl.SubversionProperties.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SubversionPropertiesMissing</name>
      <configKey>rulesets/SubversionProperties</configKey>
      <description><![CDATA[Missing Subversion property "%s" = "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.VersionControl.SubversionProperties.NoMatch</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SubversionPropertiesNoMatch</name>
      <configKey>rulesets/SubversionProperties</configKey>
      <description><![CDATA[Subversion property "%s" = "%s" does not match "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.VersionControl.SubversionProperties.</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SubversionProperties</name>
      <configKey>rulesets/SubversionProperties</configKey>
      <description><![CDATA[Error opening file; could not get Subversion properties]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.WhiteSpace.DisallowTabIndent.TabsUsed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowTabIndentTabsUsed</name>
      <configKey>rulesets/DisallowTabIndent</configKey>
      <description><![CDATA[Spaces must be used to indent lines; tabs are not allowed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.WhiteSpace.ScopeIndent.Incorrect</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ScopeIndentIncorrect</name>
      <configKey>rulesets/ScopeIndent</configKey>
      <description><![CDATA[Line indented incorrectly; expected %s spaces]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Generic.WhiteSpace.ScopeIndent.Incorrect</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ScopeIndenttyp</name>
      <configKey>rulesets/ScopeIndent</configKey>
      <description><![CDATA[Line indented incorrectly; expected ]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Channels.ChannelException.WrongExceptionType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ChannelExceptionWrongExceptionType</name>
      <configKey>rulesets/ChannelException</configKey>
      <description><![CDATA[Channel actions can only throw ChannelException; found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Channels.DisallowSelfActions.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowSelfActionsFound</name>
      <configKey>rulesets/DisallowSelfActions</configKey>
      <description><![CDATA[Static calls to public methods in Action classes must not use the self keyword; use %s::%s() instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Channels.IncludeSystem.NotIncludedCall</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncludeSystemNotIncludedCall</name>
      <configKey>rulesets/IncludeSystem</configKey>
      <description><![CDATA[Class PHP_CodeSniffer_Standards_AbstractScopeSniff not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Channels.IncludeSystem.NotIncludedExtends</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncludeSystemNotIncludedExtends</name>
      <configKey>rulesets/IncludeSystem</configKey>
      <description><![CDATA[Class extends non-included class or system "%s"; include system with Channels::includeSystem() or include class with require_once]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Channels.IncludeSystem.NotIncludedCall</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncludeSystemNotIncludedCall</name>
      <configKey>rulesets/IncludeSystem</configKey>
      <description><![CDATA[Static method called on non-included class or system "%s"; include system with Channels::includeSystem() or include class with require_once]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Channels.UnusedSystem.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>UnusedSystemFound</name>
      <configKey>rulesets/UnusedSystem</configKey>
      <description><![CDATA[Included system "%s" is never used]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Commenting.FunctionComment.ApiNotFirst</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentApiNotFirst</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Class Squiz_Sniffs_Commenting_FunctionCommentSniff not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Commenting.FunctionComment.ApiSpacing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentApiSpacing</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[There must be one blank line before the @api tag in a function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Commenting.FunctionComment.ApiTagSpacing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentApiTagSpacing</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[There must be no blank line before the @%s tag in a function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Commenting.FunctionComment.TagNotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentTagNotAllowed</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[@%s tag is not allowed in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Commenting.FunctionComment.ApiNotLast</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentApiNotLast</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[The @api tags must be the last tags in a function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Commenting.FunctionComment.ApiTagIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentApiTagIndent</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[@%s tag indented incorrectly; expected %s spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.CSS.BrowserSpecificStyles.ForbiddenStyle</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BrowserSpecificStylesForbiddenStyle</name>
      <configKey>rulesets/BrowserSpecificStyles</configKey>
      <description><![CDATA[Browser-specific styles are not allowed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Debug.DebugCode.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DebugCodeFound</name>
      <configKey>rulesets/DebugCode</configKey>
      <description><![CDATA[Call to debug function Debug::%s() must be removed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Debug.FirebugConsole.ConflictFound</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FirebugConsoleConflictFound</name>
      <configKey>rulesets/FirebugConsole</configKey>
      <description><![CDATA[Variables]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Objects.AssignThis.NotSelf</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>AssignThisNotSelf</name>
      <configKey>rulesets/AssignThis</configKey>
      <description><![CDATA[Keyword "this" can only be assigned to a variable called "self]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Objects.CreateWidgetTypeCallback.FirstArgNotCallback</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>CreateWidgetTypeCallbackFirstArgNotCallback</name>
      <configKey>rulesets/CreateWidgetTypeCallback</configKey>
      <description><![CDATA[The first argument of the create() method of a widget type must be called "callback]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Objects.CreateWidgetTypeCallback.ReturnValue</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>CreateWidgetTypeCallbackReturnValue</name>
      <configKey>rulesets/CreateWidgetTypeCallback</configKey>
      <description><![CDATA[The create() method of a widget type must not return a value]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Objects.CreateWidgetTypeCallback.FirstArgNotSelf</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>CreateWidgetTypeCallbackFirstArgNotSelf</name>
      <configKey>rulesets/CreateWidgetTypeCallback</configKey>
      <description><![CDATA[The first argument passed to the callback function must be "this" or "self]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Objects.CreateWidgetTypeCallback.NoReturn</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>CreateWidgetTypeCallbackNoReturn</name>
      <configKey>rulesets/CreateWidgetTypeCallback</configKey>
      <description><![CDATA[The call to the callback function must be followed by a return statement if it is not the last statement in the create() method]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Objects.CreateWidgetTypeCallback.CallbackNotCalled</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>CreateWidgetTypeCallbackCallbackNotCalled</name>
      <configKey>rulesets/CreateWidgetTypeCallback</configKey>
      <description><![CDATA[The create() method of a widget type must call the callback function]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Objects.DisallowNewWidget.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowNewWidgetFound</name>
      <configKey>rulesets/DisallowNewWidget</configKey>
      <description><![CDATA[Manual creation of widget objects is banned; use Widget::getWidget(\'%s\'); instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.PHP.EvalObjectFactory.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EvalObjectFactoryFound</name>
      <configKey>rulesets/EvalObjectFactory</configKey>
      <description><![CDATA[Do not use eval() to create objects dynamically; use reflection instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.PHP.GetRequestData.WithVar</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>GetRequestDatatyp</name>
      <configKey>rulesets/GetRequestData</configKey>
      <description><![CDATA[The %s super global must not be accessed directly; use Security::getRequestData(]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.PHP.ReturnFunctionValue.NotAssigned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ReturnFunctionValueNotAssigned</name>
      <configKey>rulesets/ReturnFunctionValue</configKey>
      <description><![CDATA[The result of a function call should be assigned to a variable before being returned]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>MySource.Strings.JoinStrings.ArrayNotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>JoinStringsArrayNotAllowed</name>
      <configKey>rulesets/JoinStrings</configKey>
      <description><![CDATA[Joining strings using inline arrays is not allowed; use the + operator instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Classes.ClassDeclaration.MissingBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationMissingBrace</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Possible parse error: %s missing opening or closing brace]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Classes.ClassDeclaration.OpenBraceNewLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationOpenBraceNewLine</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Opening brace of a %s must be on the line after the definition]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Classes.ClassDeclaration.OpenBraceWrongLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationOpenBraceWrongLine</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Opening brace of a %s must be on the line following the %s declaration; found %s line(s)]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Classes.ClassDeclaration.OpenBraceNotAlone</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationOpenBraceNotAlone</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Opening %s brace must be on a line by itself]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Classes.ClassDeclaration.SpaceBeforeBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationSpaceBeforeBrace</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Expected 0 spaces before opening brace; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.ClassComment.WrongStyle</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentWrongStyle</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Class PHP_CodeSniffer_CommentParser_ClassCommentParser not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.ClassComment.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentMissing</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Missing %s doc comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.ClassComment.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentEmpty</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Doc comment is empty for %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.ClassComment.SpacingBeforeShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentSpacingBeforeShort</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Extra newline(s) found before %s comment short description]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.ClassComment.SpacingAfterShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentSpacingAfterShort</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[There must be exactly one blank line between descriptions in %s comments]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.ClassComment.SpacingBeforeTags</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentSpacingBeforeTags</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[There must be exactly one blank line before the tags in %s comments]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.ClassComment.EmptyVersion</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentEmptyVersion</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Content missing for @version tag in doc comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.ClassComment.InvalidVersion</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentInvalidVersion</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Invalid version "%s" in doc comment; consider "Release: <package_version>" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.WrongStyle</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentWrongStyle</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[You must use "/**" style comments for a file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissing</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Missing file doc comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentEmpty</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[File doc comment is empty]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.SpacingBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentSpacingBefore</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Extra newline(s) found before file comment short description]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.DescriptionSpacing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentDescriptionSpacing</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[There must be exactly one blank line between descriptions in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.SpacingBeforeTags</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentSpacingBeforeTags</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[There must be exactly one blank line before the tags in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.MissingVersion</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissingVersion</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[PHP version not specified]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.MissingTag</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissingTag</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Missing @%s tag in %s comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.DuplicateTag</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentDuplicateTag</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Only 1 @%s tag is allowed in a %s comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.TagsNotGrouped</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentTagsNotGrouped</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[@%s tags must be grouped together]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.WrongTagOrder</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentWrongTagOrder</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[The @%s tag is in the wrong order; the tag %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.TagIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentTagIndent</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[@%s tag comment indented incorrectly; expected %s spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.InvalidCategory</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentInvalidCategory</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Category name "%s" is not valid; consider "%s" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.EmptyCategory</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentEmptyCategory</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[@category tag must contain a name]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.InvalidPackage</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentInvalidPackage</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Package name "%s" is not valid; consider "%s" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.EmptyPackage</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentEmptyPackage</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[@package tag must contain a name]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.InvalidSubpackage</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentInvalidSubpackage</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Subpackage name "%s" is not valid; consider "%s" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.EmptySubpackage</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentEmptySubpackage</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[@subpackage tag must contain a name]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.InvalidAuthors</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentInvalidAuthors</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Content of the @author tag must be in the form "Display Name <username@example.com>]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.EmptyAuthors</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentEmptyAuthors</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Content missing for @author tag in %s comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.CopyrightHyphen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentCopyrightHyphen</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[A hyphen must be used between the earliest and latest year]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.InvalidCopyright</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentInvalidCopyright</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Invalid year span \"$matches[1]$matches[3]$matches[4]\" found; consider \"$matches[4]-$matches[1]\" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.EmptyCopyright</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentEmptyCopyright</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[@copyright tag must contain a year and the name of the copyright holder]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.EmptyCopyright</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentEmptyCopyright</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[@copyright tag must contain a year and the name of the copyright holder]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.EmptyLicense</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentEmptyLicense</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[@license tag must contain a URL and a license name]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.EmptyVersion</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentEmptyVersion</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Content missing for @version tag in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FileComment.InvalidVersion</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentInvalidVersion</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Invalid version "%s" in file comment; consider "CVS: <cvs_id>" or "SVN: <svn_id>" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.WrongStyle</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentWrongStyle</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[You must use "/**" style comments for a function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentEmpty</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Function doc comment is empty]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingBeforeShort</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Extra newline(s) found before function comment short description]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.SpacingAfterShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingAfterShort</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[There must be exactly one blank line between descriptions in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeTags</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingBeforeTags</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[There must be exactly one blank line before the tags in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.EmptyThrows</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentEmptyThrows</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[@throws tag must contain the exception class name]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.MissingReturn</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingReturn</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Missing @return tag in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.EmptyReturn</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentEmptyReturn</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[@return tag is empty in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.SpacingAfterParams</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingAfterParams</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Last parameter comment requires a blank newline after it]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeParams</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingBeforeParams</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Parameters must appear immediately after the comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeParamType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingBeforeParamType</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Expected 1 space before variable type]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.ParameterNamesNotAligned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentParameterNamesNotAligned</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[The variable names for parameters %s (%s) and %s (%s) do not align]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.ParameterCommentsNotAligned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentParameterCommentsNotAligned</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[The comments for parameters %s (%s) and %s (%s) do not align]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.cod</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentcod</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Doc comment for var %s does not match ]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.ExtraParamComment</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentExtraParamComment</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Superfluous doc comment at position '.$po]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.MissingParamName</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingParamName</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Missing parameter name at position '.$po]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.MissingParamType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingParamType</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Missing type at position '.$po]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.MissingParamComment</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingParamComment</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Missing comment for param "%s" at position %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.SpacingAfterLongType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingAfterLongType</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Expected 1 space after the longest type]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.SpacingAfterLongName</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingAfterLongName</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Expected 1 space after the longest variable name]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.FunctionComment.MissingParamTag</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingParamTag</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Doc comment for "%s" missing]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Commenting.InlineComment.WrongStyle</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineCommentWrongStyle</name>
      <configKey>rulesets/InlineComment</configKey>
      <description><![CDATA[Perl-style comments are not allowed. Use "// Comment.]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.ControlStructures.MultiLineCondition.CloseBracketNewLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultiLineConditionCloseBracketNewLine</name>
      <configKey>rulesets/MultiLineCondition</configKey>
      <description><![CDATA[Closing parenthesis of a multi-line IF statement must be on a new line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.ControlStructures.MultiLineCondition.Alignment</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultiLineConditionAlignment</name>
      <configKey>rulesets/MultiLineCondition</configKey>
      <description><![CDATA[Multi-line IF statement not indented correctly; expected $expectedIndent spaces but found $foundIndent]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.ControlStructures.MultiLineCondition.StartWithBoolean</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultiLineConditionStartWithBoolean</name>
      <configKey>rulesets/MultiLineCondition</configKey>
      <description><![CDATA[Each line in a multi-line IF statement must begin with a boolean operator]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.ControlStructures.MultiLineCondition.SpaceBeforeOpenBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultiLineConditionSpaceBeforeOpenBrace</name>
      <configKey>rulesets/MultiLineCondition</configKey>
      <description><![CDATA[There must be a single space between the closing parenthesis and the opening brace of a multi-line IF statement; found $length spaces]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.ControlStructures.MultiLineCondition.NoSpaceBeforeOpenBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultiLineConditionNoSpaceBeforeOpenBrace</name>
      <configKey>rulesets/MultiLineCondition</configKey>
      <description><![CDATA[There must be a single space between the closing parenthesis and the opening brace of a multi-line IF statement]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Files.IncludingFile.BracketsNotRequired</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncludingFileBracketsNotRequired</name>
      <configKey>rulesets/IncludingFile</configKey>
      <description><![CDATA[%s" is a statement not a function; no parentheses are required]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Files.IncludingFile.UseIncludeOnce</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncludingFileUseIncludeOnce</name>
      <configKey>rulesets/IncludingFile</configKey>
      <description><![CDATA[File is being conditionally included; ]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Files.IncludingFile.UseInclude</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncludingFileUseInclude</name>
      <configKey>rulesets/IncludingFile</configKey>
      <description><![CDATA[File is being conditionally included; ]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Files.IncludingFile.UseRequireOnce</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncludingFileUseRequireOnce</name>
      <configKey>rulesets/IncludingFile</configKey>
      <description><![CDATA[File is being unconditionally included; ]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Files.IncludingFile.UseRequire</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncludingFileUseRequire</name>
      <configKey>rulesets/IncludingFile</configKey>
      <description><![CDATA[File is being unconditionally included; ]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Formatting.MultiLineAssignment.EqualSignLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultiLineAssignmentEqualSignLine</name>
      <configKey>rulesets/MultiLineAssignment</configKey>
      <description><![CDATA[Multi-line assignments must have the equal sign on the second line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Formatting.MultiLineAssignment.Indent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultiLineAssignmentIndent</name>
      <configKey>rulesets/MultiLineAssignment</configKey>
      <description><![CDATA[Multi-line assignment not indented correctly; expected %s spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionCallSignature.SpaceBeforeOpenBracket</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallSignatureSpaceBeforeOpenBracket</name>
      <configKey>rulesets/FunctionCallSignature</configKey>
      <description><![CDATA[Space before opening parenthesis of function call prohibited]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallSignatureSpaceAfterCloseBracket</name>
      <configKey>rulesets/FunctionCallSignature</configKey>
      <description><![CDATA[Space after closing parenthesis of function call prohibited]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallSignatureSpaceAfterOpenBracket</name>
      <configKey>rulesets/FunctionCallSignature</configKey>
      <description><![CDATA[Space after opening parenthesis of function call prohibited]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallSignatureSpaceBeforeCloseBracket</name>
      <configKey>rulesets/FunctionCallSignature</configKey>
      <description><![CDATA[Space before closing parenthesis of function call prohibited]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionCallSignature.Indent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallSignatureIndent</name>
      <configKey>rulesets/FunctionCallSignature</configKey>
      <description><![CDATA[Multi-line function call not indented correctly; expected %s spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallSignatureContentAfterOpenBracket</name>
      <configKey>rulesets/FunctionCallSignature</configKey>
      <description><![CDATA[Opening parenthesis of a multi-line function call must be the last content on the line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionCallSignature.CloseBracketLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCallSignatureCloseBracketLine</name>
      <configKey>rulesets/FunctionCallSignature</configKey>
      <description><![CDATA[Closing parenthesis of a multi-line function call must be on a line by itself]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionDeclaration.Indent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationIndent</name>
      <configKey>rulesets/FunctionDeclaration</configKey>
      <description><![CDATA[Multi-line function declaration not indented correctly; expected %s spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionDeclaration.cod</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationcod</name>
      <configKey>rulesets/FunctionDeclaration</configKey>
      <description><![CDATA[There must be a single space between the closing parenthesis and the opening brace of a multi-line function declaration; found ]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionDeclaration.NoSpaceBeforeOpenBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationNoSpaceBeforeOpenBrace</name>
      <configKey>rulesets/FunctionDeclaration</configKey>
      <description><![CDATA[There must be a single space between the closing parenthesis and the opening brace of a multi-line function declaration]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.FunctionDeclaration.CloseBracketLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationCloseBracketLine</name>
      <configKey>rulesets/FunctionDeclaration</configKey>
      <description><![CDATA[The closing parenthesis of a multi-line function declaration must be on a new line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.Functions.ValidDefaultValue.NotAtEnd</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidDefaultValueNotAtEnd</name>
      <configKey>rulesets/ValidDefaultValue</configKey>
      <description><![CDATA[Arguments with default values must be at the end of the argument list]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidClassName.StartWithCaptial</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidClassNameStartWithCaptial</name>
      <configKey>rulesets/ValidClassName</configKey>
      <description><![CDATA[%s name must begin with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidClassName.Invalid</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidClassNameInvalid</name>
      <configKey>rulesets/ValidClassName</configKey>
      <description><![CDATA[%s name is not valid]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidClassName.Invalid</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidClassNameInvalid</name>
      <configKey>rulesets/ValidClassName</configKey>
      <description><![CDATA[%s name is not valid; consider %s instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidFunctionName.MethodDoubleUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNameMethodDoubleUnderscore</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[Method name "%s" is invalid; only PHP magic methods should be prefixed with a double underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNamePrivateNoUnderscore</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[Private method name "%s" must be prefixed with an underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidFunctionName.PublicUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNamePublicUnderscore</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[%s method name "%s" must not be prefixed with an underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNameScopeNotCamelCaps</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[%s method name "%s" is not in camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidFunctionName.NotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNameNotCamelCaps</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[Method name "%s" is not in camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionDoubleUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNameFunctionDoubleUnderscore</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[Function name "%s" is invalid; only PHP magic methods should be prefixed with a double underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNameFunctionUnderscore</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[Function name "%s" is invalid; only private methods should be prefixed with an underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionNoCaptial</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNameFunctionNoCaptial</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[Function name "%s" is prefixed with a package name but does not begin with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionInvalid</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNameFunctionInvalid</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[Function name "%s" is not valid; name appears incomplete]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionNameInvalid</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNameFunctionNameInvalid</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[Function name "%s" is invalid; consider "%s" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNamePrivateNoUnderscore</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Class PHP_CodeSniffer_Standards_AbstractVariableSniff not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.NamingConventions.ValidVariableName.PublicUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNamePublicUnderscore</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[%s member variable "%s" must not be prefixed with an underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.WhiteSpace.ObjectOperatorIndent.Incorrect</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ObjectOperatorIndentIncorrect</name>
      <configKey>rulesets/ObjectOperatorIndent</configKey>
      <description><![CDATA[Object operator not indented correctly; expected %s spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.WhiteSpace.ObjectOperatorIndent.StartOfLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ObjectOperatorIndentStartOfLine</name>
      <configKey>rulesets/ObjectOperatorIndent</configKey>
      <description><![CDATA[Object operator must be at the start of the line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.WhiteSpace.ScopeClosingBrace.Line</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ScopeClosingBraceLine</name>
      <configKey>rulesets/ScopeClosingBrace</configKey>
      <description><![CDATA[Closing brace must be on a line by itself]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.WhiteSpace.ScopeClosingBrace.BreakIdent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ScopeClosingBraceBreakIdent</name>
      <configKey>rulesets/ScopeClosingBrace</configKey>
      <description><![CDATA[Break statement indented incorrectly; expected %s spaces]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.WhiteSpace.ScopeClosingBrace.Indent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ScopeClosingBraceIndent</name>
      <configKey>rulesets/ScopeClosingBrace</configKey>
      <description><![CDATA[Closing brace indented incorrectly; expected %s spaces]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>PEAR.WhiteSpace.ScopeIndent.</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ScopeIndent</name>
      <configKey>rulesets/ScopeIndent</configKey>
      <description><![CDATA[Class Generic_Sniffs_WhiteSpace_ScopeIndentSniff not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayBracketSpacing.SpaceBeforeBracket</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayBracketSpacingSpaceBeforeBracket</name>
      <configKey>rulesets/ArrayBracketSpacing</configKey>
      <description><![CDATA[Space found before square bracket; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayBracketSpacing.SpaceAfterBracket</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayBracketSpacingSpaceAfterBracket</name>
      <configKey>rulesets/ArrayBracketSpacing</configKey>
      <description><![CDATA[Space found after square bracket; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.NotLowerCase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationNotLowerCase</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Array keyword should be lower case; expected "array" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.SpaceAfterKeyword</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationSpaceAfterKeyword</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[There must be no space between the Array keyword and the opening parenthesis]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.SpaceInEmptyArray</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationSpaceInEmptyArray</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Empty array declaration must have no space between the parentheses]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.NoSpaceBeforeDoubleArrow</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationNoSpaceBeforeDoubleArrow</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Expected 1 space between "%s" and double arrow; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.SpaceBeforeDoubleArrow</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationSpaceBeforeDoubleArrow</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Expected 1 space between "%s" and double arrow; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.NoSpaceAfterDoubleArrow</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationNoSpaceAfterDoubleArrow</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Expected 1 space between double arrow and "%s"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.SpaceAfterDoubleArrow</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationSpaceAfterDoubleArrow</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Expected 1 space between double arrow and "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationSingleLineNotAllowed</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Array with multiple values cannot be declared on a single line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.NoSpaceAfterComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationNoSpaceAfterComma</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Expected 1 space between comma and "%s"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.SpaceAfterComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationSpaceAfterComma</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Expected 1 space between comma and "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationSpaceBeforeComma</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Expected 0 spaces between "%s" and comma; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationCloseBraceNewLine</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Closing parenthesis of array declaration must be on a new line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationCloseBraceNotAligned</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Closing parenthesis not aligned correctly; expected %s space(s) but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.NoKeySpecified</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationNoKeySpecified</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[No key specified for array entry; first entry specifies key]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationSpaceBeforeComma</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Expected 0 spaces between "%s" and comma; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.KeySpecified</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationKeySpecified</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Key specified for array entry; first entry has no key]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.MulitLineNotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationMulitLineNotAllowed</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Multi-line array contains a single value; use single-line array instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationNoCommaAfterLast</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Comma required after last value in array declaration]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.ValueNotAligned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationValueNotAligned</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Array value not aligned correctly; expected %s spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationFirstValueNoNewline</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[The first value in a multi-value array must be on a new line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.FirstIndexNoNewline</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationFirstIndexNoNewline</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[The first index in a multi-value array must be on a new line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.KeyNotAligned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationKeyNotAligned</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Array key not aligned correctly; expected %s spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationDoubleArrowNotAligned</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Array double arrow not aligned correctly; expected %s space(s) but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.ValueNotAligned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationValueNotAligned</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Array value not aligned correctly; expected %s space(s) but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.NoComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationNoComma</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Each line in an array declaration must end in a comma]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ArrayDeclarationSpaceBeforeComma</name>
      <configKey>rulesets/ArrayDeclaration</configKey>
      <description><![CDATA[Expected 0 spaces between "%s" and comma; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.MultipleClasses</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationMultipleClasses</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Class PEAR_Sniffs_Classes_ClassDeclarationSniff not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.SpaceBeforeKeyword</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationSpaceBeforeKeyword</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Expected 0 spaces before %s keyword; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.SpacesBeforeKeyword</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationSpacesBeforeKeyword</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Expected 1 space between %s and %s keywords; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.MissingBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationMissingBrace</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Possible parse error: %s missing opening or closing brace]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.NewLineBeforeCloseBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationNewLineBeforeCloseBrace</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Expected 0 spaces before closing brace; newline found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.SpaceBeforeCloseBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationSpaceBeforeCloseBrace</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Expected 0 spaces before closing brace; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.EndFileAfterCloseBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationEndFileAfterCloseBrace</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Closing brace of a %s must be followed by a blank line and then a closing PHP tag]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.NoNewlineAfterCloseBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationNoNewlineAfterCloseBrace</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Closing brace of a %s must be followed by a single blank line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.NewlinesAfterCloseBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationNewlinesAfterCloseBrace</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Closing brace of a %s must be followed by a single blank line; found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.CloseBraceSameLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationCloseBraceSameLine</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Closing %s brace must be on a line by itself]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.SpaceAfterKeyword</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationSpaceAfterKeyword</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Expected 1 space between %s keyword and %s name; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.SpaceAfterName</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationSpaceAfterName</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Expected 1 space after %s name; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.NoSpaceBeforeName</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationNoSpaceBeforeName</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Expected 1 space before "%s"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.SpaceBeforeName</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationSpaceBeforeName</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Expected 1 space before "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassDeclaration.SpaceBeforeComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDeclarationSpaceBeforeComma</name>
      <configKey>rulesets/ClassDeclaration</configKey>
      <description><![CDATA[Expected 0 spaces between "%s" and comma; $%s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ClassFileName.NoMatch</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassFileNameNoMatch</name>
      <configKey>rulesets/ClassFileName</configKey>
      <description><![CDATA[%s name doesn\'t match filename; expected "%s %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.DuplicateProperty.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DuplicatePropertyFound</name>
      <configKey>rulesets/DuplicateProperty</configKey>
      <description><![CDATA[Duplicate property definition found for "%s"; previously defined on line %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.LowercaseClassKeywords.FoundUppercase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LowercaseClassKeywordsFoundUppercase</name>
      <configKey>rulesets/LowercaseClassKeywords</configKey>
      <description><![CDATA[%s keyword must be lowercase; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.SelfMemberReference.IncorrectCase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SelfMemberReferenceIncorrectCase</name>
      <configKey>rulesets/SelfMemberReference</configKey>
      <description><![CDATA[Class PHP_CodeSniffer_Standards_AbstractScopeSniff not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.SelfMemberReference.NotUsed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SelfMemberReferenceNotUsed</name>
      <configKey>rulesets/SelfMemberReference</configKey>
      <description><![CDATA[Must use "self::" for local static member reference]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.SelfMemberReference.SpaceBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SelfMemberReferenceSpaceBefore</name>
      <configKey>rulesets/SelfMemberReference</configKey>
      <description><![CDATA[Expected 0 spaces before double colon; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.SelfMemberReference.SpaceAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SelfMemberReferenceSpaceAfter</name>
      <configKey>rulesets/SelfMemberReference</configKey>
      <description><![CDATA[Expected 0 spaces after double colon; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ValidClassName.MissingBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidClassNameMissingBrace</name>
      <configKey>rulesets/ValidClassName</configKey>
      <description><![CDATA[Possible parse error: %s missing opening or closing brace]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Classes.ValidClassName.NotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidClassNameNotCamelCaps</name>
      <configKey>rulesets/ValidClassName</configKey>
      <description><![CDATA[%s name "%s" is not in camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.SingleLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentSingleLine</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[Single line block comment not allowed; use inline ("// text") comment instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentEmpty</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[Empty block comment not allowed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.NoNewLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentNoNewLine</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[Block comment text must start on a new line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.HasEmptyLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentHasEmptyLine</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[Empty line not allowed at start of comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.FirstLineIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentFirstLineIndent</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[First line of comment not aligned correctly; expected %s but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.NoCaptial</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentNoCaptial</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[Block comments must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.LineIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentLineIndent</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[Comment line indented incorrectly; expected at least %s but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.LastLineIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentLastLineIndent</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[Comment closer must be on a new line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.HasEmptyLineBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentHasEmptyLineBefore</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[Empty line not required before block comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.NoEmptyLineBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentNoEmptyLineBefore</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[Empty line required before block comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.BlockComment.NoEmptyLineAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>BlockCommentNoEmptyLineAfter</name>
      <configKey>rulesets/BlockComment</configKey>
      <description><![CDATA[Empty line required after block comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.SpacingBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentSpacingBefore</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[There must be exactly one blank line before the class comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentEmpty</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Class doc comment is empty]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.SpacingAfterOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentSpacingAfterOpen</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[The open comment tag must be the only content on the line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.MissingShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentMissingShort</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Missing short description in class doc comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.SpacingBeforeShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentSpacingBeforeShort</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Extra newline(s) found before class comment short description]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.SpacingBetween</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentSpacingBetween</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[There must be exactly one blank line between descriptions in class comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.LongNotCaptial</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentLongNotCaptial</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Class comment long description must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.SpacingBeforeTags</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentSpacingBeforeTags</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[There must be exactly one blank line before the tags in class comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.ShortSingleLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentShortSingleLine</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Class comment short description must be on a single line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.ShortNotCapital</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentShortNotCapital</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Class comment short description must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.ShortFullStop</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentShortFullStop</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Class comment short description must end with a full stop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.TagNotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentTagNotAllowed</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[@%s tag is not allowed in class comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClassComment.SpacingAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassCommentSpacingAfter</name>
      <configKey>rulesets/ClassComment</configKey>
      <description><![CDATA[Additional blank lines found at end of class comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClosingDeclarationComment.Abstract</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClosingDeclarationCommentAbstract</name>
      <configKey>rulesets/ClosingDeclarationComment</configKey>
      <description><![CDATA[Possible parse error: non-abstract method defined as abstract]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClosingDeclarationComment.MissingBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClosingDeclarationCommentMissingBrace</name>
      <configKey>rulesets/ClosingDeclarationComment</configKey>
      <description><![CDATA[Possible parse error: %s missing opening or closing brace]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.ClosingDeclarationComment.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClosingDeclarationCommentMissing</name>
      <configKey>rulesets/ClosingDeclarationComment</configKey>
      <description><![CDATA[Expected '.$commen]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.DocCommentAlignment.NoSpaceBeforeTag</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DocCommentAlignmentNoSpaceBeforeTag</name>
      <configKey>rulesets/DocCommentAlignment</configKey>
      <description><![CDATA[Expected 1 space between asterisk and tag; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.DocCommentAlignment.SpaceBeforeTag</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DocCommentAlignmentSpaceBeforeTag</name>
      <configKey>rulesets/DocCommentAlignment</configKey>
      <description><![CDATA[Expected 1 space between asterisk and tag; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.DocCommentAlignment.SpaceBeforeAsterisk</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DocCommentAlignmentSpaceBeforeAsterisk</name>
      <configKey>rulesets/DocCommentAlignment</configKey>
      <description><![CDATA[Expected %s space(s) before asterisk; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.EmptyCatchComment.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmptyCatchCommentMissing</name>
      <configKey>rulesets/EmptyCatchComment</configKey>
      <description><![CDATA[Empty CATCH statement must have a comment to explain why the exception is not handled]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.SpacingAfterOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentSpacingAfterOpen</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Extra newline found after the open tag]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.SpacingAfterComment</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentSpacingAfterComment</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[There must be exactly one blank line after the file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentEmpty</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[File doc comment is empty]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.ContentAfterOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentContentAfterOpen</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[The open comment tag must be the only content on the line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.SpacingBeforeShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentSpacingBeforeShort</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Extra newline(s) found before file comment short description]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.SpacingBetween</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentSpacingBetween</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[There must be exactly one blank line between descriptions in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.LongNotCaptial</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentLongNotCaptial</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[File comment long description must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.SpacingBeforeTags</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentSpacingBeforeTags</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[There must be exactly one blank line before the tags in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.ShortSingleLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentShortSingleLine</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[File comment short description must be on a single line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.ShortNotCapital</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentShortNotCapital</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[File comment short description must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.ShortFullStop</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentShortFullStop</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[File comment short description must end with a full stop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.TagNotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentTagNotAllowed</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[@%s tag is not allowed in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.SpacingAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentSpacingAfter</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Additional blank lines found at end of file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.MissingTag</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissingTag</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Missing @%s tag in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.DuplicateTag</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentDuplicateTag</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Only 1 @%s tag is allowed in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.TagOrder</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentTagOrder</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[The @%s tag is in the wrong order; the tag %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.TagIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentTagIndent</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[@%s tag comment indented incorrectly; expected %s spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.MissingPackage</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissingPackage</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Content missing for @package tag in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.IncorrectPackage</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentIncorrectPackage</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Package name "%s" is not valid; consider "%s" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.MissingSubpackage</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissingSubpackage</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Content missing for @subpackage tag in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.IncorrectSubpackage</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentIncorrectSubpackage</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Subpackage name "%s" is not valid; consider "%s" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.MissingAuthor</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissingAuthor</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Content missing for @author tag in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.IncorrectAuthor</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentIncorrectAuthor</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Expected "Squiz Pty Ltd <products@squiz.net>" for author tag]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.MissingCopyright</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissingCopyright</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Content missing for @copyright tag in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.IncorrectCopyright</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentIncorrectCopyright</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Expected "xxxx-xxxx Squiz Pty Ltd (ACN 084 670 600)" for copyright declaration]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.MissingLicense</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissingLicense</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Content missing for @license tag in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.MissingLinceseURL</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissingLinceseURL</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[License URL missing for @license tag in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.IncorrectLicenseURL</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentIncorrectLicenseURL</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Expected "http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt" for license URL]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.MissingLinceseName</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentMissingLinceseName</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[License name missing for @license tag in file comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FileComment.IncorrectLicenseName</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileCommentIncorrectLicenseName</name>
      <configKey>rulesets/FileComment</configKey>
      <description><![CDATA[Expected "GPLv2" for license name]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.WrongStyle</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentWrongStyle</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Class PHP_CodeSniffer_CommentParser_FunctionCommentParser not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissing</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Missing function doc comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentEmpty</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Function doc comment is empty]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ContentAfterOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentContentAfterOpen</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[The open comment tag must be the only content on the line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.MissingShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingShort</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Missing short description in function doc comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SpacingBeforeShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingBeforeShort</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Extra newline(s) found before function comment short description]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SpacingBetween</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingBetween</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[There must be exactly one blank line between descriptions in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.LongNotCapital</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentLongNotCapital</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Function comment long description must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SpacingBeforeTags</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingBeforeTags</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[There must be exactly one blank line before the tags in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ShortSingleLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentShortSingleLine</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Function comment short description must be on a single line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ShortNotCapital</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentShortNotCapital</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Function comment short description must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ShortFullStop</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentShortFullStop</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Function comment short description must end with a full stop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SpacingAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingAfter</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Additional blank lines found at end of function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SeeOrder</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSeeOrder</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[The @see tag is in the wrong order; the tag precedes @return]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.EmptySee</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentEmptySee</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Content missing for @see tag in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SeeIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSeeIndent</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[@see tag indented incorrectly; expected 4 spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.DuplicateReturn</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentDuplicateReturn</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Only 1 @return tag is allowed in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ReturnOrder</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentReturnOrder</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[The @return tag is in the wrong order; the tag follows @see (if used)]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.MissingReturnType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingReturnType</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Return type missing for @return tag in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.InvalidReturn</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentInvalidReturn</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Function return type "%s" is invalid]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.InvalidReturnVoid</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentInvalidReturnVoid</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Function return type is void]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.InvalidNoReturn</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentInvalidNoReturn</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Function return type is not void]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.InvalidReturnNotVoid</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentInvalidReturnNotVoid</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Function return type is not void]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ReturnIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentReturnIndent</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[@return tag indented incorrectly; expected 1 space but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.MissingReturn</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingReturn</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Missing @return tag in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ReturnNotRequired</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentReturnNotRequired</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[@return tag is not required for constructor and destructor]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.InvalidThrows</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentInvalidThrows</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Exception type and comment missing for @throws tag in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.EmptyThrows</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentEmptyThrows</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Comment missing for @throws tag in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ThrowsNotCapital</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentThrowsNotCapital</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[@throws tag comment must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ThrowsNoFullStop</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentThrowsNoFullStop</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[@throws tag comment must end with a full stop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ThrowsOrder</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentThrowsOrder</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[The @throws tag is in the wrong order; the tag follows @return]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SpacingAfterParams</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingAfterParams</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Last parameter comment requires a blank newline after it]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SpacingBeforeParams</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingBeforeParams</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Parameters must appear immediately after the comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SpacingBeforeParamType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingBeforeParamType</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Expected 1 space before variable type]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ParameterNamesNotAligned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentParameterNamesNotAligned</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[The variable names for parameters %s (%s) and %s (%s) do not align]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ParameterCommentsNotAligned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentParameterCommentsNotAligned</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[The comments for parameters %s (%s) and %s (%s) do not align]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.IncorrectParamVarName</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentIncorrectParamVarName</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Expected "%s"; found "%s" for %s at position %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.TypeHintMissing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentTypeHintMissing</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Type hint "%s" missing for %s at position %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.IncorrectTypeHint</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentIncorrectTypeHint</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Expected type hint "%s"; found "%s" for %s at position %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.InvalidTypeHint</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentInvalidTypeHint</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Unknown type hint "%s" found for %s at position %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.cod</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentcod</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Doc comment for var %s does not match ]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ExtraParamComment</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentExtraParamComment</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Superfluous doc comment at position '.$po]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.MissingParamName</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingParamName</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Missing parameter name at position '.$po]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.MissingParamType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingParamType</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Missing type at position '.$po]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.MissingParamComment</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingParamComment</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Missing comment for param "%s" at position %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ParamCommentNotCapital</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentParamCommentNotCapital</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Param comment must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.ParamCommentFullStop</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentParamCommentFullStop</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Param comment must end with a full stop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SpacingAfterLongType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingAfterLongType</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Expected 1 space after the longest type]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.SpacingAfterLongName</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentSpacingAfterLongName</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Expected 1 space after the longest variable name]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.MissingParamTag</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentMissingParamTag</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[Doc comment for "%s" missing]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionComment.TagNotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentTagNotAllowed</name>
      <configKey>rulesets/FunctionComment</configKey>
      <description><![CDATA[@%s tag is not allowed in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionCommentThrowTag.FailedParse</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentThrowTagFailedParse</name>
      <configKey>rulesets/FunctionCommentThrowTag</configKey>
      <description><![CDATA[Class PHP_CodeSniffer_Standards_AbstractScopeSniff not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionCommentThrowTag.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentThrowTagMissing</name>
      <configKey>rulesets/FunctionCommentThrowTag</configKey>
      <description><![CDATA[Missing @throws tag in function comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionCommentThrowTag.WrongNumber</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentThrowTagWrongNumber</name>
      <configKey>rulesets/FunctionCommentThrowTag</configKey>
      <description><![CDATA[Expected %s @throws tag(s) in function comment; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.FunctionCommentThrowTag.WrongType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionCommentThrowTagWrongType</name>
      <configKey>rulesets/FunctionCommentThrowTag</configKey>
      <description><![CDATA[Expected "%s" but found "%s" for @throws tag exception]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.InlineComment.DocBlock</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineCommentDocBlock</name>
      <configKey>rulesets/InlineComment</configKey>
      <description><![CDATA[Inline doc block comments are not allowed; use "/* Comment */" or "// Comment" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.InlineComment.WrongStyle</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineCommentWrongStyle</name>
      <configKey>rulesets/InlineComment</configKey>
      <description><![CDATA[Perl-style comments are not allowed; use "// Comment" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.InlineComment.NoSpaceBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineCommentNoSpaceBefore</name>
      <configKey>rulesets/InlineComment</configKey>
      <description><![CDATA[No space before comment text; expected "// %s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.InlineComment.SpacingBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineCommentSpacingBefore</name>
      <configKey>rulesets/InlineComment</configKey>
      <description><![CDATA[%s spaces found before inline comment; expected "// %s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.InlineComment.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineCommentEmpty</name>
      <configKey>rulesets/InlineComment</configKey>
      <description><![CDATA[Blank comments are not allowed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.InlineComment.NotCapital</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineCommentNotCapital</name>
      <configKey>rulesets/InlineComment</configKey>
      <description><![CDATA[Inline comments must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.InlineComment.InvalidEndChar</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineCommentInvalidEndChar</name>
      <configKey>rulesets/InlineComment</configKey>
      <description><![CDATA[Inline comments must end in %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.InlineComment.SpacingAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineCommentSpacingAfter</name>
      <configKey>rulesets/InlineComment</configKey>
      <description><![CDATA[There must be no blank line following an inline comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.LongConditionClosingComment.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LongConditionClosingCommentMissing</name>
      <configKey>rulesets/LongConditionClosingComment</configKey>
      <description><![CDATA[End comment for long condition not found; expected "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.LongConditionClosingComment.SpacingBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LongConditionClosingCommentSpacingBefore</name>
      <configKey>rulesets/LongConditionClosingComment</configKey>
      <description><![CDATA[Space found before closing comment; expected "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.LongConditionClosingComment.Invalid</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LongConditionClosingCommentInvalid</name>
      <configKey>rulesets/LongConditionClosingComment</configKey>
      <description><![CDATA[Incorrect closing comment; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.PostStatementComment.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>PostStatementCommentFound</name>
      <configKey>rulesets/PostStatementComment</configKey>
      <description><![CDATA[Comments may not appear after statements.]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentEmpty</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Variable doc comment is empty]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.ContentAfterOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentContentAfterOpen</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[The open comment tag must be the only content on the line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.MissingShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentMissingShort</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Missing short description in variable doc comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.SpacingBeforeShort</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentSpacingBeforeShort</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Extra newline(s) found before variable comment short description]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.SpacingBetween</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentSpacingBetween</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[There must be exactly one blank line between descriptions in variable comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.LongNotCapital</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentLongNotCapital</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Variable comment long description must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.ShortSingleLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentShortSingleLine</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Variable comment short description must be on a single line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.ShortNotCapital</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentShortNotCapital</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Variable comment short description must start with a capital letter]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.ShortFullStop</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentShortFullStop</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Variable comment short description must end with a full stop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.SpacingBeforeTags</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentSpacingBeforeTags</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[There must be exactly one blank line before the tags in variable comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.TagNotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentTagNotAllowed</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[@%s tag is not allowed in variable comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.SpacingAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentSpacingAfter</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Additional blank lines found at end of variable comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.DuplicateVar</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentDuplicateVar</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Only 1 @var tag is allowed in variable comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.VarOrder</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentVarOrder</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[The @var tag must be the first tag in a variable comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.MissingVarType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentMissingVarType</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Var type missing for @var tag in variable comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.IncorrectVarType</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentIncorrectVarType</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Expected "%s"; found "%s" for @var tag in variable comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.VarIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentVarIndent</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[@var tag indented incorrectly; expected 1 space but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.MissingVar</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentMissingVar</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Missing @var tag in variable comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.EmptySees</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentEmptySees</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[Content missing for @see tag in variable comment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Commenting.VariableComment.SeesIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>VariableCommentSeesIndent</name>
      <configKey>rulesets/VariableComment</configKey>
      <description><![CDATA[@see tag indented incorrectly; expected 1 spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ElseIfDeclaration.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ElseIfDeclarationNotAllowed</name>
      <configKey>rulesets/ElseIfDeclaration</configKey>
      <description><![CDATA[Usage of ELSEIF not allowed; use ELSE IF instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationSpaceAfterOpen</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[Space found after opening bracket of FOREACH loop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationSpaceBeforeClose</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[Space found before closing bracket of FOREACH loop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationAsNotLower</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[AS keyword must be lowercase; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeArrow</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationNoSpaceBeforeArrow</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space before "=>"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeArrow</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationSpacingBeforeArrow</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space before "=>"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterArrow</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationNoSpaceAfterArrow</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space after "=>"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterArrow</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationSpacingAfterArrow</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space after "=>"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeAs</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationNoSpaceBeforeAs</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space before "as"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationSpacingBeforeAs</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space before "as"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterAs</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationNoSpaceAfterAs</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space after "as"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterAs</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForEachLoopDeclarationSpacingAfterAs</name>
      <configKey>rulesets/ForEachLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space after "as"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForLoopDeclaration.NoOpenBracket</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopDeclarationNoOpenBracket</name>
      <configKey>rulesets/ForLoopDeclaration</configKey>
      <description><![CDATA[Possible parse error: no opening parenthesis for FOR keyword]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopDeclarationSpacingAfterOpen</name>
      <configKey>rulesets/ForLoopDeclaration</configKey>
      <description><![CDATA[Space found after opening bracket of FOR loop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopDeclarationSpacingBeforeClose</name>
      <configKey>rulesets/ForLoopDeclaration</configKey>
      <description><![CDATA[Space found before closing bracket of FOR loop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeFirst</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopDeclarationSpacingBeforeFirst</name>
      <configKey>rulesets/ForLoopDeclaration</configKey>
      <description><![CDATA[Space found before first semicolon of FOR loop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterFirst</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopDeclarationNoSpaceAfterFirst</name>
      <configKey>rulesets/ForLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space after first semicolon of FOR loop; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterFirst</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopDeclarationSpacingAfterFirst</name>
      <configKey>rulesets/ForLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space after first semicolon of FOR loop; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeSecond</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopDeclarationSpacingBeforeSecond</name>
      <configKey>rulesets/ForLoopDeclaration</configKey>
      <description><![CDATA[Space found before second semicolon of FOR loop]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterSecond</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopDeclarationNoSpaceAfterSecond</name>
      <configKey>rulesets/ForLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space after second semicolon of FOR loop; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterSecond</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ForLoopDeclarationSpacingAfterSecond</name>
      <configKey>rulesets/ForLoopDeclaration</configKey>
      <description><![CDATA[Expected 1 space after second semicolon of FOR loop; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.InlineIfDeclaration.NotSingleLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineIfDeclarationNotSingleLine</name>
      <configKey>rulesets/InlineIfDeclaration</configKey>
      <description><![CDATA[Inline shorthand IF statement must be declared on a single line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.InlineIfDeclaration.NoBrackets</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineIfDeclarationNoBrackets</name>
      <configKey>rulesets/InlineIfDeclaration</configKey>
      <description><![CDATA[Inline shorthand IF statement requires brackets around comparison]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeThen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineIfDeclarationSpacingBeforeThen</name>
      <configKey>rulesets/InlineIfDeclaration</configKey>
      <description><![CDATA[Inline shorthand IF statement requires 1 space before THEN; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterThen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineIfDeclarationSpacingAfterThen</name>
      <configKey>rulesets/InlineIfDeclaration</configKey>
      <description><![CDATA[Inline shorthand IF statement requires 1 space after THEN; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeElse</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineIfDeclarationSpacingBeforeElse</name>
      <configKey>rulesets/InlineIfDeclaration</configKey>
      <description><![CDATA[Inline shorthand IF statement requires 1 space before ELSE; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterElse</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InlineIfDeclarationSpacingAfterElse</name>
      <configKey>rulesets/InlineIfDeclaration</configKey>
      <description><![CDATA[Inline shorthand IF statement requires 1 space after ELSE; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.LowercaseDeclaration.FoundUppercase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LowercaseDeclarationFoundUppercase</name>
      <configKey>rulesets/LowercaseDeclaration</configKey>
      <description><![CDATA[%s keyword must be lowercase; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.CaseIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationCaseIndent</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[CASE keyword must be lowercase; expected \"$expected\" but found \"$content\]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationSpacingAfterCase</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[CASE keyword must be followed by a single space]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.SpaceBeforeColon</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationSpaceBeforeColon</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[There must be no space before the colon in a CASE statement]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.BreakIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationBreakIndent</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[BREAK statement must be indented 4 spaces from SWITCH keyword]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.EmptyCase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationEmptyCase</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[Empty CASE statements are not allowed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeBreak</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationSpacingBeforeBreak</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[Blank lines are not allowed before BREAK statements]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterBreak</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationSpacingAfterBreak</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[BREAK statements must be followed by a single blank line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationSpacingAfterCase</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[Blank lines are not allowed after CASE statements]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.DefaultNotLower</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationDefaultNotLower</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[DEFAULT keyword must be lowercase; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeDefaultColon</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationSpacingBeforeDefaultColon</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[There must be no space before the colon in a DEFAULT statement]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.DefaultIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationDefaultIndent</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[DEFAULT keyword must be indented 4 spaces from SWITCH keyword]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.BreakIndent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationBreakIndent</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[BREAK statement must be indented 4 spaces from SWITCH keyword]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefaultBreak</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationSpacingAfterDefaultBreak</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[Blank lines are not allowed after the DEFAULT case\'s BREAK statement]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.DefaultNoBreak</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationDefaultNoBreak</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[DEFAULT case must have a BREAK statement]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.EmptyDefault</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationEmptyDefault</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[Comment required for empty DEFAULT case]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefault</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationSpacingAfterDefault</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[Blank lines are not allowed after DEFAULT statements]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.MissingDefault</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationMissingDefault</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[All SWITCH statements must contain a DEFAULT case]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.CloseBraceAlign</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationCloseBraceAlign</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[Closing brace of SWITCH statement must be aligned with SWITCH keyword]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.ControlStructures.SwitchDeclaration.MissingCase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SwitchDeclarationMissingCase</name>
      <configKey>rulesets/SwitchDeclaration</configKey>
      <description><![CDATA[SWITCH statements must contain at least one CASE statement]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingAfterClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDefinitionClosingBraceSpaceSpacingAfterClose</name>
      <configKey>rulesets/ClassDefinitionClosingBraceSpace</configKey>
      <description><![CDATA[Expected one blank line after closing brace of class definition; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingBeforeClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDefinitionClosingBraceSpaceSpacingBeforeClose</name>
      <configKey>rulesets/ClassDefinitionClosingBraceSpace</configKey>
      <description><![CDATA[Expected 0 blank lines before closing brace of class definition; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ClassDefinitionNameSpacing.BlankLinesFound</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDefinitionNameSpacingBlankLinesFound</name>
      <configKey>rulesets/ClassDefinitionNameSpacing</configKey>
      <description><![CDATA[Blank lines are not allowed between class names]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ClassDefinitionOpeningBraceSpace.NoneBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDefinitionOpeningBraceSpaceNoneBefore</name>
      <configKey>rulesets/ClassDefinitionOpeningBraceSpace</configKey>
      <description><![CDATA[Expected 1 space before opening brace of class definition; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ClassDefinitionOpeningBraceSpace.Before</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDefinitionOpeningBraceSpaceBefore</name>
      <configKey>rulesets/ClassDefinitionOpeningBraceSpace</configKey>
      <description><![CDATA[Expected 1 space before opening brace of class definition; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ClassDefinitionOpeningBraceSpace.After</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClassDefinitionOpeningBraceSpaceAfter</name>
      <configKey>rulesets/ClassDefinitionOpeningBraceSpace</configKey>
      <description><![CDATA[Expected 0 blank lines after opening brace of class definition; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ColonSpacing.Before</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ColonSpacingBefore</name>
      <configKey>rulesets/ColonSpacing</configKey>
      <description><![CDATA[There must be no space before a colon in a style definition]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ColonSpacing.NoneAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ColonSpacingNoneAfter</name>
      <configKey>rulesets/ColonSpacing</configKey>
      <description><![CDATA[Expected 1 space after colon in style definition; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ColonSpacing.After</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ColonSpacingAfter</name>
      <configKey>rulesets/ColonSpacing</configKey>
      <description><![CDATA[Expected 1 space after colon in style definition; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ColonSpacing.AfterNewline</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ColonSpacingAfterNewline</name>
      <configKey>rulesets/ColonSpacing</configKey>
      <description><![CDATA[Expected 1 space after colon in style definition; newline found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ColourDefinition.NotUpper</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ColourDefinitionNotUpper</name>
      <configKey>rulesets/ColourDefinition</configKey>
      <description><![CDATA[CSS colours must be defined in uppercase; expected %s but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.ColourDefinition.Shorthand</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ColourDefinitionShorthand</name>
      <configKey>rulesets/ColourDefinition</configKey>
      <description><![CDATA[CSS colours must use shorthand if available; expected %s but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.DisallowMultipleStyleDefinitions.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowMultipleStyleDefinitionsFound</name>
      <configKey>rulesets/DisallowMultipleStyleDefinitions</configKey>
      <description><![CDATA[Each style definition must be on a line by itself]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.DuplicateClassDefinition.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DuplicateClassDefinitionFound</name>
      <configKey>rulesets/DuplicateClassDefinition</configKey>
      <description><![CDATA[Duplicate class definition found; first defined on line %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.DuplicateStyleDefinition.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DuplicateStyleDefinitionFound</name>
      <configKey>rulesets/DuplicateStyleDefinition</configKey>
      <description><![CDATA[Duplicate style definition found; first defined on line %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.EmptyClassDefinition.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmptyClassDefinitionFound</name>
      <configKey>rulesets/EmptyClassDefinition</configKey>
      <description><![CDATA[Class definition is empty]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.EmptyStyleDefinition.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmptyStyleDefinitionFound</name>
      <configKey>rulesets/EmptyStyleDefinition</configKey>
      <description><![CDATA[Style definition is empty]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.Indentation.BlankLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IndentationBlankLine</name>
      <configKey>rulesets/Indentation</configKey>
      <description><![CDATA[Blank lines are not allowed in class definitions]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.Indentation.Incorrect</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IndentationIncorrect</name>
      <configKey>rulesets/Indentation</configKey>
      <description><![CDATA[Line indented incorrectly; expected %s spaces]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.LowercaseStyleDefinition.FoundUpper</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LowercaseStyleDefinitionFoundUpper</name>
      <configKey>rulesets/LowercaseStyleDefinition</configKey>
      <description><![CDATA[Style definitions must be lowercase; expected %s but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.MissingColon.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MissingColonFound</name>
      <configKey>rulesets/MissingColon</configKey>
      <description><![CDATA[No style definition found on line; check for missing colon]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.Opacity.Invalid</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpacityInvalid</name>
      <configKey>rulesets/Opacity</configKey>
      <description><![CDATA[Opacity values must be between 0 and 1]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.Opacity.SpacingAfterPoint</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpacitySpacingAfterPoint</name>
      <configKey>rulesets/Opacity</configKey>
      <description><![CDATA[Opacity values must have a single value after the decimal point]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.Opacity.PointNotRequired</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpacityPointNotRequired</name>
      <configKey>rulesets/Opacity</configKey>
      <description><![CDATA[Opacity value does not require decimal point; use %s instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.Opacity.StartWithPoint</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpacityStartWithPoint</name>
      <configKey>rulesets/Opacity</configKey>
      <description><![CDATA[Opacity values must not start with a decimal point; use 0%s instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.Opacity.Invalid</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OpacityInvalid</name>
      <configKey>rulesets/Opacity</configKey>
      <description><![CDATA[Opacity values must be between 0 and 1]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.SemicolonSpacing.NotAtEnd</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SemicolonSpacingNotAtEnd</name>
      <configKey>rulesets/SemicolonSpacing</configKey>
      <description><![CDATA[Style definitions must end with a semicolon]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.CSS.SemicolonSpacing.SpaceFound</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SemicolonSpacingSpaceFound</name>
      <configKey>rulesets/SemicolonSpacing</configKey>
      <description><![CDATA[Expected 0 spaces before semicolon in style definition; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Files.FileExtension.ClassFound</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileExtensionClassFound</name>
      <configKey>rulesets/FileExtension</configKey>
      <description><![CDATA[%s found in ".php" file; use ".inc" extension instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Files.FileExtension.NoClass</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FileExtensionNoClass</name>
      <configKey>rulesets/FileExtension</configKey>
      <description><![CDATA[No interface or class found in ".inc" file; use ".php" extension instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Formatting.OperatorBracket.SpacingAfterMinus</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorBracketSpacingAfterMinus</name>
      <configKey>rulesets/OperatorBracket</configKey>
      <description><![CDATA[No space allowed between minus sign and number]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Formatting.OperatorBracket.MissingBrackets</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorBracketMissingBrackets</name>
      <configKey>rulesets/OperatorBracket</configKey>
      <description><![CDATA[Arithmetic operation must be bracketed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Formatting.OperatorBracket.MissingBrackets</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorBracketMissingBrackets</name>
      <configKey>rulesets/OperatorBracket</configKey>
      <description><![CDATA[Arithmetic operation must be bracketed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Formatting.OperatorBracket.MissingBrackets</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorBracketMissingBrackets</name>
      <configKey>rulesets/OperatorBracket</configKey>
      <description><![CDATA[Arithmetic operation must be bracketed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Formatting.OperatorBracket.MissingBrackets</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorBracketMissingBrackets</name>
      <configKey>rulesets/OperatorBracket</configKey>
      <description><![CDATA[Arithmetic operation must be bracketed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Formatting.OutputBufferingIndent.InvalidClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OutputBufferingIndentInvalidClose</name>
      <configKey>rulesets/OutputBufferingIndent</configKey>
      <description><![CDATA[Output buffering must be closed using ob_end_clean or ob_end_flush]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Formatting.OutputBufferingIndent.NotClosed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OutputBufferingIndentNotClosed</name>
      <configKey>rulesets/OutputBufferingIndent</configKey>
      <description><![CDATA[Output buffering]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Formatting.OutputBufferingIndent.Incorrect</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OutputBufferingIndentIncorrect</name>
      <configKey>rulesets/OutputBufferingIndent</configKey>
      <description><![CDATA[Buffered line not indented correctly; expected at least %s spaces but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeEquals</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpaceBeforeEquals</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 0 spaces between argument "%s" and equals sign; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceAfterDefault</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpaceAfterDefault</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 0 spaces between default value and equals sign for argument "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpaceBeforeComma</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 0 spaces between argument "%s" and comma; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpacingAfterHint</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 1 space between type hint and argument "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSapceBeforeHint</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingNoSapceBeforeHint</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 1 space between comma and type hint "%s"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeHint</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpacingBeforeHint</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 1 space between comma and type hint "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeArg</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpacingBeforeArg</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 1 space between comma and argument "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSpaceBeforeArg</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingNoSpaceBeforeArg</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 1 space between comma and argument "%s"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpacingAfterHint</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 1 space between type hint and argument "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpenHint</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpacingAfterOpenHint</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 0 spaces between opening bracket and type hint "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpacingAfterOpen</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 0 spaces between opening bracket and argument "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBetween</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpacingBetween</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 0 spaces between brackets of function declaration; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDeclarationArgumentSpacingSpacingBeforeClose</name>
      <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
      <description><![CDATA[Expected 0 spaces between argument "%s" and closing bracket; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.FunctionDuplicateArgument.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionDuplicateArgumentFound</name>
      <configKey>rulesets/FunctionDuplicateArgument</configKey>
      <description><![CDATA[Variable "%s" appears more than once in function declaration]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.GlobalFunction.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>GlobalFunctionFound</name>
      <configKey>rulesets/GlobalFunction</configKey>
      <description><![CDATA[Consider putting global function "%s" in a static class]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.LowercaseFunctionKeywords.FoundUppercase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LowercaseFunctionKeywordsFoundUppercase</name>
      <configKey>rulesets/LowercaseFunctionKeywords</configKey>
      <description><![CDATA[%s keyword must be lowercase; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.MultiLineFunctionDeclaration.FirstParamSpacing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultiLineFunctionDeclarationFirstParamSpacing</name>
      <configKey>rulesets/MultiLineFunctionDeclaration</configKey>
      <description><![CDATA[Class PEAR_Sniffs_Functions_FunctionDeclarationSniff not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.MultiLineFunctionDeclaration.OneParamPerLine</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultiLineFunctionDeclarationOneParamPerLine</name>
      <configKey>rulesets/MultiLineFunctionDeclaration</configKey>
      <description><![CDATA[Multi-line function declarations must define one parameter per line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterComma</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MultiLineFunctionDeclarationContentAfterComma</name>
      <configKey>rulesets/MultiLineFunctionDeclaration</configKey>
      <description><![CDATA[Commas in multi-line function declarations must be the last content on a line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.NamingConventions.ConstantCase.</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ConstantCase</name>
      <configKey>rulesets/ConstantCase</configKey>
      <description><![CDATA[Class Generic_Sniffs_PHP_LowerCaseConstantSniff not found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.NamingConventions.ValidFunctionName.DoubleUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNameDoubleUnderscore</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[Function name "%s" is invalid; only PHP magic methods should be prefixed with a double underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.NamingConventions.ValidFunctionName.NotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidFunctionNameNotCamelCaps</name>
      <configKey>rulesets/ValidFunctionName</configKey>
      <description><![CDATA[Function name "%s" is not in camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.NamingConventions.ValidVariableName.NotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNameNotCamelCaps</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.NamingConventions.ValidVariableName.NotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNameNotCamelCaps</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.NamingConventions.ValidVariableName.PublicHasUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNamePublicHasUnderscore</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[%s member variable "%s" must not contain a leading underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNamePrivateNoUnderscore</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Private member variable "%s" must contain a leading underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.NamingConventions.ValidVariableName.MemberNotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNameMemberNotCamelCaps</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.NamingConventions.ValidVariableName.StringNotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNameStringNotCamelCaps</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Objects.DisallowObjectStringIndex.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowObjectStringIndexFound</name>
      <configKey>rulesets/DisallowObjectStringIndex</configKey>
      <description><![CDATA[Object indexes must be written in dot notation]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Objects.ObjectInstantiation.NotAssigned</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ObjectInstantiationNotAssigned</name>
      <configKey>rulesets/ObjectInstantiation</configKey>
      <description><![CDATA[New objects must be assigned to a variable]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Objects.ObjectMemberComma.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ObjectMemberCommaMissing</name>
      <configKey>rulesets/ObjectMemberComma</configKey>
      <description><![CDATA[Last member of object must not be followed by a comma]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Operators.ComparisonOperatorUsage.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ComparisonOperatorUsageNotAllowed</name>
      <configKey>rulesets/ComparisonOperatorUsage</configKey>
      <description><![CDATA[Operator %s prohibited; use %s instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ComparisonOperatorUsageImplicitTrue</name>
      <configKey>rulesets/ComparisonOperatorUsage</configKey>
      <description><![CDATA[Implicit true comparisons prohibited; use === TRUE instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ComparisonOperatorUsageImplicitTrue</name>
      <configKey>rulesets/ComparisonOperatorUsage</configKey>
      <description><![CDATA[Implicit true comparisons prohibited; use === TRUE instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Operators.IncrementDecrementUsage.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncrementDecrementUsageNotAllowed</name>
      <configKey>rulesets/IncrementDecrementUsage</configKey>
      <description><![CDATA[Increment and decrement operators cannot be used in an arithmetic operation]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Operators.IncrementDecrementUsage.NoBrackets</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncrementDecrementUsageNoBrackets</name>
      <configKey>rulesets/IncrementDecrementUsage</configKey>
      <description><![CDATA[Increment and decrement operators must be bracketed when used in string concatenation]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Operators.IncrementDecrementUsage.</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>IncrementDecrementUsage</name>
      <configKey>rulesets/IncrementDecrementUsage</configKey>
      <description><![CDATA[Increment]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Operators.ValidLogicalOperators.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidLogicalOperatorsNotAllowed</name>
      <configKey>rulesets/ValidLogicalOperators</configKey>
      <description><![CDATA[Logical operator "%s" is prohibited; use "%s" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.CommentedOutCode.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>CommentedOutCodeFound</name>
      <configKey>rulesets/CommentedOutCode</configKey>
      <description><![CDATA[This comment is %s%% valid code; is this commented out code?]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.DisallowComparisonAssignment.AssignedComparison</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowComparisonAssignmentAssignedComparison</name>
      <configKey>rulesets/DisallowComparisonAssignment</configKey>
      <description><![CDATA[The value of a comparison must not be assigned to a variable]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.DisallowComparisonAssignment.AssignedBool</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowComparisonAssignmentAssignedBool</name>
      <configKey>rulesets/DisallowComparisonAssignment</configKey>
      <description><![CDATA[The value of a boolean operation must not be assigned to a variable]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.DisallowMultipleAssignments.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowMultipleAssignmentsFound</name>
      <configKey>rulesets/DisallowMultipleAssignments</configKey>
      <description><![CDATA[Assignments must be the first block of code on a line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.DisallowSizeFunctionsInLoops.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DisallowSizeFunctionsInLoopsFound</name>
      <configKey>rulesets/DisallowSizeFunctionsInLoops</configKey>
      <description><![CDATA[The use of %s inside a loop condition is not allowed; assign the return value to a variable and use the variable in the loop condition instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpEmpty</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Empty embedded PHP tag found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.SpacingBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpSpacingBefore</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Blank line found at start of embedded PHP content]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.ContentAfterOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpContentAfterOpen</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Opening PHP tag must be on a line by itself]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.Indent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpIndent</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[First line of embedded PHP code must be indented %s spaces; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.SpacingAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpSpacingAfter</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Blank line found at end of embedded PHP content]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.ContentAfterEnd</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpContentAfterEnd</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Closing PHP tag must be on a line by itself]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.Empty</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpEmpty</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Empty embedded PHP tag found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.SpacingAfterOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpSpacingAfterOpen</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Expected 1 space after opening PHP tag; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.NoSemicolon</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpNoSemicolon</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[No description available]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.MultipleStatements</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpMultipleStatements</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Inline PHP statement must contain one statement per line; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.NoSpaceBeforeClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpNoSpaceBeforeClose</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Expected 1 space before closing PHP tag; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.NoSpaceBeforeClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpNoSpaceBeforeClose</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Expected 1 space before closing PHP tag; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.EmbeddedPhp.SpacingBeforeClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EmbeddedPhpSpacingBeforeClose</name>
      <configKey>rulesets/EmbeddedPhp</configKey>
      <description><![CDATA[Expected 1 space before closing PHP tag; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.Eval.Discouraged</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EvalDiscouraged</name>
      <configKey>rulesets/Eval</configKey>
      <description><![CDATA[Use of eval() is discouraged]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.GlobalKeyword.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>GlobalKeywordNotAllowed</name>
      <configKey>rulesets/GlobalKeyword</configKey>
      <description><![CDATA[Use of the "global" keyword is forbidden; use "$GLOBALS[\'%s\']" instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.Heredoc.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>HeredocNotAllowed</name>
      <configKey>rulesets/Heredoc</configKey>
      <description><![CDATA[Use of heredoc syntax ("<<<") is not allowed; use standard strings or inline HTML instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.InnerFunctions.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>InnerFunctionsNotAllowed</name>
      <configKey>rulesets/InnerFunctions</configKey>
      <description><![CDATA[The use of inner functions is forbidden]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.LowercasePHPFunctions.KeywordUppercase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LowercasePHPFunctionsKeywordUppercase</name>
      <configKey>rulesets/LowercasePHPFunctions</configKey>
      <description><![CDATA[%s keyword must be lowercase; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.PHP.LowercasePHPFunctions.CallUppercase</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LowercasePHPFunctionsCallUppercase</name>
      <configKey>rulesets/LowercasePHPFunctions</configKey>
      <description><![CDATA[Calls to inbuilt PHP functions must be lowercase; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Scope.MemberVarScope.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MemberVarScopeMissing</name>
      <configKey>rulesets/MemberVarScope</configKey>
      <description><![CDATA[Scope modifier not specified for member variable "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Scope.MethodScope.Missing</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MethodScopeMissing</name>
      <configKey>rulesets/MethodScope</configKey>
      <description><![CDATA[No scope modifier specified for function "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Scope.StaticThisUsage.Found</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>StaticThisUsageFound</name>
      <configKey>rulesets/StaticThisUsage</configKey>
      <description><![CDATA[Usage of "$this" in static methods will cause runtime errors]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Strings.DoubleQuoteUsage.ContainsVar</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DoubleQuoteUsageContainsVar</name>
      <configKey>rulesets/DoubleQuoteUsage</configKey>
      <description><![CDATA[Variable "%s" not allowed in double quoted string; use concatenation instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Strings.DoubleQuoteUsage.NotRequired</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>DoubleQuoteUsageNotRequired</name>
      <configKey>rulesets/DoubleQuoteUsage</configKey>
      <description><![CDATA[String %s does not require double quotes; use single quotes instead]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.Strings.EchoedStrings.HasBracket</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>EchoedStringsHasBracket</name>
      <configKey>rulesets/EchoedStrings</configKey>
      <description><![CDATA[Echoed strings should not be bracketed]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.CastSpacing.ContainsWhiteSpace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>CastSpacingContainsWhiteSpace</name>
      <configKey>rulesets/CastSpacing</configKey>
      <description><![CDATA[Cast statements must not contain whitespace; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ControlStructureSpacingSpacingAfterOpenBrace</name>
      <configKey>rulesets/ControlStructureSpacing</configKey>
      <description><![CDATA[Expected 0 spaces after opening bracket; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ControlStructureSpacing.SpaceBeforeCloseBrace</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ControlStructureSpacingSpaceBeforeCloseBrace</name>
      <configKey>rulesets/ControlStructureSpacing</configKey>
      <description><![CDATA[Expected 0 spaces before closing bracket; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeOpen</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ControlStructureSpacingSpacingBeforeOpen</name>
      <configKey>rulesets/ControlStructureSpacing</configKey>
      <description><![CDATA[Blank line found at start of control structure]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ControlStructureSpacingSpacingAfterClose</name>
      <configKey>rulesets/ControlStructureSpacing</configKey>
      <description><![CDATA[Blank line found at end of control structure]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ControlStructureSpacing.LineAfterClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ControlStructureSpacingLineAfterClose</name>
      <configKey>rulesets/ControlStructureSpacing</configKey>
      <description><![CDATA[Blank line found after control structure]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ControlStructureSpacingNoLineAfterClose</name>
      <configKey>rulesets/ControlStructureSpacing</configKey>
      <description><![CDATA[No blank line found after control structure]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBetween</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionClosingBraceSpaceSpacingBetween</name>
      <configKey>rulesets/FunctionClosingBraceSpace</configKey>
      <description><![CDATA[The opening and closing braces of empty functions must be directly next to each other; e.g.]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.FunctionClosingBraceSpace.ContentBeforeClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionClosingBraceSpaceContentBeforeClose</name>
      <configKey>rulesets/FunctionClosingBraceSpace</configKey>
      <description><![CDATA[Closing brace of nested function must be on a new line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeNestedClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionClosingBraceSpaceSpacingBeforeNestedClose</name>
      <configKey>rulesets/FunctionClosingBraceSpace</configKey>
      <description><![CDATA[Expected 0 blank lines before closing brace of nested function; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionClosingBraceSpaceSpacingBeforeClose</name>
      <configKey>rulesets/FunctionClosingBraceSpace</configKey>
      <description><![CDATA[Expected 1 blank line before closing function brace; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionOpeningBraceSpaceSpacingAfter</name>
      <configKey>rulesets/FunctionOpeningBraceSpace</configKey>
      <description><![CDATA[Expected 0 blank lines after opening function brace; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfterNested</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionOpeningBraceSpaceSpacingAfterNested</name>
      <configKey>rulesets/FunctionOpeningBraceSpace</configKey>
      <description><![CDATA[Expected 0 blank lines before opening brace of nested function; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.ContentBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionOpeningBraceSpaceContentBefore</name>
      <configKey>rulesets/FunctionOpeningBraceSpace</configKey>
      <description><![CDATA[Opening brace should be on a new line]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionOpeningBraceSpaceSpacingBefore</name>
      <configKey>rulesets/FunctionOpeningBraceSpace</configKey>
      <description><![CDATA[Opening brace should be on the line after the declaration; found %s blank line(s)]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.FunctionSpacing.After</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionSpacingAfter</name>
      <configKey>rulesets/FunctionSpacing</configKey>
      <description><![CDATA[Expected 2 blank lines after function; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.FunctionSpacing.Before</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>FunctionSpacingBefore</name>
      <configKey>rulesets/FunctionSpacing</configKey>
      <description><![CDATA[Expected 2 blank lines before function; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.LanguageConstructSpacing.IncorrectSingle</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LanguageConstructSpacingIncorrectSingle</name>
      <configKey>rulesets/LanguageConstructSpacing</configKey>
      <description><![CDATA[Language constructs must be followed by a single space; expected 1 space but found %s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.LanguageConstructSpacing.Incorrect</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LanguageConstructSpacingIncorrect</name>
      <configKey>rulesets/LanguageConstructSpacing</configKey>
      <description><![CDATA[Language constructs must be followed by a single space; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LogicalOperatorSpacingNoSpaceBefore</name>
      <configKey>rulesets/LogicalOperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space before logical operator; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LogicalOperatorSpacingTooMuchSpaceBefore</name>
      <configKey>rulesets/LogicalOperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space before logical operator; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LogicalOperatorSpacingNoSpaceAfter</name>
      <configKey>rulesets/LogicalOperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space after logical operator; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>LogicalOperatorSpacingTooMuchSpaceAfter</name>
      <configKey>rulesets/LogicalOperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space after logical operator; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.MemberVarSpacing.After</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>MemberVarSpacingAfter</name>
      <configKey>rulesets/MemberVarSpacing</configKey>
      <description><![CDATA[Expected 1 blank line before member var; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ObjectOperatorSpacing.Before</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ObjectOperatorSpacingBefore</name>
      <configKey>rulesets/ObjectOperatorSpacing</configKey>
      <description><![CDATA[Space found before object operator]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ObjectOperatorSpacing.After</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ObjectOperatorSpacingAfter</name>
      <configKey>rulesets/ObjectOperatorSpacing</configKey>
      <description><![CDATA[Space found after object operator]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceBeforeAmp</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorSpacingNoSpaceBeforeAmp</name>
      <configKey>rulesets/OperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space before "&" operator; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.OperatorSpacing.SpacingBeforeAmp</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorSpacingSpacingBeforeAmp</name>
      <configKey>rulesets/OperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space before "&" operator; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfterAmp</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorSpacingNoSpaceAfterAmp</name>
      <configKey>rulesets/OperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space after "&" operator; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.OperatorSpacing.SpacingAfterAmp</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorSpacingSpacingAfterAmp</name>
      <configKey>rulesets/OperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space after "&" operator; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorSpacingNoSpaceBefore</name>
      <configKey>rulesets/OperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space before \"$operator\"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.OperatorSpacing.SpacingBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorSpacingSpacingBefore</name>
      <configKey>rulesets/OperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space before "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorSpacingNoSpaceAfter</name>
      <configKey>rulesets/OperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space after \"$operator\"; 0 found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.OperatorSpacing.SpacingAfter</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>OperatorSpacingSpacingAfter</name>
      <configKey>rulesets/OperatorSpacing</configKey>
      <description><![CDATA[Expected 1 space after "%s"; %s found]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.PropertyLabelSpacing.Before</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>PropertyLabelSpacingBefore</name>
      <configKey>rulesets/PropertyLabelSpacing</configKey>
      <description><![CDATA[There must be no space before the colon in a property/label declaration]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.PropertyLabelSpacing.After</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>PropertyLabelSpacingAfter</name>
      <configKey>rulesets/PropertyLabelSpacing</configKey>
      <description><![CDATA[There must be a single space after the colon in a property/label declaration]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ScopeClosingBraceContentBefore</name>
      <configKey>rulesets/ScopeClosingBrace</configKey>
      <description><![CDATA[Closing brace must be on a line by itself]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ScopeClosingBrace.Indent</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ScopeClosingBraceIndent</name>
      <configKey>rulesets/ScopeClosingBrace</configKey>
      <description><![CDATA[Closing brace indented incorrectly; expected %s spaces]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.ScopeKeywordSpacing.Incorrect</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ScopeKeywordSpacingIncorrect</name>
      <configKey>rulesets/ScopeKeywordSpacing</configKey>
      <description><![CDATA[Scope keyword "%s" must be followed by a single space]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.SemicolonSpacing.Incorrect</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SemicolonSpacingIncorrect</name>
      <configKey>rulesets/SemicolonSpacing</configKey>
      <description><![CDATA[Space found before semicolon; expected "%s" but found "%s]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>SuperfluousWhitespaceEmptyLines</name>
      <configKey>rulesets/SuperfluousWhitespace</configKey>
      <description><![CDATA[Functions must not contain multiple empty lines in a row; found %s empty lines]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Zend.Files.ClosingTag.NotAllowed</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ClosingTagNotAllowed</name>
      <configKey>rulesets/ClosingTag</configKey>
      <description><![CDATA[A closing tag is not permitted at the end of a PHP file]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Zend.NamingConventions.ValidVariableName.NotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNameNotCamelCaps</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Zend.NamingConventions.ValidVariableName.NotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNameNotCamelCaps</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Zend.NamingConventions.ValidVariableName.PublicHasUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNamePublicHasUnderscore</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Public member variable "%s" must not contain a leading underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNamePrivateNoUnderscore</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[%s member variable "%s" must contain a leading underscore]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNameMemberVarNotCamelCaps</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
    </rule>
    <rule priority="MAJOR">
      <key>Zend.NamingConventions.ValidVariableName.StringVarNotCamelCaps</key>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <category name="Maintainability"/>
      <name>ValidVariableNameStringVarNotCamelCaps</name>
      <configKey>rulesets/ValidVariableName</configKey>
      <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
    </rule>
  </rules>
</profile>
