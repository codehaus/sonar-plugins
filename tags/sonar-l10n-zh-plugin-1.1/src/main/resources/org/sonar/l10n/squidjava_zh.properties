rule.squid.ArchitecturalConstraint.name=架构约束
rule.squid.ArchitecturalConstraint.param.fromClasses=可选的。如果没有定义这个属性，所有的类都应该坚持这方面的限制。例如：**.web.**。
rule.squid.ArchitecturalConstraint.param.toClasses=强制性。比如： java.util.Vector, java.util.Hashtable, java.util.Enumeration

rule.squid.AvoidBreakOutsideSwitch.name=避免在'switch' 语句外使用 'break' 分支语句

rule.squid.AvoidContinueStatement.name=避免使用 'continue' 分支语句

rule.squid.CallToDeprecatedMethod.name=避免使用废弃的方法

rule.squid.ClassCyclomaticComplexity.name=避免太复杂的类
rule.squid.ClassCyclomaticComplexity.param.max=允许的最大复杂度。

rule.squid.EmptyFile.name=空文件

rule.squid.MaximumInheritanceDepth.name=避免太深的继承树
rule.squid.MaximumInheritanceDepth.param.max=继承树的最大深度。

rule.squid.MethodCyclomaticComplexity.name=避免太复杂的方法
rule.squid.MethodCyclomaticComplexity.param.max=允许的最大复杂度

rule.squid.NoSonar.name=避免使用 //NOSONAR 标记

rule.squid.UndocumentedApi.name=未注释的 API
rule.squid.UndocumentedApi.param.forClasses=可选的。如果没有定义这个属性，所有的类都应该坚持这方面的限制。比如： **.api.**

rule.squid.UnusedPrivateMethod.name=未使用的私有方法

rule.squid.UnusedProtectedMethod.name=未使用的被保护的方法

rule.squid.CommentedOutCodeLine.name=避免使用行注释删除代码

rule.squid.CycleBetweenPackages.name=避免java包之间的循环依赖
