<CodeNarc url='http://www.codenarc.org' version='0.9'>
  <Report timestamp='May 10, 2010 10:04:28 PM'/>
  <Project title='Sample Project'>
    <SourceDirectory>samples\src</SourceDirectory>
  </Project>
  <PackageSummary totalFiles='7' filesWithViolations='4' priority1='0' priority2='11' priority3='5'></PackageSummary>
  <Package path='org' totalFiles='7' filesWithViolations='4' priority1='0' priority2='11' priority3='5'></Package>
  <Package path='org/codenarc' totalFiles='7' filesWithViolations='4' priority1='0' priority2='11'
           priority3='5'></Package>
  <Package path='org/codenarc/sample' totalFiles='7' filesWithViolations='4' priority1='0' priority2='11'
           priority3='5'></Package>
  <Package path='org/codenarc/sample/domain' totalFiles='2' filesWithViolations='1' priority1='0' priority2='3'
           priority3='3'>
    <File name='SampleDomain.groovy'>
      <Violation ruleName='EmptyElseBlock' priority='2' lineNumber='24'>
        <SourceLine><![CDATA[else {]]></SourceLine>
      </Violation>
      <Violation ruleName='EmptyIfStatement' priority='2' lineNumber='21'>
        <SourceLine><![CDATA[if (name) {]]></SourceLine>
      </Violation>
      <Violation ruleName='StringInstantiation' priority='2' lineNumber='17'>
        <SourceLine><![CDATA[def title = new String('Sample Domain')]]></SourceLine>
      </Violation>
      <Violation ruleName='DuplicateImport' priority='3' lineNumber='5'>
        <SourceLine><![CDATA[import org.codenarc.sample.other.Other]]></SourceLine>
      </Violation>
      <Violation ruleName='ImportFromSamePackage' priority='3' lineNumber='4'>
        <SourceLine><![CDATA[import org.codenarc.sample.domain.OtherDomain]]></SourceLine>
      </Violation>
      <Violation ruleName='UnnecessaryGroovyImport' priority='3' lineNumber='3'>
        <SourceLine><![CDATA[import java.util.Map]]></SourceLine>
      </Violation>
    </File>
  </Package>
  <Package path='org/codenarc/sample/other' totalFiles='1' filesWithViolations='0' priority1='0' priority2='0'
           priority3='0'></Package>
  <Package path='org/codenarc/sample/service' totalFiles='4' filesWithViolations='3' priority1='0' priority2='8'
           priority3='2'>
    <File name='NewService.groovy'>
      <Violation ruleName='EmptyForStatement' priority='2' lineNumber='12'>
        <SourceLine><![CDATA[for(int i=0; i >< values.size(); i++) {]]></SourceLine>
      </Violation>
      <Violation ruleName='EmptyWhileStatement' priority='2' lineNumber='18'>
        <SourceLine><![CDATA[while (!values.empty) {]]></SourceLine>
      </Violation>
    </File>
    <File name='OtherService.groovy'>
      <Violation ruleName='EmptyFinallyBlock' priority='2' lineNumber='13'>
        <SourceLine><![CDATA[finally {]]></SourceLine>
      </Violation>
      <Violation ruleName='EmptyTryBlock' priority='2' lineNumber='10'>
        <SourceLine><![CDATA[try {]]></SourceLine>
      </Violation>
      <Violation ruleName='ReturnFromFinallyBlock' priority='2' lineNumber='24'>
        <SourceLine><![CDATA[return]]></SourceLine>
      </Violation>
    </File>
    <File name='SampleService.groovy'>
      <Violation ruleName='BooleanInstantiation' priority='2' lineNumber='17'>
        <SourceLine><![CDATA[def shouldRun = new Boolean(true)]]></SourceLine>
      </Violation>
      <Violation ruleName='EmptyCatchBlock' priority='2' lineNumber='20'>
        <SourceLine><![CDATA[} catch(Throwable t) {]]></SourceLine>
      </Violation>
      <Violation ruleName='ThrowExceptionFromFinallyBlock' priority='2' lineNumber='31'>
        <SourceLine><![CDATA[throw new Exception('bad stuff')]]></SourceLine>
      </Violation>
      <Violation ruleName='UnnecessaryGroovyImport' priority='3' lineNumber='3'>
        <SourceLine><![CDATA[import java.util.Map]]></SourceLine>
      </Violation>
      <Violation ruleName='UnusedImport' priority='3' lineNumber='4'>
        <SourceLine><![CDATA[import org.codenarc.sample.domain.SampleDomain]]></SourceLine>
      </Violation>
    </File>
  </Package>
  <Rules>
    <Rule name='BooleanInstantiation'>
      <Description>
        <![CDATA[Use Boolean.valueOf() for variable values or Boolean.TRUE and Boolean.FALSE for constant values instead of calling the Boolean() constructor directly or calling Boolean.valueOf(true) or Boolean.valueOf(false).]]></Description>
    </Rule>
    <Rule name='CloneableWithoutClone'>
      <Description><![CDATA[A class that implements java.lang.Cloneable should define a clone() method.]]></Description>
    </Rule>
    <Rule name='ConstantIfExpression'>
      <Description>
        <![CDATA[Checks for if statements with a constant value for the if expression, such as true, false, null, or a literal constant value.]]></Description>
    </Rule>
    <Rule name='ConstantTernaryExpression'>
      <Description>
        <![CDATA[Checks for ternary expressions with a constant value for the boolean expression, such as true, false, null, or a literal constant value.]]></Description>
    </Rule>
    <Rule name='DuplicateImport'>
      <Description><![CDATA[Duplicate import statements are unnecessary.]]></Description>
    </Rule>
    <Rule name='EmptyCatchBlock'>
      <Description><![CDATA[In most cases, exceptions should not be caught and ignored (swallowed).]]></Description>
    </Rule>
    <Rule name='EmptyElseBlock'>
      <Description><![CDATA[Empty else blocks are confusing and serve no purpose.]]></Description>
    </Rule>
    <Rule name='EmptyFinallyBlock'>
      <Description><![CDATA[Empty finally blocks are confusing and serve no purpose.]]></Description>
    </Rule>
    <Rule name='EmptyForStatement'>
      <Description><![CDATA[Empty for statements are confusing and serve no purpose.]]></Description>
    </Rule>
    <Rule name='EmptyIfStatement'>
      <Description><![CDATA[Empty if statements are confusing and serve no purpose.]]></Description>
    </Rule>
    <Rule name='EmptySwitchStatement'>
      <Description><![CDATA[Empty switch statements are confusing and serve no purpose.]]></Description>
    </Rule>
    <Rule name='EmptySynchronizedStatement'>
      <Description><![CDATA[Empty synchronized statements are confusing and serve no purpose.]]></Description>
    </Rule>
    <Rule name='EmptyTryBlock'>
      <Description><![CDATA[Empty try blocks are confusing and serve no purpose.]]></Description>
    </Rule>
    <Rule name='EmptyWhileStatement'>
      <Description><![CDATA[Empty while statements are confusing and serve no purpose.]]></Description>
    </Rule>
    <Rule name='EqualsAndHashCode'>
      <Description>
        <![CDATA[If either the equals(Object) or the hashCode() methods are overridden within a class, then both must be overridden.]]></Description>
    </Rule>
    <Rule name='ImportFromSamePackage'>
      <Description><![CDATA[An import of a class that is within the same package is unnecessary.]]></Description>
    </Rule>
    <Rule name='ReturnFromFinallyBlock'>
      <Description>
        <![CDATA[Returning from a finally block is confusing and can hide the original exception.]]></Description>
    </Rule>
    <Rule name='StringInstantiation'>
      <Description>
        <![CDATA[Use a String literal (e.g., "...") instead of calling the corresponding String constructor (new String("..")) directly.]]></Description>
    </Rule>
    <Rule name='ThrowExceptionFromFinallyBlock'>
      <Description>
        <![CDATA[Throwing an exception from a finally block is confusing and can hide the original exception.]]></Description>
    </Rule>
    <Rule name='UnnecessaryGroovyImport'>
      <Description>
        <![CDATA[A Groovy file does not need to include an import for classes from java.lang, java.util, java.io, java.net, groovy.lang and groovy.util, as well as the classes java.math.BigDecimal and java.math.BigInteger.]]></Description>
    </Rule>
    <Rule name='UnnecessaryTernaryExpression'>
      <Description>
        <![CDATA[Checks for ternary expressions where the conditional expression always evaluates to a boolean and the true and false expressions are merely returning true and false constants. Also checks for ternary expressions where both expressions are the same constant or variable.]]></Description>
    </Rule>
    <Rule name='UnusedImport'>
      <Description>
        <![CDATA[Imports for a class that is never referenced within the source file is unnecessary.]]></Description>
    </Rule>
  </Rules>
</CodeNarc>