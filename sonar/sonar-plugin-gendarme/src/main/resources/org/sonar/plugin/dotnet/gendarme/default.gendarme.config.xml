<?xml version="1.0" encoding="UTF-8"?>
<!--

    Maven and Sonar plugin for .Net
    Copyright (C) 2010 Jose Chillan and Alexandre Victoor
    mailto: jose.chillan@codehaus.org or alexvictoor@codehaus.org

    Sonar is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 3 of the License, or (at your option) any later version.

    Sonar is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with Sonar; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02

-->
<gendarme>
	<ruleset name="default">
		<rules
			include="DoNotLockOnThisOrTypesRule | DoNotLockOnWeakIdentityObjectsRule | DoNotUseLockedRegionOutsideMethodRule | DoNotUseMethodImplOptionsSynchronizedRule | DoNotUseThreadStaticWithInstanceFieldsRule | DoubleCheckLockingRule | NonConstantStaticFieldsShouldNotBeVisibleRule | ProtectCallToEventDelegatesRule | ReviewLockUsedOnlyForOperationsOnVariablesRule | WriteStaticFieldFromInstanceMethodRule"
			from="Gendarme.Rules.Concurrency.dll" />
		<rules
			include="AttributeStringLiteralsShouldParseCorrectlyRule | AvoidConstructorsInStaticTypesRule | AvoidFloatingPointEqualityRule | BadRecursiveInvocationRule | CallingEqualsWithNullArgRule | DisposableFieldsShouldBeDisposedRule | DoNotCompareWithNaNRule | DoNotRecurseInEqualityRule | DoNotRoundIntegersRule | EnsureLocalDisposalRule | FinalizersShouldCallBaseClassFinalizerRule | MethodCanBeMadeStaticRule | ProvideCorrectArgumentsToFormattingMethodsRule | ProvideCorrectRegexPatternRule | ProvideValidXPathExpressionRule | ProvideValidXmlStringRule | ReviewCastOnIntegerDivisionRule | ReviewCastOnIntegerMultiplicationRule | ReviewDoubleAssignmentRule | ReviewInconsistentIdentityRule | ReviewSelfAssignmentRule | ReviewUseOfInt64BitsToDoubleRule | ReviewUseOfModuloOneOnIntegersRule | ReviewUselessControlFlowRule | UseValueInPropertySetterRule"
			from="Gendarme.Rules.Correctness.dll" />
		<rules
			include="AddMissingTypeInheritanceDemandRule | DoNotExposeFieldsInSecuredTypeRule | DoNotExposeMethodsProtectedByLinkDemandRule | DoNotReduceTypeSecurityOnMethodsRule | ReviewSealedTypeWithInheritanceDemandRule | ReviewSuppressUnmanagedCodeSecurityUsageRule | SecureGetObjectDataOverridesRule"
			from="Gendarme.Rules.Security.Cas.dll" />
		<rules
			include="ArrayFieldsShouldNotBeReadOnlyRule | DoNotShortCircuitCertificateCheckRule | NativeFieldsShouldNotBeVisibleRule | StaticConstructorsShouldBePrivateRule"
			from="Gendarme.Rules.Security.dll" />
		<rules
			include="AvoidNonAlphanumericIdentifierRule | AvoidRedundancyInMethodNameRule | AvoidRedundancyInTypeNameRule | AvoidTypeInterfaceInconsistencyRule | DoNotPrefixEventsWithAfterOrBeforeRule | DoNotPrefixValuesWithEnumNameRule | DoNotUseReservedInEnumValueNamesRule | ParameterNamesShouldMatchOverriddenMethodRule | UseCorrectCasingRule | UseCorrectPrefixRule | UsePluralNameInEnumFlagsRule | UsePreferredTermsRule | UseSingularNameInEnumsUnlessAreFlagsRule"
			from="Gendarme.Rules.Naming.dll" />
		
		<rules
			include="AvoidArgumentExceptionDefaultConstructorRule | AvoidThrowingBasicExceptionsRule | DoNotDestroyStackTraceRule | DoNotSwallowErrorsCatchingNonSpecificExceptionsRule | DoNotThrowInUnexpectedLocationRule | DoNotThrowReservedExceptionRule | ExceptionShouldBeVisibleRule | InstantiateArgumentExceptionCorrectlyRule | MissingExceptionConstructorsRule | UseObjectDisposedExceptionRule"
			from="Gendarme.Rules.Exceptions.dll" />
		<rules
			include="AvoidAssemblyVersionMismatchRule | AvoidCallingProblematicMethodsRule | AvoidVisibleConstantFieldRule | CheckNewExceptionWithoutThrowingRule | CheckNewThreadWithoutStartRule | CloneMethodShouldNotReturnNullRule | ConstructorShouldNotCallVirtualMethodsRule | DisableDebuggingCodeRule | DoNotForgetNotImplementedMethodsRule | DoNotUseEnumIsAssignableFromRule | DoNotUseGetInterfaceToCheckAssignabilityRule | EqualsShouldHandleNullArgRule | GetEntryAssemblyMayReturnNullRule | ObsoleteMessagesShouldNotBeEmptyRule | OnlyUseDisposeForIDisposableTypesRule | PreferEmptyInstanceOverNullRule | PreferSafeHandleRule | ReplaceIncompleteOddnessCheckRule | ToStringShouldNotReturnNullRule"
			from="Gendarme.Rules.BadPractice.dll" />
		<rules include="AvoidExtensionMethodOnSystemObjectRule" from="Gendarme.Rules.Design.Linq.dll" />
		<rules
			include="AvoidLargeNumberOfLocalVariablesRule | AvoidLargeStructureRule | AvoidReturningArraysOnPropertiesRule | AvoidTypeGetTypeForConstantStringsRule | AvoidUncalledPrivateCodeRule | AvoidUninstantiatedInternalClassesRule | AvoidUnneededCallsOnStringRule | AvoidUnneededFieldInitializationRule | AvoidUnneededUnboxingRule | AvoidUnsealedConcreteAttributesRule | AvoidUnusedParametersRule | AvoidUnusedPrivateFieldsRule | CompareWithEmptyStringEfficientlyRule | ConsiderCustomAccessorsForNonVisibleEventsRule | DoNotIgnoreMethodResultRule | ImplementEqualsTypeRule | MathMinMaxCandidateRule | OverrideValueTypeDefaultsRule | PreferCharOverloadRule | PreferLiteralOverInitOnlyFieldsRule | RemoveUnneededFinalizerRule | RemoveUnusedLocalVariablesRule | ReviewLinqMethodRule | UseIsOperatorRule | UseStringEmptyRule | UseSuppressFinalizeOnIDisposableTypeWithFinalizerRule | UseTypeEmptyTypesRule"
			from="Gendarme.Rules.Performance.dll" />
		<rules
			include="CallBaseMethodsOnISerializableTypesRule | DeserializeOptionalFieldRule | ImplementISerializableCorrectlyRule | MarkAllNonSerializableFieldsRule | MarkEnumerationsAsSerializableRule | MissingSerializableAttributeOnISerializableTypeRule | MissingSerializationConstructorRule | UseCorrectSignatureForSerializationMethodsRule"
			from="Gendarme.Rules.Serialization.dll" />
		<rules
			include="AvoidAlwaysNullFieldRule | AvoidComplexMethodsRule | AvoidDeepInheritanceTreeRule | AvoidLackOfCohesionOfMethodsRule | AvoidUnnecessarySpecializationRule | ConsiderUsingStopwatchRule | PreferStringIsNullOrEmptyRule"
			from="Gendarme.Rules.Maintainability.dll" />
		<rules
			include="AvoidLongParameterListsRule | AvoidLongMethodsRule | AvoidLargeClassesRule | AvoidSwitchStatementsRule"
			from="Gendarme.Rules.Smells.dll" />
		<rules
			include="DelegatesPassedToNativeCodeMustIncludeExceptionHandlingRule | DoNotAssumeIntPtrSizeRule | GetLastErrorMustBeCalledRightAfterPInvokeRule | MarshalBooleansInPInvokeDeclarationsRule | MarshalStringsInPInvokeDeclarationsRule | PInvokeShouldNotBeVisibleRule | UseManagedAlternativesToPInvokeRule"
			from="Gendarme.Rules.Interoperability.dll" />
		<rules
			include="AbstractTypesShouldNotHavePublicConstructorsRule | AttributeArgumentsShouldHaveAccessorsRule | AvoidMultidimensionalIndexerRule | AvoidPropertiesWithoutGetAccessorRule | AvoidRefAndOutParametersRule | AvoidSmallNamespaceRule | AvoidVisibleFieldsRule | AvoidVisibleNestedTypesRule | ConsiderAddingInterfaceRule | ConsiderConvertingFieldToNullableRule | ConsiderConvertingMethodToPropertyRule | ConsiderUsingStaticTypeRule | DeclareEventHandlersCorrectlyRule | DisposableTypesShouldHaveFinalizerRule | DoNotDeclareProtectedMembersInSealedTypeRule | DoNotDeclareVirtualMethodsInSealedTypeRule | EnsureSymmetryForOverloadedOperatorsRule | EnumsShouldDefineAZeroValueRule | EnumsShouldUseInt32Rule | FinalizersShouldBeProtectedRule | FlagsShouldNotDefineAZeroValueRule | ImplementEqualsAndGetHashCodeInPairRule | ImplementICloneableCorrectlyRule | ImplementIComparableCorrectlyRule | InternalNamespacesShouldNotExposeTypesRule | MainShouldNotBePublicRule | MarkAssemblyWithAssemblyVersionRule | MarkAssemblyWithCLSCompliantRule | MarkAssemblyWithComVisibleRule | MissingAttributeUsageOnCustomAttributeRule | OperatorEqualsShouldBeOverloadedRule | OverrideEqualsMethodRule | PreferEventsOverMethodsRule | PreferIntegerOrStringForIndexersRule | PreferXmlAbstractionsRule | ProvideAlternativeNamesForOperatorOverloadsRule | TypesShouldBeInsideNamespacesRule | TypesWithDisposableFieldsShouldBeDisposableRule | TypesWithNativeFieldsShouldBeDisposableRule | UseCorrectDisposeSignaturesRule | UseFlagsAttributeRule"
			from="Gendarme.Rules.Design.dll" />
		<rules
			include="SystemWindowsFormsExecutableTargetRule | UseSTAThreadAttributeOnSWFEntryPointsRule"
			from="Gendarme.Rules.Ui.dll" />

		<rules
			include="AvoidMethodWithUnusedGenericTypeRule | DoNotExposeNestedGenericSignaturesRule | ImplementGenericCollectionInterfacesRule | PreferGenericsOverRefObjectRule | UseGenericEventHandlerRule"
			from="Gendarme.Rules.Design.Generic.dll" />
		
	</ruleset>
	<ruleset name="minor">
		<rules include="AvoidSwitchStatementsRule" from="Gendarme.Rules.Smells.dll" />
		<rules include="UseManagedAlternativesToPInvokeRule" from="Gendarme.Rules.Interoperability.dll" />
		<rules include="AvoidPropertiesWithoutGetAccessorRule" from="Gendarme.Rules.Design.dll" />
		<rules
			include="AddMissingTypeInheritanceDemandRule | ReviewSealedTypeWithInheritanceDemandRule"
			from="Gendarme.Rules.Security.Cas.dll" />
		<rules
			include="AvoidRedundancyInMethodNameRule | AvoidRedundancyInTypeNameRule | ParameterNamesShouldMatchOverriddenMethodRule | UsePluralNameInEnumFlagsRule"
			from="Gendarme.Rules.Naming.dll" />
		<rules
			include="ObsoleteMessagesShouldNotBeEmptyRule | PreferEmptyInstanceOverNullRule"
			from="Gendarme.Rules.BadPractice.dll" />
		<rules include="PreferCharOverloadRule | UseStringEmptyRule"
			from="Gendarme.Rules.Performance.dll" />
	</ruleset>
	<ruleset name="major">
		<rules
			include="DoNotLockOnThisOrTypesRule | DoNotLockOnWeakIdentityObjectsRule | DoNotUseLockedRegionOutsideMethodRule | DoNotUseMethodImplOptionsSynchronizedRule | DoNotUseThreadStaticWithInstanceFieldsRule | NonConstantStaticFieldsShouldNotBeVisibleRule | ProtectCallToEventDelegatesRule | ReviewLockUsedOnlyForOperationsOnVariablesRule | WriteStaticFieldFromInstanceMethodRule"
			from="Gendarme.Rules.Concurrency.dll" />
		<rules
			include="AvoidConstructorsInStaticTypesRule | AvoidFloatingPointEqualityRule | BadRecursiveInvocationRule | CallingEqualsWithNullArgRule | DisposableFieldsShouldBeDisposedRule | DoNotCompareWithNaNRule | DoNotRecurseInEqualityRule | DoNotRoundIntegersRule | EnsureLocalDisposalRule | FinalizersShouldCallBaseClassFinalizerRule | MethodCanBeMadeStaticRule | ProvideCorrectArgumentsToFormattingMethodsRule | ProvideCorrectRegexPatternRule | ProvideValidXPathExpressionRule | ProvideValidXmlStringRule | ReviewCastOnIntegerDivisionRule | ReviewCastOnIntegerMultiplicationRule | ReviewDoubleAssignmentRule | ReviewInconsistentIdentityRule | ReviewSelfAssignmentRule | ReviewUseOfInt64BitsToDoubleRule | ReviewUseOfModuloOneOnIntegersRule | UseValueInPropertySetterRule"
			from="Gendarme.Rules.Correctness.dll" />
		<rules
			include="DoNotExposeFieldsInSecuredTypeRule | DoNotExposeMethodsProtectedByLinkDemandRule | DoNotReduceTypeSecurityOnMethodsRule | SecureGetObjectDataOverridesRule"
			from="Gendarme.Rules.Security.Cas.dll" />
		<rules
			include="ArrayFieldsShouldNotBeReadOnlyRule | DoNotShortCircuitCertificateCheckRule | NativeFieldsShouldNotBeVisibleRule | StaticConstructorsShouldBePrivateRule"
			from="Gendarme.Rules.Security.dll" />
		<rules
			include="AvoidNonAlphanumericIdentifierRule | DoNotPrefixEventsWithAfterOrBeforeRule | DoNotPrefixValuesWithEnumNameRule | DoNotUseReservedInEnumValueNamesRule | UseCorrectCasingRule | UseCorrectPrefixRule | UsePreferredTermsRule | UseSingularNameInEnumsUnlessAreFlagsRule"
			from="Gendarme.Rules.Naming.dll" />
		<rules
			include="DoNotThrowInUnexpectedLocationRule | DoNotThrowReservedExceptionRule | ExceptionShouldBeVisibleRule | InstantiateArgumentExceptionCorrectlyRule | MissingExceptionConstructorsRule | UseObjectDisposedExceptionRule"
			from="Gendarme.Rules.Exceptions.dll" />
		<rules
			include="AvoidVisibleConstantFieldRule | CheckNewExceptionWithoutThrowingRule | CheckNewThreadWithoutStartRule | CloneMethodShouldNotReturnNullRule | ConstructorShouldNotCallVirtualMethodsRule | DoNotForgetNotImplementedMethodsRule | DoNotUseEnumIsAssignableFromRule | DoNotUseGetInterfaceToCheckAssignabilityRule | EqualsShouldHandleNullArgRule | GetEntryAssemblyMayReturnNullRule | OnlyUseDisposeForIDisposableTypesRule | PreferSafeHandleRule | ReplaceIncompleteOddnessCheckRule | ToStringShouldNotReturnNullRule"
			from="Gendarme.Rules.BadPractice.dll" />
		<rules
			include="AvoidLargeStructureRule | AvoidReturningArraysOnPropertiesRule | AvoidTypeGetTypeForConstantStringsRule | AvoidUnneededCallsOnStringRule | AvoidUnneededFieldInitializationRule | AvoidUnneededUnboxingRule | AvoidUnusedParametersRule | CompareWithEmptyStringEfficientlyRule | ConsiderCustomAccessorsForNonVisibleEventsRule | DoNotIgnoreMethodResultRule | ImplementEqualsTypeRule | MathMinMaxCandidateRule | OverrideValueTypeDefaultsRule | PreferLiteralOverInitOnlyFieldsRule | RemoveUnneededFinalizerRule | ReviewLinqMethodRule | UseIsOperatorRule | UseSuppressFinalizeOnIDisposableTypeWithFinalizerRule | UseTypeEmptyTypesRule"
			from="Gendarme.Rules.Performance.dll" />

		<rules
			include="AvoidDeepInheritanceTreeRule | AvoidUnnecessarySpecializationRule | ConsiderUsingStopwatchRule | PreferStringIsNullOrEmptyRule"
			from="Gendarme.Rules.Maintainability.dll" />
		<rules
			include="CallBaseMethodsOnISerializableTypesRule | DeserializeOptionalFieldRule | ImplementISerializableCorrectlyRule | MarkAllNonSerializableFieldsRule | MarkEnumerationsAsSerializableRule | MissingSerializableAttributeOnISerializableTypeRule | MissingSerializationConstructorRule | UseCorrectSignatureForSerializationMethodsRule"
			from="Gendarme.Rules.Serialization.dll" />
		<rules
			include="AvoidLongParameterListsRule | AvoidLongMethodsRule | AvoidLargeClassesRule"
			from="Gendarme.Rules.Smells.dll" />
		<rules
			include="DelegatesPassedToNativeCodeMustIncludeExceptionHandlingRule | DoNotAssumeIntPtrSizeRule | GetLastErrorMustBeCalledRightAfterPInvokeRule | MarshalBooleansInPInvokeDeclarationsRule | MarshalStringsInPInvokeDeclarationsRule | PInvokeShouldNotBeVisibleRule"
			from="Gendarme.Rules.Interoperability.dll" />
		<rules
			include="AbstractTypesShouldNotHavePublicConstructorsRule | AvoidMultidimensionalIndexerRule | AvoidVisibleFieldsRule | AvoidVisibleNestedTypesRule | ConsiderAddingInterfaceRule | ConsiderConvertingFieldToNullableRule | ConsiderUsingStaticTypeRule | DeclareEventHandlersCorrectlyRule | DisposableTypesShouldHaveFinalizerRule | EnsureSymmetryForOverloadedOperatorsRule | EnumsShouldDefineAZeroValueRule | EnumsShouldUseInt32Rule | FinalizersShouldBeProtectedRule | FlagsShouldNotDefineAZeroValueRule | ImplementICloneableCorrectlyRule | ImplementIComparableCorrectlyRule | InternalNamespacesShouldNotExposeTypesRule | MainShouldNotBePublicRule | MarkAssemblyWithAssemblyVersionRule | MarkAssemblyWithCLSCompliantRule | MarkAssemblyWithComVisibleRule | MissingAttributeUsageOnCustomAttributeRule | PreferEventsOverMethodsRule | PreferIntegerOrStringForIndexersRule | ProvideAlternativeNamesForOperatorOverloadsRule | TypesWithDisposableFieldsShouldBeDisposableRule | TypesWithNativeFieldsShouldBeDisposableRule | UseCorrectDisposeSignaturesRule | UseFlagsAttributeRule"
			from="Gendarme.Rules.Design.dll" />
		<rules
			include="SystemWindowsFormsExecutableTargetRule | UseSTAThreadAttributeOnSWFEntryPointsRule"
			from="Gendarme.Rules.Ui.dll" />
		<rules
			include="AvoidMethodWithUnusedGenericTypeRule | DoNotExposeNestedGenericSignaturesRule | ImplementGenericCollectionInterfacesRule | PreferGenericsOverRefObjectRule | UseGenericEventHandlerRule"
			from="Gendarme.Rules.Design.Generic.dll" />
	</ruleset>
	<ruleset name="critical">
		<rules include="DoubleCheckLockingRule" from="Gendarme.Rules.Concurrency.dll" />
		<rules
			include="AttributeStringLiteralsShouldParseCorrectlyRule | ReviewUselessControlFlowRule"
			from="Gendarme.Rules.Correctness.dll" />
		<rules
			include="AttributeArgumentsShouldHaveAccessorsRule | AvoidRefAndOutParametersRule | AvoidSmallNamespaceRule | ConsiderConvertingMethodToPropertyRule | DoNotDeclareProtectedMembersInSealedTypeRule | DoNotDeclareVirtualMethodsInSealedTypeRule | ImplementEqualsAndGetHashCodeInPairRule | OperatorEqualsShouldBeOverloadedRule | OverrideEqualsMethodRule | PreferXmlAbstractionsRule"
			from="Gendarme.Rules.Design.dll" />
		<rules include="ReviewSuppressUnmanagedCodeSecurityUsageRule"
			from="Gendarme.Rules.Security.Cas.dll" />
		<rules include="AvoidTypeInterfaceInconsistencyRule" from="Gendarme.Rules.Naming.dll" />
		<rules include="AvoidCallingProblematicMethodsRule | DisableDebuggingCodeRule"
			from="Gendarme.Rules.BadPractice.dll" />
		<rules
			include="AvoidArgumentExceptionDefaultConstructorRule | AvoidThrowingBasicExceptionsRule | DoNotSwallowErrorsCatchingNonSpecificExceptionsRule"
			from="Gendarme.Rules.Exceptions.dll" />
		
		<rules
			include="AvoidLargeNumberOfLocalVariablesRule | AvoidUninstantiatedInternalClassesRule | AvoidUnsealedConcreteAttributesRule | AvoidUnusedPrivateFieldsRule | RemoveUnusedLocalVariablesRule"
			from="Gendarme.Rules.Performance.dll" />
		<rules include="AvoidExtensionMethodOnSystemObjectRule" from="Gendarme.Rules.Design.Linq.dll" />

		<rules
			include="AvoidAlwaysNullFieldRule | AvoidComplexMethodsRule | AvoidLackOfCohesionOfMethodsRule"
			from="Gendarme.Rules.Maintainability.dll" />
	</ruleset>
	<ruleset name="blocker">
		<rules include="TypesShouldBeInsideNamespacesRule" from="Gendarme.Rules.Design.dll" />
		<rules include="DoNotDestroyStackTraceRule" from="Gendarme.Rules.Exceptions.dll" />
		<rules include="AvoidAssemblyVersionMismatchRule" from="Gendarme.Rules.BadPractice.dll" />
		<rules include="AvoidUncalledPrivateCodeRule" from="Gendarme.Rules.Performance.dll" />
	</ruleset>
</gendarme>