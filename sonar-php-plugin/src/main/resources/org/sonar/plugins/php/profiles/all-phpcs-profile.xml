<?xml version="1.0" encoding="ISO-8859-1"?>
<profile>
  <name>All PHP CodeSniffer Rules</name>
  <language>php</language>
  <rules>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.EmptyStatement.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.ForLoopShouldBeWhileLoop.CanSimplify</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.JumbledIncrementer.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.UnconditionalIfStatement.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.UnnecessaryFinalModifier.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.UnusedFunctionParameter.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Commenting.Todo.TaskFound</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Files.LineEndings.InvalidEOLChar</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Files.LineLength.MaxExceeded</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.DisallowMultipleStatements.SameLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.MultipleStatementAlignment.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.NoSpaceAfterCast.SpaceFound</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.SpaceAfterCast.NoSpace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.SpaceAfterCast.TooMuchSpace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.CallTimePassByReference.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.FunctionCallArgumentSpacing.SpaceBeforeComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceBeforeEquals</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterEquals</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceSpacing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Metrics.CyclomaticComplexity.MaxExceeded</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Metrics.NestingLevel.MaxExceeded</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.ConstructorName.OldStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.ConstructorName.OldStyleCall</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.DisallowShortOpenTag.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.DisallowShortOpenTag.EchoFound</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.ForbiddenFunctions.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.LowerCaseConstant.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.NoSilencedErrors.Forbidden</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.NoSilencedErrors.Discouraged</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.UpperCaseConstant.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Strings.UnnecessaryStringConcat.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.VersionControl.SubversionProperties.Unexpected</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.VersionControl.SubversionProperties.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.VersionControl.SubversionProperties.NoMatch</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.VersionControl.SubversionProperties.</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.WhiteSpace.DisallowTabIndent.TabsUsed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.WhiteSpace.ScopeIndent.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.WhiteSpace.ScopeIndent.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Channels.ChannelException.WrongExceptionType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Channels.DisallowSelfActions.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Channels.IncludeSystem.NotIncludedCall</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Channels.IncludeSystem.NotIncludedExtends</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Channels.IncludeSystem.NotIncludedCall</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Channels.UnusedSystem.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Commenting.FunctionComment.ApiNotFirst</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Commenting.FunctionComment.ApiSpacing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Commenting.FunctionComment.ApiTagSpacing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Commenting.FunctionComment.TagNotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Commenting.FunctionComment.ApiNotLast</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Commenting.FunctionComment.ApiTagIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.CSS.BrowserSpecificStyles.ForbiddenStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Debug.DebugCode.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Debug.FirebugConsole.ConflictFound</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Objects.AssignThis.NotSelf</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Objects.CreateWidgetTypeCallback.FirstArgNotCallback</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Objects.CreateWidgetTypeCallback.ReturnValue</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Objects.CreateWidgetTypeCallback.FirstArgNotSelf</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Objects.CreateWidgetTypeCallback.NoReturn</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Objects.CreateWidgetTypeCallback.CallbackNotCalled</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Objects.DisallowNewWidget.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.PHP.EvalObjectFactory.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.PHP.GetRequestData.WithVar</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.PHP.ReturnFunctionValue.NotAssigned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>MySource.Strings.JoinStrings.ArrayNotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Classes.ClassDeclaration.MissingBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Classes.ClassDeclaration.OpenBraceNewLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Classes.ClassDeclaration.OpenBraceWrongLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Classes.ClassDeclaration.OpenBraceNotAlone</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Classes.ClassDeclaration.SpaceBeforeBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.WrongStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.SpacingBeforeShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.SpacingAfterShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.SpacingBeforeTags</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.EmptyVersion</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.InvalidVersion</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.WrongStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.SpacingBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.DescriptionSpacing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.SpacingBeforeTags</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.MissingVersion</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.MissingTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.DuplicateTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.TagsNotGrouped</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.WrongTagOrder</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.TagIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidCategory</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyCategory</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidPackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyPackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidSubpackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptySubpackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidAuthors</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyAuthors</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.CopyrightHyphen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidCopyright</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyCopyright</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyCopyright</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyLicense</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyVersion</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidVersion</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.WrongStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingAfterShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeTags</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.EmptyThrows</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.MissingReturn</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.EmptyReturn</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingAfterParams</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeParams</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeParamType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.ParameterNamesNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.ParameterCommentsNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.cod</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.ExtraParamComment</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.MissingParamName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.MissingParamType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.MissingParamComment</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingAfterLongType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingAfterLongName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.MissingParamTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.InlineComment.WrongStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.ControlStructures.MultiLineCondition.CloseBracketNewLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.ControlStructures.MultiLineCondition.Alignment</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.ControlStructures.MultiLineCondition.StartWithBoolean</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.ControlStructures.MultiLineCondition.SpaceBeforeOpenBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.ControlStructures.MultiLineCondition.NoSpaceBeforeOpenBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.BracketsNotRequired</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseIncludeOnce</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseInclude</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseRequireOnce</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseRequire</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Formatting.MultiLineAssignment.EqualSignLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Formatting.MultiLineAssignment.Indent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.SpaceBeforeOpenBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.Indent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.CloseBracketLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionDeclaration.Indent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionDeclaration.cod</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionDeclaration.NoSpaceBeforeOpenBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionDeclaration.CloseBracketLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.ValidDefaultValue.NotAtEnd</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidClassName.StartWithCaptial</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidClassName.Invalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidClassName.Invalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.MethodDoubleUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.PublicUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.NotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionDoubleUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionNoCaptial</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionInvalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionNameInvalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidVariableName.PublicUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ObjectOperatorIndent.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ObjectOperatorIndent.StartOfLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ScopeClosingBrace.Line</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ScopeClosingBrace.BreakIdent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ScopeClosingBrace.Indent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ScopeIndent.</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayBracketSpacing.SpaceBeforeBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayBracketSpacing.SpaceAfterBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.NotLowerCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.SpaceAfterKeyword</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.SpaceInEmptyArray</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.NoSpaceBeforeDoubleArrow</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.SpaceBeforeDoubleArrow</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.NoSpaceAfterDoubleArrow</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.SpaceAfterDoubleArrow</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.NoSpaceAfterComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.SpaceAfterComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.NoKeySpecified</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.KeySpecified</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.MulitLineNotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.ValueNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.FirstIndexNoNewline</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.KeyNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.ValueNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.NoComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.MultipleClasses</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.SpaceBeforeKeyword</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.SpacesBeforeKeyword</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.MissingBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.NewLineBeforeCloseBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.SpaceBeforeCloseBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.EndFileAfterCloseBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.NoNewlineAfterCloseBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.NewlinesAfterCloseBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.CloseBraceSameLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.SpaceAfterKeyword</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.SpaceAfterName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.NoSpaceBeforeName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.SpaceBeforeName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassDeclaration.SpaceBeforeComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ClassFileName.NoMatch</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.DuplicateProperty.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.LowercaseClassKeywords.FoundUppercase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.SelfMemberReference.IncorrectCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.SelfMemberReference.NotUsed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.SelfMemberReference.SpaceBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.SelfMemberReference.SpaceAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ValidClassName.MissingBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Classes.ValidClassName.NotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.SingleLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.NoNewLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.HasEmptyLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.FirstLineIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.NoCaptial</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.LineIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.LastLineIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.HasEmptyLineBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.NoEmptyLineBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.BlockComment.NoEmptyLineAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.SpacingBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.SpacingAfterOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.MissingShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.SpacingBeforeShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.SpacingBetween</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.LongNotCaptial</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.SpacingBeforeTags</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.ShortSingleLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.ShortNotCapital</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.ShortFullStop</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.TagNotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClassComment.SpacingAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClosingDeclarationComment.Abstract</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClosingDeclarationComment.MissingBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.ClosingDeclarationComment.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.DocCommentAlignment.NoSpaceBeforeTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.DocCommentAlignment.SpaceBeforeTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.DocCommentAlignment.SpaceBeforeAsterisk</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.EmptyCatchComment.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.SpacingAfterOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.SpacingAfterComment</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.ContentAfterOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.SpacingBeforeShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.SpacingBetween</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.LongNotCaptial</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.SpacingBeforeTags</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.ShortSingleLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.ShortNotCapital</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.ShortFullStop</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.TagNotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.SpacingAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.MissingTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.DuplicateTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.TagOrder</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.TagIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.MissingPackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.IncorrectPackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.MissingSubpackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.IncorrectSubpackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.MissingAuthor</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.IncorrectAuthor</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.MissingCopyright</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.IncorrectCopyright</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.MissingLicense</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.MissingLinceseURL</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.IncorrectLicenseURL</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.MissingLinceseName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FileComment.IncorrectLicenseName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.WrongStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ContentAfterOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.MissingShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SpacingBeforeShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SpacingBetween</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.LongNotCapital</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SpacingBeforeTags</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ShortSingleLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ShortNotCapital</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ShortFullStop</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SpacingAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SeeOrder</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.EmptySee</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SeeIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.DuplicateReturn</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ReturnOrder</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.MissingReturnType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.InvalidReturn</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.InvalidReturnVoid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.InvalidNoReturn</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.InvalidReturnNotVoid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ReturnIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.MissingReturn</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ReturnNotRequired</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.InvalidThrows</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.EmptyThrows</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ThrowsNotCapital</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ThrowsNoFullStop</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ThrowsOrder</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SpacingAfterParams</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SpacingBeforeParams</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SpacingBeforeParamType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ParameterNamesNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ParameterCommentsNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.IncorrectParamVarName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.TypeHintMissing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.IncorrectTypeHint</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.InvalidTypeHint</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.cod</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ExtraParamComment</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.MissingParamName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.MissingParamType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.MissingParamComment</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ParamCommentNotCapital</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.ParamCommentFullStop</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SpacingAfterLongType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.SpacingAfterLongName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.MissingParamTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionComment.TagNotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionCommentThrowTag.FailedParse</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionCommentThrowTag.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionCommentThrowTag.WrongNumber</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.FunctionCommentThrowTag.WrongType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.InlineComment.DocBlock</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.InlineComment.WrongStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.InlineComment.NoSpaceBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.InlineComment.SpacingBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.InlineComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.InlineComment.NotCapital</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.InlineComment.InvalidEndChar</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.InlineComment.SpacingAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.LongConditionClosingComment.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.LongConditionClosingComment.SpacingBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.LongConditionClosingComment.Invalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.PostStatementComment.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.ContentAfterOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.MissingShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.SpacingBeforeShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.SpacingBetween</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.LongNotCapital</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.ShortSingleLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.ShortNotCapital</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.ShortFullStop</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.SpacingBeforeTags</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.TagNotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.SpacingAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.DuplicateVar</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.VarOrder</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.MissingVarType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.IncorrectVarType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.VarIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.MissingVar</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.EmptySees</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Commenting.VariableComment.SeesIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ElseIfDeclaration.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeArrow</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeArrow</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterArrow</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterArrow</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeAs</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterAs</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterAs</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForLoopDeclaration.NoOpenBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeFirst</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterFirst</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterFirst</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeSecond</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterSecond</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterSecond</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.InlineIfDeclaration.NotSingleLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.InlineIfDeclaration.NoBrackets</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeThen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterThen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeElse</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterElse</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.LowercaseDeclaration.FoundUppercase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.CaseIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.SpaceBeforeColon</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.BreakIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.EmptyCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeBreak</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterBreak</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.DefaultNotLower</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeDefaultColon</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.DefaultIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.BreakIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefaultBreak</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.DefaultNoBreak</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.EmptyDefault</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefault</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.MissingDefault</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.CloseBraceAlign</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.ControlStructures.SwitchDeclaration.MissingCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingAfterClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingBeforeClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ClassDefinitionNameSpacing.BlankLinesFound</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ClassDefinitionOpeningBraceSpace.NoneBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ClassDefinitionOpeningBraceSpace.Before</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ClassDefinitionOpeningBraceSpace.After</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ColonSpacing.Before</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ColonSpacing.NoneAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ColonSpacing.After</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ColonSpacing.AfterNewline</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ColourDefinition.NotUpper</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.ColourDefinition.Shorthand</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.DisallowMultipleStyleDefinitions.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.DuplicateClassDefinition.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.DuplicateStyleDefinition.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.EmptyClassDefinition.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.EmptyStyleDefinition.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.Indentation.BlankLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.Indentation.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.LowercaseStyleDefinition.FoundUpper</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.MissingColon.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.Opacity.Invalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.Opacity.SpacingAfterPoint</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.Opacity.PointNotRequired</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.Opacity.StartWithPoint</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.Opacity.Invalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.SemicolonSpacing.NotAtEnd</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.CSS.SemicolonSpacing.SpaceFound</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Files.FileExtension.ClassFound</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Files.FileExtension.NoClass</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Formatting.OperatorBracket.SpacingAfterMinus</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Formatting.OperatorBracket.MissingBrackets</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Formatting.OperatorBracket.MissingBrackets</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Formatting.OperatorBracket.MissingBrackets</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Formatting.OperatorBracket.MissingBrackets</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeEquals</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceAfterDefault</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSapceBeforeHint</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeHint</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeArg</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSpaceBeforeArg</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpenHint</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBetween</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.FunctionDuplicateArgument.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.GlobalFunction.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.LowercaseFunctionKeywords.FoundUppercase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.MultiLineFunctionDeclaration.FirstParamSpacing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.MultiLineFunctionDeclaration.OneParamPerLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.NamingConventions.ConstantCase.</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.NamingConventions.ValidFunctionName.DoubleUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.NamingConventions.ValidFunctionName.NotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.NamingConventions.ValidVariableName.NotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.NamingConventions.ValidVariableName.NotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.NamingConventions.ValidVariableName.PublicHasUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.NamingConventions.ValidVariableName.MemberNotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.NamingConventions.ValidVariableName.StringNotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Objects.DisallowObjectStringIndex.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Objects.ObjectInstantiation.NotAssigned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Objects.ObjectMemberComma.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Operators.ComparisonOperatorUsage.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Operators.IncrementDecrementUsage.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Operators.IncrementDecrementUsage.NoBrackets</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Operators.IncrementDecrementUsage.</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Operators.ValidLogicalOperators.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.CommentedOutCode.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.DisallowComparisonAssignment.AssignedComparison</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.DisallowComparisonAssignment.AssignedBool</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.DisallowMultipleAssignments.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.DisallowSizeFunctionsInLoops.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.SpacingBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.ContentAfterOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.Indent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.SpacingAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.ContentAfterEnd</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.SpacingAfterOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.NoSemicolon</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.MultipleStatements</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.NoSpaceBeforeClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.NoSpaceBeforeClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.EmbeddedPhp.SpacingBeforeClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.Eval.Discouraged</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.GlobalKeyword.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.Heredoc.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.InnerFunctions.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.LowercasePHPFunctions.KeywordUppercase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.PHP.LowercasePHPFunctions.CallUppercase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Scope.MemberVarScope.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Scope.MethodScope.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Scope.StaticThisUsage.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Strings.DoubleQuoteUsage.ContainsVar</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Strings.DoubleQuoteUsage.NotRequired</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.Strings.EchoedStrings.HasBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.CastSpacing.ContainsWhiteSpace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ControlStructureSpacing.SpaceBeforeCloseBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeOpen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ControlStructureSpacing.LineAfterClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBetween</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.FunctionClosingBraceSpace.ContentBeforeClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeNestedClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfterNested</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.ContentBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.FunctionSpacing.After</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.FunctionSpacing.Before</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.LanguageConstructSpacing.IncorrectSingle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.LanguageConstructSpacing.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.MemberVarSpacing.After</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ObjectOperatorSpacing.Before</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ObjectOperatorSpacing.After</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceBeforeAmp</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.OperatorSpacing.SpacingBeforeAmp</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfterAmp</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.OperatorSpacing.SpacingAfterAmp</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.OperatorSpacing.SpacingBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.OperatorSpacing.SpacingAfter</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.PropertyLabelSpacing.Before</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.PropertyLabelSpacing.After</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ScopeClosingBrace.Indent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.ScopeKeywordSpacing.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.SemicolonSpacing.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Zend.Files.ClosingTag.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Zend.NamingConventions.ValidVariableName.NotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Zend.NamingConventions.ValidVariableName.NotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Zend.NamingConventions.ValidVariableName.PublicHasUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Zend.NamingConventions.ValidVariableName.StringVarNotCamelCaps</key>
    </rule>
  </rules>
</profile>
