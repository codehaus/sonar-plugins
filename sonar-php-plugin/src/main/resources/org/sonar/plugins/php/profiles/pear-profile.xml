<?xml version="1.0" encoding="ISO-8859-1"?>
<profile>
  <name>PEAR profile</name>
  <language>php</language>
  <rules>

    <!-- PHPMD rules -->
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/CyclomaticComplexity]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/NPathComplexity]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveMethodLength]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveClassLength]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveParameterList]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessivePublicCount]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/TooManyFields]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/TooManyMethods]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveClassComplexity]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/ExitExpression]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/EvalExpression]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/GotoStatement]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/NumberOfChildren]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/DepthOfInheritance]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/CouplingBetweenObjects]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedPrivateField]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedLocalVariable]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedPrivateMethod]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedPrivateMethod]]></key>
    </rule>

    <!-- PHP CodeSniffer rules -->
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Classes.ClassDeclaration.MissingBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Classes.ClassDeclaration.OpenBraceNewLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Classes.ClassDeclaration.OpenBraceWrongLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Classes.ClassDeclaration.OpenBraceNotAlone</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Classes.ClassDeclaration.SpaceBeforeBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.WrongStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.SpacingBeforeShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.SpacingAfterShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.SpacingBeforeTags</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.EmptyVersion</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.ClassComment.InvalidVersion</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.WrongStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.SpacingBefore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.DescriptionSpacing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.SpacingBeforeTags</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.MissingVersion</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.MissingTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.DuplicateTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.TagsNotGrouped</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.WrongTagOrder</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.TagIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidCategory</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyCategory</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidPackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyPackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidSubpackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptySubpackage</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidAuthors</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyAuthors</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.CopyrightHyphen</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidCopyright</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyCopyright</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyCopyright</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyLicense</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.EmptyVersion</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FileComment.InvalidVersion</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.WrongStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.Empty</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingAfterShort</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeTags</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.EmptyThrows</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.MissingReturn</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.EmptyReturn</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingAfterParams</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeParams</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingBeforeParamType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.ParameterNamesNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.ParameterCommentsNotAligned</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.cod</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.ExtraParamComment</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.MissingParamName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.MissingParamType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.MissingParamComment</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingAfterLongType</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.SpacingAfterLongName</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.FunctionComment.MissingParamTag</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Commenting.InlineComment.WrongStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.ControlStructures.MultiLineCondition.CloseBracketNewLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.ControlStructures.MultiLineCondition.Alignment</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.ControlStructures.MultiLineCondition.StartWithBoolean</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.ControlStructures.MultiLineCondition.SpaceBeforeOpenBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.ControlStructures.MultiLineCondition.NoSpaceBeforeOpenBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.BracketsNotRequired</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseIncludeOnce</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseInclude</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseRequireOnce</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Files.IncludingFile.UseRequire</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Formatting.MultiLineAssignment.EqualSignLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Formatting.MultiLineAssignment.Indent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.SpaceBeforeOpenBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.Indent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionCallSignature.CloseBracketLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionDeclaration.Indent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionDeclaration.cod</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionDeclaration.NoSpaceBeforeOpenBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.FunctionDeclaration.CloseBracketLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.Functions.ValidDefaultValue.NotAtEnd</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidClassName.StartWithCaptial</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidClassName.Invalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidClassName.Invalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.MethodDoubleUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.PublicUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.NotCamelCaps</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionDoubleUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionNoCaptial</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionInvalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidFunctionName.FunctionNameInvalid</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.NamingConventions.ValidVariableName.PublicUnderscore</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ObjectOperatorIndent.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ObjectOperatorIndent.StartOfLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ScopeClosingBrace.Line</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ScopeClosingBrace.BreakIdent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>PEAR.WhiteSpace.ScopeClosingBrace.Indent</key>
    </rule>
    
  </rules>
</profile>
