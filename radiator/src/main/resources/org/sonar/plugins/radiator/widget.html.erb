<script type="text/javascript" src="<%=ApplicationController.root_context-%>/static/radiator/jit-minimum.compiled.js"></script>
<!--[if IE]><script type="text/javascript" src="<%=ApplicationController.root_context-%>/static/radiator/excanvas.compiled.js"></script><![endif]-->

<style type="text/css">
#radiatorroot<%= widget.id -%> {
    position: relative;
    width: 100%;
    margin: auto;
    overflow: hidden;
}
#radiatorroot<%= widget.id -%> div {
    position: absolute;
    overflow: hidden;
    padding: 0px;
    align: middle;
}
#radiatorroot<%= widget.id -%> .leaf {
    padding: 4px 0 0 4px;
    font-weight: bold;
    color: white;
}
#radiatorroot<%= widget.id -%> a {
    text-decoration:none;
    color: white;
}
#radiator-breadcrumb<%=widget.id-%> {
    height: 1.2em;
}
div.gradient_parent<%=widget.id-%> {
    position: relative;
    height: 16px;
    width: 150px;
    overflow: hidden;
}
div.gradient<%=widget.id-%> {
    position: absolute;
    top: 0px;
    left: 16px;
    height: 18px;
    width: 100px;
    overflow: hidden;
    z-index:1;
}
div.gradient_threshold<%=widget.id-%> {
    position: absolute;
    height: 16px;
    width: 25px;
    overflow: hidden;
    font-weight: bold;
    z-index:2;
}
div#gradient_max<%=widget.id-%> {
    top: 0px;
    left: 0px;
    text-align: right;
}
div#gradient_min<%=widget.id-%> {
    top: 0px;
    left: 120px;
    text-align: left;
}
</style>

<form name="tm_controls" >
    <table>
        <tr>
            <td>
                <span class="note"><%= message('radiator.metricSize') -%>:&nbsp;</span>
            </td>
            <td>
                <%= select_tag 'size_metric', options_from_collection_for_select(
                  Sonar::TreemapBuilder.size_metrics, :key, :short_name, widget_properties["defaultSize"].name),
                  :id => 'select_size_metric' + widget.id.to_s, :class => 'small',:onchange => "loseFocusOnSelect" + widget.id.to_s + "();load_treemap" + widget.id.to_s + "(current_resource_key" + widget.id.to_s + ");" %>
            </td>
            <td width="15px">&nbsp;</td>
            <td align="left"><%= image_tag('loading.gif', {:id => "tm_loading" + widget.id.to_s}) -%></td> 
        </tr>
        <tr>
            <td>
                <span class="note"><%= message('radiator.metricColor') -%>:&nbsp;</span>
            </td>
            <td>
                <%= select_tag 'color_metric', options_from_collection_for_select(
                Sonar::TreemapBuilder.color_metrics, :key, :short_name, widget_properties["defaultColor"].name),
                :id => 'select_color_metric' + widget.id.to_s, :class => 'small', :onchange => "loseFocusOnSelect" + widget.id.to_s + "();load_treemap" + widget.id.to_s + "(current_resource_key" + widget.id.to_s + ");load_gradient" + widget.id.to_s + "(current_resource_key" + widget.id.to_s + ");" %>
            </td>
        </tr>
        <tr> 
            <td>
                <span class="note"><%= message('radiator.scale') -%>:&nbsp;</span>
            </td>
            <td>
                <div class="gradient_parent<%=widget.id-%>">
                    <div id="gradient_max<%=widget.id-%>" class="gradient_threshold<%=widget.id-%>"></div>
                    <div id="gradient<%=widget.id-%>" class="gradient<%=widget.id-%>"></div>
                    <div id="gradient_min<%=widget.id-%>" class="gradient_threshold<%=widget.id-%>"></div>
                </div>
            </td>
	</tr>
    </table>
</form>

<div id="radiatorroot<%= widget.id -%>" class="radiator"> </div>

<div id="nodata<%= widget.id -%>" style="display:none; vertical-align:top">
    <p><%= message('radiator.noData') -%></p>
</div>

<div class="notes" style="margin: 5px 0 0 0">
    <div style="float: right"><span><%= message('radiator.navigation') -%></span></div>
    <div id="radiator-breadcrumb<%=widget.id-%>"></div>
</div>

<div class="small right">
  <%= image_tag 'links/external.png' %>
  <a href="<%= ApplicationController.root_context -%>/plugins/resource/<%= @project.id -%>?page=org.sonar.plugins.radiator.RadiatorPage&layout=false" target="radiator"><%= message('radiator.newWindow') -%></a>
</div>


<script language="javascript">

var widgetWidth=$('block_<%= widget.id -%>').getWidth()-2*12;
$('radiatorroot<%= widget.id -%>').setStyle({'width': widgetWidth + 'px', 'height': widgetWidth + 'px'});

var treemap<%=widget.id-%> = null;
var all_projects_radiator<%=widget.id-%> = <%= @project.nil? ? 'true' : 'false' %>;
var current_resource_key<%=widget.id-%> = null;
var parent_resource_key<%=widget.id-%> = <%= @project.nil? ? 'null' : "'#{@project.key}'" %>;
var size_metric<%=widget.id-%>, color_metric<%=widget.id-%> = null;
var breadcrumbs<%=widget.id-%> = new Array();

function dashboard_url<%=widget.id-%>(resource_key) {
    return '<%=ApplicationController.root_context-%>/project/index/' + resource_key;
}

function open_resource_viewer<%=widget.id-%>(resource_key) {
    href='<%=ApplicationController.root_context-%>/resource/index/' + resource_key;
    window.open(href,'resource','height=800,width=900,scrollbars=1,resizable=1');
}

function display_breadcrumbs<%=widget.id-%>() {
    var output = "&nbsp;&#187;&nbsp;"
    breadcrumbs<%=widget.id-%>.each(function(bc) { output += bc + "&nbsp;&#187;&nbsp;"});
    $('radiator-breadcrumb<%=widget.id-%>').innerHTML = output;
}

function display_thresholds<%=widget.id-%>(json) {
    $('gradient_min<%=widget.id-%>').innerHTML = json['min'];
    $('gradient_max<%=widget.id-%>').innerHTML = json['max'];
    $('gradient_min<%=widget.id-%>').style.color = json['min_color'];
    $('gradient_max<%=widget.id-%>').style.color = json['max_color'];
}

function instanciate_treemap<%=widget.id-%>(json) {
    return new $jit.TM.Squarified({
         injectInto: 'radiatorroot<%= widget.id -%>',
         titleHeight: 0,
         offset: 4,
         Events: {
            enable: true,
            onClick: function(node) {
                if (node.data.is_file) {
                    open_resource_viewer<%=widget.id-%>(node.data.project_id);
                } else {
                    breadcrumbs<%=widget.id-%>.push(node.name);
                    load_treemap<%=widget.id-%>(node.data.project_id);                      
                }
            },
            onRightClick: function(node) {
                load = (all_projects_radiator<%=widget.id-%> && parent_resource_key<%=widget.id-%> == null) || parent_resource_key<%=widget.id-%> != null;
                if (load) {
                    breadcrumbs<%=widget.id-%>.pop();
                    load_treemap<%=widget.id-%>(parent_resource_key<%=widget.id-%>);
                }
            }
         },
         Color: {
             enable: true
         },
         Tips: {
           enable: true,
           offsetX: 20,
           offsetY: 20,
           onShow: function(tip, node, isLeaf, domElement) {
               tip.innerHTML = "<div class=\"title\">" + node.name + "</div><div class=\"content\">" + this.makeHTMLFromData(node.data) + "</div>";
           },
           makeHTMLFromData: function(data){
               var html = '<table><tr><td align="left">' + size_metric<%=widget.id-%> + '</td><td align="right"><b>' + data.size_frmt +
               '</b></td></tr><tr><td align="left">' + color_metric<%=widget.id-%> + '</td><td align="right"><b>' + data.color_frmt + '</b></td></tr></table>';
               return html;
           }
         },
        onCreateLabel: function(domElement, node) {
            if (!node.data.is_file) {
                domElement.innerHTML = "<div class='leaf'><a href='"+ dashboard_url<%=widget.id-%>(node.data.project_id) + "'>" + node.name + "</a></div>";
            } else {
                domElement.innerHTML = "<div class='leaf' style='cursor:pointer'>" + node.name + "</div>";
            }
        }  
    });
}   

function load_treemap<%=widget.id-%>(resource_key) {
    if (treemap<%=widget.id-%> != null) {
        treemap<%=widget.id-%> = null;
    }
    $('tm_loading<%= widget.id -%>').show();
    url = '<%=ApplicationController.root_context-%>/api/plugins/RadiatorWebService';
    current_resource_key<%=widget.id-%> = resource_key;
    url += resource_key != null ? '?resource=' + resource_key + '&' : '?';
    new Ajax.Request(url + 'size=' + $F('select_size_metric<%=widget.id-%>') + '&color=' + $F('select_color_metric<%=widget.id-%>') + '&callback=treemap_ajax_cb<%=widget.id-%>',
      {
        method: 'get',
        requestHeaders: {Accept: 'application/json'},
        onSuccess: function(transport) {
          eval(transport.responseText);
        },
        onFailure: function(response){ error(response.responseText) }
      });
}

function treemap_ajax_cb<%=widget.id-%>(json) {
    $('radiatorroot<%= widget.id -%>').innerHTML = '';
    $('tm_loading<%= widget.id -%>').hide();
    if (current_resource_key<%=widget.id-%> == null && json.children.length == 0) {
        $('radiatorroot<%= widget.id -%>').hide();
        try { $('_tooltip').hide(); } catch (ex) {} // Workaround for IE
        $('nodata<%= widget.id -%>').show();
        $('select_color_metric<%= widget.id -%>').disabled = true;
    } else {
        $('radiatorroot<%= widget.id -%>').show();
        $('nodata<%= widget.id -%>').hide();
        $('select_color_metric<%= widget.id -%>').disabled = false;
        render_treemap<%=widget.id-%>(json);
    }
}

function render_treemap<%=widget.id-%>(json) {
    treemap<%=widget.id-%> = instanciate_treemap<%=widget.id-%>(json['color_metric_direction']);
    parent_resource_key<%=widget.id-%> = json['parent'];
    size_metric<%=widget.id-%> = json['size_metric'];
    color_metric<%=widget.id-%> = json['color_metric'];
    display_breadcrumbs<%=widget.id-%>();
    display_thresholds<%=widget.id-%>(json);
    treemap<%=widget.id-%>.loadJSON(json);
    treemap<%=widget.id-%>.refresh();
}

function load_gradient<%=widget.id-%>(resource_key) {	
    url = '<%=ApplicationController.root_context-%>/api/plugins/RadiatorGradientWebService';
    url += resource_key != null ? '?resource=' + resource_key + '&' : '?';
    new Ajax.Request(url + '&color=' + $F('select_color_metric<%=widget.id-%>') + '&callback=gradient_ajax_cb<%=widget.id-%>',
      {
        method: 'get',
        requestHeaders: {Accept: 'application/json'},
        onSuccess: function(transport) {
          eval(transport.responseText);
        },
        onFailure: function(response){ error(response.responseText) }
      });
}

function gradient_ajax_cb<%=widget.id-%>(json) {
    $('gradient<%=widget.id-%>').innerHTML = "";
    render_gradient<%=widget.id-%>(json);
}

function render_gradient<%=widget.id-%>(json) {
    var barChart = new $jit.BarChart({
        injectInto: 'gradient<%=widget.id-%>',
        animate: false,
        showAggregates: false,
        showLabels: false
    });
    barChart.loadJSON(json);
}

function loseFocusOnSelect<%=widget.id-%>() {
    try {
        $('radiatorroot<%=widget.id-%>').focus();        
    } catch (ex) {
    }
}

Event.observe(window, "load", new function() { load_treemap<%=widget.id-%>(<%= @project.nil? ? 'null' : "'#{@project.key}'" %>); load_gradient<%=widget.id-%>(<%= @project.nil? ? 'null' : "'#{@project.key}'" %>); } );

</script>