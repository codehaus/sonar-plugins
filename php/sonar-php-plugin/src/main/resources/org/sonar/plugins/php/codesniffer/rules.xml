<?xml version="1.0" encoding="ISO-8859-1"?>
<rules>
  <rule key="Generic.Classes.DuplicateClassName.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DuplicateClassNameFound</name>
    <configKey>rulesets/DuplicateClassName</configKey>
    <description><![CDATA[Duplicate %s name "%s" found; first defined in %s on line %s]]></description>
  </rule>
  <rule key="Generic.CodeAnalysis.EmptyStatement.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmptyStatementNotAllowed</name>
    <configKey>rulesets/EmptyStatement</configKey>
    <description><![CDATA[Empty %s statement detected]]></description>
  </rule>
  <rule key="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop.CanSimplify" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopShouldBeWhileLoopCanSimplify</name>
    <configKey>rulesets/ForLoopShouldBeWhileLoop</configKey>
    <description><![CDATA[This FOR loop can be simplified to a WHILE loop]]></description>
  </rule>
  <rule key="Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopWithTestFunctionCallNotAllowed</name>
    <configKey>rulesets/ForLoopWithTestFunctionCall</configKey>
    <description><![CDATA[Avoid function calls in a FOR loop test part]]></description>
  </rule>
  <rule key="Generic.CodeAnalysis.JumbledIncrementer.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>JumbledIncrementerFound</name>
    <configKey>rulesets/JumbledIncrementer</configKey>
    <description><![CDATA[Loop incrementor (%s) jumbling with inner loop]]></description>
  </rule>
  <rule key="Generic.CodeAnalysis.UnconditionalIfStatement.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>UnconditionalIfStatementFound</name>
    <configKey>rulesets/UnconditionalIfStatement</configKey>
    <description><![CDATA[Avoid IF statements that are always true or false]]></description>
  </rule>
  <rule key="Generic.CodeAnalysis.UnnecessaryFinalModifier.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>UnnecessaryFinalModifierFound</name>
    <configKey>rulesets/UnnecessaryFinalModifier</configKey>
    <description><![CDATA[Unnecessary FINAL modifier in FINAL class]]></description>
  </rule>
  <rule key="Generic.CodeAnalysis.UnusedFunctionParameter.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>UnusedFunctionParameterFound</name>
    <configKey>rulesets/UnusedFunctionParameter</configKey>
    <description><![CDATA[The method parameter %s is never used]]></description>
  </rule>
  <rule key="Generic.Commenting.Todo.TaskFound" priority="MAJOR">
    <category name="Maintainability" />
    <name>Todotyp</name>
    <configKey>rulesets/Todo</configKey>
    <description><![CDATA[Comment refers to a TODO task]]></description>
  </rule>
  <rule key="Generic.Files.LineEndings.InvalidEOLChar" priority="MAJOR">
    <category name="Maintainability" />
    <name>LineEndingsInvalidEOLChar</name>
    <configKey>rulesets/LineEndings</configKey>
    <description><![CDATA[End of line character is invalid; expected "%s" but found "%s]]></description>
    <param>
      <key>eolChar</key>
      <description>End of line character</description>
      <defaultValue><![CDATA[\n]]></defaultValue>
    </param>
  </rule>
  <rule key="Generic.Files.LineLength.TooLong" priority="MAJOR">
    <category name="Maintainability" />
    <name>LineLengthTooLong</name>
    <configKey>rulesets/LineLengthTooLong</configKey>
    <description><![CDATA[Line is too long]]></description>
  </rule>
  <rule key="Generic.Files.LineLength.MaxExceeded" priority="MAJOR">
    <category name="Maintainability" />
    <name>LineLengthMaxExceeded</name>
    <configKey>rulesets/LineLength</configKey>
    <description><![CDATA[Line exceeds maximum limit of %s characters; contains %s characters]]></description>
  </rule>
  <rule key="Generic.Formatting.DisallowMultipleStatements.SameLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowMultipleStatementsSameLine</name>
    <configKey>rulesets/DisallowMultipleStatements</configKey>
    <description><![CDATA[Each PHP statement must be on a line by itself]]></description>
  </rule>
  <rule key="Generic.Formatting.MultipleStatementAlignment.Incorrect" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultipleStatementAlignmenttyp</name>
    <configKey>rulesets/MultipleStatementAlignment</configKey>
    <description><![CDATA[Equals sign not aligned correctly; expected %s but found %s]]></description>
  </rule>
  <rule key="Generic.Formatting.NoSpaceAfterCast.SpaceFound" priority="MAJOR">
    <category name="Maintainability" />
    <name>NoSpaceAfterCastSpaceFound</name>
    <configKey>rulesets/NoSpaceAfterCast</configKey>
    <description><![CDATA[A cast statement must not be followed by a space]]></description>
  </rule>
  <rule key="Generic.Formatting.SpaceAfterCast.NoSpace" priority="MAJOR">
    <category name="Maintainability" />
    <name>SpaceAfterCastNoSpace</name>
    <configKey>rulesets/SpaceAfterCast</configKey>
    <description><![CDATA[A cast statement must be followed by a single space]]></description>
  </rule>
  <rule key="Generic.Formatting.SpaceAfterCast.TooMuchSpace" priority="MAJOR">
    <category name="Maintainability" />
    <name>SpaceAfterCastTooMuchSpace</name>
    <configKey>rulesets/SpaceAfterCast</configKey>
    <description><![CDATA[A cast statement must be followed by a single space]]></description>
  </rule>
  <rule key="Generic.Functions.CallTimePassByReference.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>CallTimePassByReferenceNotAllowed</name>
    <configKey>rulesets/CallTimePassByReference</configKey>
    <description><![CDATA[Call-time pass-by-reference calls are prohibited]]></description>
  </rule>
  <rule key="Generic.Functions.FunctionCallArgumentSpacing.SpaceBeforeComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallArgumentSpacingSpaceBeforeComma</name>
    <configKey>rulesets/FunctionCallArgumentSpacing</configKey>
    <description><![CDATA[Space found before comma in function call]]></description>
  </rule>
  <rule key="Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallArgumentSpacingNoSpaceAfterComma</name>
    <configKey>rulesets/FunctionCallArgumentSpacing</configKey>
    <description><![CDATA[No space found after comma in function call]]></description>
  </rule>
  <rule key="Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallArgumentSpacingTooMuchSpaceAfterComma</name>
    <configKey>rulesets/FunctionCallArgumentSpacing</configKey>
    <description><![CDATA[Expected 1 space after comma in function call; %s found]]></description>
  </rule>
  <rule key="Generic.Functions.FunctionCallArgumentSpacing.NoSpaceBeforeEquals" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallArgumentSpacingNoSpaceBeforeEquals</name>
    <configKey>rulesets/FunctionCallArgumentSpacing</configKey>
    <description><![CDATA[Expected 1 space before = sign of default value]]></description>
  </rule>
  <rule key="Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterEquals" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallArgumentSpacingNoSpaceAfterEquals</name>
    <configKey>rulesets/FunctionCallArgumentSpacing</configKey>
    <description><![CDATA[Expected 1 space after = sign of default value]]></description>
  </rule>
  <rule key="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpeningFunctionBraceBsdAllmanBraceOnSameLine</name>
    <configKey>rulesets/OpeningFunctionBraceBsdAllman</configKey>
    <description><![CDATA[Opening brace should be on a new line]]></description>
  </rule>
  <rule key="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceSpacing" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpeningFunctionBraceBsdAllmanBraceSpacing</name>
    <configKey>rulesets/OpeningFunctionBraceBsdAllman</configKey>
    <description><![CDATA[Opening brace should be on the line after the declaration; found %s blank line(s)]]></description>
  </rule>
  <rule key="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpeningFunctionBraceBsdAllmanBraceIndent</name>
    <configKey>rulesets/OpeningFunctionBraceBsdAllman</configKey>
    <description><![CDATA[Opening brace indented incorrectly; expected %s spaces]]></description>
  </rule>
  <rule key="Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpeningFunctionBraceKernighanRitchieBraceOnNewLine</name>
    <configKey>rulesets/OpeningFunctionBraceKernighanRitchie</configKey>
    <description><![CDATA[Opening brace should be on the same line as the declaration]]></description>
  </rule>
  <rule key="Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpeningFunctionBraceKernighanRitchieSpaceBeforeBrace</name>
    <configKey>rulesets/OpeningFunctionBraceKernighanRitchie</configKey>
    <description><![CDATA[Expected 1 space between the closing parenthesis and the opening brace; found %s]]></description>
  </rule>
  <rule key="Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpeningFunctionBraceKernighanRitchieSpaceBeforeBrace</name>
    <configKey>rulesets/OpeningFunctionBraceKernighanRitchie</configKey>
    <description><![CDATA[Expected a single space character between closing parenthesis and opening brace; found %s]]></description>
  </rule>
  <rule key="Generic.Metrics.CyclomaticComplexity.MaxExceeded" priority="MAJOR">
    <category name="Maintainability" />
    <name>CyclomaticComplexityMaxExceeded</name>
    <configKey>rulesets/CyclomaticComplexity</configKey>
    <description><![CDATA[Function\'s cyclomatic complexity (%s) exceeds allowed maximum of %s]]></description>
  </rule>
  <rule key="Generic.Metrics.NestingLevel.MaxExceeded" priority="MAJOR">
    <category name="Maintainability" />
    <name>NestingLevelMaxExceeded</name>
    <configKey>rulesets/NestingLevel</configKey>
    <description><![CDATA[Function\'s nesting level (%s) exceeds allowed maximum of %s]]></description>
  </rule>
  <rule key="Generic.NamingConventions.ConstructorName.OldStyle" priority="MAJOR">
    <category name="Maintainability" />
    <name>ConstructorNameOldStyle</name>
    <configKey>rulesets/ConstructorName</configKey>
    <description><![CDATA[PHP4 style constructors are not allowed; use "__construct()" instead]]></description>
  </rule>
  <rule key="Generic.NamingConventions.ConstructorName.OldStyleCall" priority="MAJOR">
    <category name="Maintainability" />
    <name>ConstructorNameOldStyleCall</name>
    <configKey>rulesets/ConstructorName</configKey>
    <description><![CDATA[PHP4 style calls to parent constructors are not allowed; use "parent::__construct()" instead]]></description>
  </rule>
  <rule key="Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase" priority="MAJOR">
    <category name="Maintainability" />
    <name>UpperCaseConstantNameClassConstantNotUpperCase</name>
    <configKey>rulesets/UpperCaseConstantName</configKey>
    <description><![CDATA[Class constants must be uppercase; expected %s but found %s]]></description>
  </rule>
  <rule key="Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase" priority="MAJOR">
    <category name="Maintainability" />
    <name>UpperCaseConstantNameConstantNotUpperCase</name>
    <configKey>rulesets/UpperCaseConstantName</configKey>
    <description><![CDATA[Constants must be uppercase; expected %s but found %s]]></description>
  </rule>
  <rule key="Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase" priority="MAJOR">
    <category name="Maintainability" />
    <name>UpperCaseConstantNameConstantNotUpperCase</name>
    <configKey>rulesets/UpperCaseConstantName</configKey>
    <description><![CDATA[Constants must be uppercase; expected %s but found %s]]></description>
  </rule>
  <rule key="Generic.PHP.DisallowShortOpenTag.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowShortOpenTagFound</name>
    <configKey>rulesets/DisallowShortOpenTag</configKey>
    <description><![CDATA[Short PHP opening tag used; expected &ldquo;&lt;?php&ldquo; but found &ldquo;%s]]></description>
  </rule>
  <rule key="Generic.PHP.DisallowShortOpenTag.EchoFound" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowShortOpenTagEchoFound</name>
    <configKey>rulesets/DisallowShortOpenTag</configKey>
    <description><![CDATA[Short PHP opening tag used with echo; expected &ldquo;&lt;?php echo %s ...&ldquo; but found &ldquo;%s %s ...]]></description>
  </rule>
  <rule key="Generic.PHP.ForbiddenFunctions.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForbiddenFunctionstyp</name>
    <configKey>rulesets/ForbiddenFunctions</configKey>
    <description><![CDATA[The use of function %s() is ]]></description>
  </rule>
  <rule key="Generic.PHP.LowerCaseConstant.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>LowerCaseConstantFound</name>
    <configKey>rulesets/LowerCaseConstant</configKey>
    <description><![CDATA[TRUE]]></description>
  </rule>
  <rule key="Generic.PHP.NoSilencedErrors.Forbidden" priority="MAJOR">
    <category name="Maintainability" />
    <name>NoSilencedErrorsForbidden</name>
    <configKey>rulesets/NoSilencedErrors</configKey>
    <description><![CDATA[Silencing errors is forbidden]]></description>
  </rule>
  <rule key="Generic.PHP.NoSilencedErrors.Discouraged" priority="MAJOR">
    <category name="Maintainability" />
    <name>NoSilencedErrorsDiscouraged</name>
    <configKey>rulesets/NoSilencedErrors</configKey>
    <description><![CDATA[Silencing errors is discouraged]]></description>
  </rule>
  <rule key="Generic.PHP.UpperCaseConstant.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>UpperCaseConstantFound</name>
    <configKey>rulesets/UpperCaseConstant</configKey>
    <description><![CDATA[TRUE]]></description>
  </rule>
  <rule key="Generic.Strings.UnnecessaryStringConcat.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>UnnecessaryStringConcatFound</name>
    <configKey>rulesets/UnnecessaryStringConcat</configKey>
    <description><![CDATA[String concat is not required here; use a single string instead]]></description>
  </rule>
  <rule key="Generic.VersionControl.SubversionProperties.Unexpected" priority="MAJOR">
    <category name="Maintainability" />
    <name>SubversionPropertiesUnexpected</name>
    <configKey>rulesets/SubversionProperties</configKey>
    <description><![CDATA[Unexpected Subversion property "%s" = "%s]]></description>
  </rule>
  <rule key="Generic.VersionControl.SubversionProperties.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>SubversionPropertiesMissing</name>
    <configKey>rulesets/SubversionProperties</configKey>
    <description><![CDATA[Missing Subversion property "%s" = "%s]]></description>
  </rule>
  <rule key="Generic.VersionControl.SubversionProperties.NoMatch" priority="MAJOR">
    <category name="Maintainability" />
    <name>SubversionPropertiesNoMatch</name>
    <configKey>rulesets/SubversionProperties</configKey>
    <description><![CDATA[Subversion property "%s" = "%s" does not match "%s]]></description>
  </rule>
  <rule key="Generic.VersionControl.SubversionProperties." priority="MAJOR">
    <category name="Maintainability" />
    <name>SubversionProperties</name>
    <configKey>rulesets/SubversionProperties</configKey>
    <description><![CDATA[Error opening file; could not get Subversion properties]]></description>
  </rule>
  <rule key="Generic.WhiteSpace.DisallowTabIndent.TabsUsed" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowTabIndentTabsUsed</name>
    <configKey>rulesets/DisallowTabIndent</configKey>
    <description><![CDATA[Spaces must be used to indent lines; tabs are not allowed]]></description>
  </rule>
  <rule key="Generic.WhiteSpace.ScopeIndent.Incorrect" priority="MAJOR">
    <category name="Maintainability" />
    <name>ScopeIndentIncorrect</name>
    <configKey>rulesets/ScopeIndent</configKey>
    <description><![CDATA[Line indented incorrectly; expected %s spaces]]></description>
  </rule>
  <rule key="Generic.WhiteSpace.ScopeIndent.typ" priority="MAJOR">
    <category name="Maintainability" />
    <name>ScopeIndenttyp</name>
    <configKey>rulesets/ScopeIndent</configKey>
    <description><![CDATA[Line indented incorrectly; expected ]]></description>
  </rule>
  <rule key="MySource.Channels.ChannelException.WrongExceptionType" priority="MAJOR">
    <category name="Maintainability" />
    <name>ChannelExceptionWrongExceptionType</name>
    <configKey>rulesets/ChannelException</configKey>
    <description><![CDATA[Channel actions can only throw ChannelException; found "%s]]></description>
  </rule>
  <rule key="MySource.Channels.DisallowSelfActions.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowSelfActionsFound</name>
    <configKey>rulesets/DisallowSelfActions</configKey>
    <description><![CDATA[Static calls to public methods in Action classes must not use the self keyword; use %s::%s() instead]]></description>
  </rule>
  <rule key="MySource.Channels.IncludeSystem.NotIncludedCall" priority="MAJOR">
    <category name="Maintainability" />
    <name>IncludeSystemNotIncludedCall</name>
    <configKey>rulesets/IncludeSystem</configKey>
    <description><![CDATA[Static method called on non-included class or system "%s"; include system with Channels::includeSystem() or include class with require_once]]></description>
  </rule>
  <rule key="MySource.Channels.IncludeSystem.NotIncludedExtends" priority="MAJOR">
    <category name="Maintainability" />
    <name>IncludeSystemNotIncludedExtends</name>
    <configKey>rulesets/IncludeSystem</configKey>
    <description><![CDATA[Class extends non-included class or system "%s"; include system with Channels::includeSystem() or include class with require_once]]></description>
  </rule>
  <rule key="MySource.Channels.IncludeSystem.NotIncludedCall" priority="MAJOR">
    <category name="Maintainability" />
    <name>IncludeSystemNotIncludedCall</name>
    <configKey>rulesets/IncludeSystem</configKey>
    <description><![CDATA[Static method called on non-included class or system "%s"; include system with Channels::includeSystem() or include class with require_once]]></description>
  </rule>
  <rule key="MySource.Channels.UnusedSystem.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>UnusedSystemFound</name>
    <configKey>rulesets/UnusedSystem</configKey>
    <description><![CDATA[Included system "%s" is never used]]></description>
  </rule>
  <rule key="MySource.Commenting.FunctionComment.ApiNotFirst" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentApiNotFirst</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[The @api tag must come first in the @api tag list in a function comment]]></description>
  </rule>
  <rule key="MySource.Commenting.FunctionComment.ApiSpacing" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentApiSpacing</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[There must be one blank line before the @api tag in a function comment]]></description>
  </rule>
  <rule key="MySource.Commenting.FunctionComment.ApiTagSpacing" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentApiTagSpacing</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[There must be no blank line before the @%s tag in a function comment]]></description>
  </rule>
  <rule key="MySource.Commenting.FunctionComment.TagNotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentTagNotAllowed</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[@%s tag is not allowed in function comment]]></description>
  </rule>
  <rule key="MySource.Commenting.FunctionComment.ApiNotLast" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentApiNotLast</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[The @api tags must be the last tags in a function comment]]></description>
  </rule>
  <rule key="MySource.Commenting.FunctionComment.ApiTagIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentApiTagIndent</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[@%s tag indented incorrectly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="MySource.CSS.BrowserSpecificStyles.ForbiddenStyle" priority="MAJOR">
    <category name="Maintainability" />
    <name>BrowserSpecificStylesForbiddenStyle</name>
    <configKey>rulesets/BrowserSpecificStyles</configKey>
    <description><![CDATA[Browser-specific styles are not allowed]]></description>
  </rule>
  <rule key="MySource.Debug.DebugCode.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DebugCodeFound</name>
    <configKey>rulesets/DebugCode</configKey>
    <description><![CDATA[Call to debug function Debug::%s() must be removed]]></description>
  </rule>
  <rule key="MySource.Debug.FirebugConsole.ConflictFound" priority="MAJOR">
    <category name="Maintainability" />
    <name>FirebugConsoleConflictFound</name>
    <configKey>rulesets/FirebugConsole</configKey>
    <description><![CDATA[Variables]]></description>
  </rule>
  <rule key="MySource.Objects.AssignThis.NotSelf" priority="MAJOR">
    <category name="Maintainability" />
    <name>AssignThisNotSelf</name>
    <configKey>rulesets/AssignThis</configKey>
    <description><![CDATA[Keyword "this" can only be assigned to a variable called "self" or "_self]]></description>
  </rule>
  <rule key="MySource.Objects.CreateWidgetTypeCallback.FirstArgNotCallback" priority="MAJOR">
    <category name="Maintainability" />
    <name>CreateWidgetTypeCallbackFirstArgNotCallback</name>
    <configKey>rulesets/CreateWidgetTypeCallback</configKey>
    <description><![CDATA[The first argument of the create() method of a widget type must be called "callback]]></description>
  </rule>
  <rule key="MySource.Objects.CreateWidgetTypeCallback.ReturnValue" priority="MAJOR">
    <category name="Maintainability" />
    <name>CreateWidgetTypeCallbackReturnValue</name>
    <configKey>rulesets/CreateWidgetTypeCallback</configKey>
    <description><![CDATA[The create() method of a widget type must not return a value]]></description>
  </rule>
  <rule key="MySource.Objects.CreateWidgetTypeCallback.FirstArgNotSelf" priority="MAJOR">
    <category name="Maintainability" />
    <name>CreateWidgetTypeCallbackFirstArgNotSelf</name>
    <configKey>rulesets/CreateWidgetTypeCallback</configKey>
    <description><![CDATA[The first argument passed to the callback function must be "this" or "self]]></description>
  </rule>
  <rule key="MySource.Objects.CreateWidgetTypeCallback.NoReturn" priority="MAJOR">
    <category name="Maintainability" />
    <name>CreateWidgetTypeCallbackNoReturn</name>
    <configKey>rulesets/CreateWidgetTypeCallback</configKey>
    <description><![CDATA[The call to the callback function must be followed by a return statement if it is not the last statement in the create() method]]></description>
  </rule>
  <rule key="MySource.Objects.CreateWidgetTypeCallback.CallbackNotCalled" priority="MAJOR">
    <category name="Maintainability" />
    <name>CreateWidgetTypeCallbackCallbackNotCalled</name>
    <configKey>rulesets/CreateWidgetTypeCallback</configKey>
    <description><![CDATA[The create() method of a widget type must call the callback function]]></description>
  </rule>
  <rule key="MySource.Objects.DisallowNewWidget.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowNewWidgetFound</name>
    <configKey>rulesets/DisallowNewWidget</configKey>
    <description><![CDATA[Manual creation of widget objects is banned; use Widget::getWidget(\'%s\'); instead]]></description>
  </rule>
  <rule key="MySource.PHP.EvalObjectFactory.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>EvalObjectFactoryFound</name>
    <configKey>rulesets/EvalObjectFactory</configKey>
    <description><![CDATA[Do not use eval() to create objects dynamically; use reflection instead]]></description>
  </rule>
  <rule key="MySource.PHP.GetRequestData.WithVar" priority="MAJOR">
    <category name="Maintainability" />
    <name>GetRequestDatatyp</name>
    <configKey>rulesets/GetRequestData</configKey>
    <description><![CDATA[The %s super global must not be accessed directly; use Security::getRequestData(]]></description>
  </rule>
  <rule key="MySource.PHP.ReturnFunctionValue.NotAssigned" priority="MAJOR">
    <category name="Maintainability" />
    <name>ReturnFunctionValueNotAssigned</name>
    <configKey>rulesets/ReturnFunctionValue</configKey>
    <description><![CDATA[The result of a function call should be assigned to a variable before being returned]]></description>
  </rule>
  <rule key="MySource.Strings.JoinStrings.ArrayNotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>JoinStringsArrayNotAllowed</name>
    <configKey>rulesets/JoinStrings</configKey>
    <description><![CDATA[Joining strings using inline arrays is not allowed; use the + operator instead]]></description>
  </rule>
  <rule key="PEAR.Classes.ClassDeclaration.MissingBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationMissingBrace</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Possible parse error: %s missing opening or closing brace]]></description>
  </rule>
  <rule key="PEAR.Classes.ClassDeclaration.OpenBraceNewLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationOpenBraceNewLine</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Opening brace of a %s must be on the line after the definition]]></description>
  </rule>
  <rule key="PEAR.Classes.ClassDeclaration.OpenBraceWrongLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationOpenBraceWrongLine</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Opening brace of a %s must be on the line following the %s declaration; found %s line(s)]]></description>
  </rule>
  <rule key="PEAR.Classes.ClassDeclaration.OpenBraceNotAlone" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationOpenBraceNotAlone</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Opening %s brace must be on a line by itself]]></description>
  </rule>
  <rule key="PEAR.Classes.ClassDeclaration.SpaceBeforeBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationSpaceBeforeBrace</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Expected %s spaces before opening brace; %s found]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.WrongStyle" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentWrongStyle</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[You must use "/**" style comments for a %s comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.TagIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentTagIndent</name>
    <configKey>rulesets/ClassCommentTagIndent</configKey>
    <description><![CDATA[Incorrect tag indentation in class comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.MissingTag" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentMissingTag</name>
    <configKey>rulesets/ClassCommentMissingTag</configKey>
    <description><![CDATA[Missing %s doc comment in class]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.EmptyCopyright" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentEmptyCopyright</name>
    <configKey>rulesets/ClassCommentMissingTag</configKey>
    <description><![CDATA[Empty copyright comment in class]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.ParamNameNoMatch" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentParamNameNoMatch</name>
    <configKey>rulesets/FunctionCommentParamNameNoMatch</configKey>
    <description><![CDATA[Param name does not match function comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissing</name>
    <configKey>rulesets/FunctionCommentMissing</configKey>
    <description><![CDATA[Function comment is missing]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentMissing</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Missing %s doc comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentEmpty</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Doc comment is empty for %s]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.SpacingBeforeShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentSpacingBeforeShort</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Extra newline(s) found before %s comment short description]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.SpacingAfterShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentSpacingAfterShort</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[There must be exactly one blank line between descriptions in %s comments]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.SpacingBeforeTags" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentSpacingBeforeTags</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[There must be exactly one blank line before the tags in %s comments]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.EmptyVersion" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentEmptyVersion</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Content missing for @version tag in doc comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.ClassComment.InvalidVersion" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentInvalidVersion</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Invalid version "%s" in doc comment; consider "Release: <package_version>" instead]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.WrongStyle" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentWrongStyle</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[You must use "/**" style comments for a file comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissing</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Missing file doc comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentEmpty</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[File doc comment is empty]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.SpacingBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentSpacingBefore</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Extra newline(s) found before file comment short description]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.DescriptionSpacing" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentDescriptionSpacing</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[There must be exactly one blank line between descriptions in file comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.SpacingBeforeTags" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentSpacingBeforeTags</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[There must be exactly one blank line before the tags in file comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.MissingVersion" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissingVersion</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[PHP version not specified]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.MissingTag" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissingTag</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Missing @%s tag in %s comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.DuplicateTag" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentDuplicateTag</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Only 1 @%s tag is allowed in a %s comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.TagsNotGrouped" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentTagsNotGrouped</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[@%s tags must be grouped together]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.WrongTagOrder" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentWrongTagOrder</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[The @%s tag is in the wrong order; the tag %s]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.TagIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentTagIndent</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[@%s tag comment indented incorrectly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.InvalidCategory" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentInvalidCategory</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Category name "%s" is not valid; consider "%s" instead]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.EmptyCategory" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentEmptyCategory</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[@category tag must contain a name]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.InvalidPackage" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentInvalidPackage</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Package name "%s" is not valid; consider "%s" instead]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.EmptyPackage" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentEmptyPackage</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[@package tag must contain a name]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.InvalidSubpackage" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentInvalidSubpackage</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Subpackage name "%s" is not valid; consider "%s" instead]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.EmptySubpackage" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentEmptySubpackage</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[@subpackage tag must contain a name]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.InvalidAuthors" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentInvalidAuthors</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Content of the @author tag must be in the form "Display Name <username@example.com>]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.EmptyAuthors" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentEmptyAuthors</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Content missing for @author tag in %s comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.CopyrightHyphen" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentCopyrightHyphen</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[A hyphen must be used between the earliest and latest year]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.InvalidCopyright" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentInvalidCopyright</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Invalid year span \"$matches[1]$matches[3]$matches[4]\" found; consider \"$matches[4]-$matches[1]\" instead]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.EmptyCopyright" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentEmptyCopyright</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[@copyright tag must contain a year and the name of the copyright holder]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.EmptyCopyright" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentEmptyCopyright</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[@copyright tag must contain a year and the name of the copyright holder]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.EmptyLicense" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentEmptyLicense</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[@license tag must contain a URL and a license name]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.EmptyVersion" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentEmptyVersion</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Content missing for @version tag in file comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FileComment.InvalidVersion" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentInvalidVersion</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Invalid version "%s" in file comment; consider "CVS: <cvs_id>" or "SVN: <svn_id>" or "GIT: <git_id>" instead]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.WrongStyle" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentWrongStyle</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[You must use "/**" style comments for a function comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentEmpty</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Function doc comment is empty]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.SpacingBeforeShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingBeforeShort</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Extra newline(s) found before function comment short description]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.SpacingAfterShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingAfterShort</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[There must be exactly one blank line between descriptions in function comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.SpacingBeforeTags" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingBeforeTags</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[There must be exactly one blank line before the tags in function comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.EmptyThrows" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentEmptyThrows</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[@throws tag must contain the exception class name]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.MissingReturn" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingReturn</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Missing @return tag in function comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.EmptyReturn" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentEmptyReturn</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[@return tag is empty in function comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.SpacingAfterParams" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingAfterParams</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Last parameter comment requires a blank newline after it]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.SpacingBeforeParams" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingBeforeParams</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Parameters must appear immediately after the comment]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.SpacingBeforeParamType" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingBeforeParamType</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Expected 1 space before variable type]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.ParameterNamesNotAligned" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentParameterNamesNotAligned</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[The variable names for parameters %s (%s) and %s (%s) do not align]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.ParameterCommentsNotAligned" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentParameterCommentsNotAligned</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[The comments for parameters %s (%s) and %s (%s) do not align]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.cod" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentcod</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Doc comment for var %s does not match ]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.ExtraParamComment" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentExtraParamComment</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Superfluous doc comment at position '.$po]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.MissingParamName" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingParamName</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Missing parameter name at position '.$po]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.MissingParamType" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingParamType</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Missing type at position '.$po]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.MissingParamComment" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingParamComment</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Missing comment for param "%s" at position %s]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.SpacingAfterLongType" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingAfterLongType</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Expected 1 space after the longest type]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.SpacingAfterLongName" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingAfterLongName</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Expected 1 space after the longest variable name]]></description>
  </rule>
  <rule key="PEAR.Commenting.FunctionComment.MissingParamTag" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingParamTag</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Doc comment for "%s" missing]]></description>
  </rule>
  <rule key="PEAR.Commenting.InlineComment.WrongStyle" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineCommentWrongStyle</name>
    <configKey>rulesets/InlineComment</configKey>
    <description><![CDATA[Perl-style comments are not allowed. Use "// Comment.]]></description>
  </rule>
  <rule key="PEAR.ControlStructures.MultiLineCondition.CloseBracketNewLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultiLineConditionCloseBracketNewLine</name>
    <configKey>rulesets/MultiLineCondition</configKey>
    <description><![CDATA[Closing parenthesis of a multi-line IF statement must be on a new line]]></description>
  </rule>
  <rule key="PEAR.ControlStructures.ControlSignature" priority="MAJOR">
    <category name="Maintainability" />
    <name>ControlStructuresControlSignature</name>
    <configKey>rulesets/ControlSignature</configKey>
    <description><![CDATA[Incorrect control signature]]></description>
  </rule>
  <rule key="PEAR.ControlStructures.MultiLineCondition.Alignment" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultiLineConditionAlignment</name>
    <configKey>rulesets/MultiLineCondition</configKey>
    <description><![CDATA[Multi-line IF statement not indented correctly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="PEAR.ControlStructures.MultiLineCondition.StartWithBoolean" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultiLineConditionStartWithBoolean</name>
    <configKey>rulesets/MultiLineCondition</configKey>
    <description><![CDATA[Each line in a multi-line IF statement must begin with a boolean operator]]></description>
  </rule>
  <rule key="PEAR.ControlStructures.MultiLineCondition.SpaceBeforeOpenBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultiLineConditionSpaceBeforeOpenBrace</name>
    <configKey>rulesets/MultiLineCondition</configKey>
    <description><![CDATA[There must be a single space between the closing parenthesis and the opening brace of a multi-line IF statement; found $length spaces]]></description>
  </rule>
  <rule key="PEAR.ControlStructures.MultiLineCondition.NoSpaceBeforeOpenBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultiLineConditionNoSpaceBeforeOpenBrace</name>
    <configKey>rulesets/MultiLineCondition</configKey>
    <description><![CDATA[There must be a single space between the closing parenthesis and the opening brace of a multi-line IF statement]]></description>
  </rule>
  <rule key="PEAR.Files.IncludingFile.BracketsNotRequired" priority="MAJOR">
    <category name="Maintainability" />
    <name>IncludingFileBracketsNotRequired</name>
    <configKey>rulesets/IncludingFile</configKey>
    <description><![CDATA[%s" is a statement not a function; no parentheses are required]]></description>
  </rule>
  <rule key="PEAR.Files.IncludingFile.UseIncludeOnce" priority="MAJOR">
    <category name="Maintainability" />
    <name>IncludingFileUseIncludeOnce</name>
    <configKey>rulesets/IncludingFile</configKey>
    <description><![CDATA[File is being conditionally included; ]]></description>
  </rule>
  <rule key="PEAR.Files.IncludingFile.UseInclude" priority="MAJOR">
    <category name="Maintainability" />
    <name>IncludingFileUseInclude</name>
    <configKey>rulesets/IncludingFile</configKey>
    <description><![CDATA[File is being conditionally included; ]]></description>
  </rule>
  <rule key="PEAR.Files.IncludingFile.UseRequireOnce" priority="MAJOR">
    <category name="Maintainability" />
    <name>IncludingFileUseRequireOnce</name>
    <configKey>rulesets/IncludingFile</configKey>
    <description><![CDATA[File is being unconditionally included; ]]></description>
  </rule>
  <rule key="PEAR.Files.IncludingFile.UseRequire" priority="MAJOR">
    <category name="Maintainability" />
    <name>IncludingFileUseRequire</name>
    <configKey>rulesets/IncludingFile</configKey>
    <description><![CDATA[File is being unconditionally included; ]]></description>
  </rule>
  <rule key="PEAR.Formatting.MultiLineAssignment.EqualSignLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultiLineAssignmentEqualSignLine</name>
    <configKey>rulesets/MultiLineAssignment</configKey>
    <description><![CDATA[Multi-line assignments must have the equal sign on the second line]]></description>
  </rule>
  <rule key="PEAR.Formatting.MultiLineAssignment.Indent" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultiLineAssignmentIndent</name>
    <configKey>rulesets/MultiLineAssignment</configKey>
    <description><![CDATA[Multi-line assignment not indented correctly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionCallSignature.SpaceBeforeOpenBracket" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallSignatureSpaceBeforeOpenBracket</name>
    <configKey>rulesets/FunctionCallSignature</configKey>
    <description><![CDATA[Space before opening parenthesis of function call prohibited]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallSignatureSpaceAfterCloseBracket</name>
    <configKey>rulesets/FunctionCallSignature</configKey>
    <description><![CDATA[Space after closing parenthesis of function call prohibited]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallSignatureSpaceAfterOpenBracket</name>
    <configKey>rulesets/FunctionCallSignature</configKey>
    <description><![CDATA[Space after opening parenthesis of function call prohibited]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallSignatureSpaceBeforeCloseBracket</name>
    <configKey>rulesets/FunctionCallSignature</configKey>
    <description><![CDATA[Space before closing parenthesis of function call prohibited]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionCallSignature.Indent" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallSignatureIndent</name>
    <configKey>rulesets/FunctionCallSignature</configKey>
    <description><![CDATA[Multi-line function call not indented correctly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallSignatureContentAfterOpenBracket</name>
    <configKey>rulesets/FunctionCallSignature</configKey>
    <description><![CDATA[Opening parenthesis of a multi-line function call must be the last content on the line]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionCallSignature.CloseBracketLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCallSignatureCloseBracketLine</name>
    <configKey>rulesets/FunctionCallSignature</configKey>
    <description><![CDATA[Closing parenthesis of a multi-line function call must be on a line by itself]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionDeclaration.Indent" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationIndent</name>
    <configKey>rulesets/FunctionDeclaration</configKey>
    <description><![CDATA[Multi-line function declaration not indented correctly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionDeclaration.BraceIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationBraceIndent</name>
    <configKey>rulesets/FunctionDeclarationBraceIndent</configKey>
    <description><![CDATA[Function brace not indented correctly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionDeclaration.BraceOnSameLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationBraceIndent</name>
    <configKey>rulesets/FunctionDeclarationBraceOnSameLine</configKey>
    <description><![CDATA[Function brace on the same line]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionDeclaration.NewlineBeforeOpenBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationNewlineBeforeOpenBrace</name>
    <configKey>rulesets/FunctionDeclarationNewlineBeforeOpenBrace</configKey>
    <description><![CDATA[New line before open brace]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionDeclaration.cod" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationcod</name>
    <configKey>rulesets/FunctionDeclaration</configKey>
    <description><![CDATA[There must be a single space between the closing parenthesis and the opening brace of a multi-line function declaration; found ]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionDeclaration.NoSpaceBeforeOpenBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationNoSpaceBeforeOpenBrace</name>
    <configKey>rulesets/FunctionDeclaration</configKey>
    <description><![CDATA[There must be a single space between the closing parenthesis and the opening brace of a multi-line function declaration]]></description>
  </rule>
  <rule key="PEAR.Functions.FunctionDeclaration.CloseBracketLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationCloseBracketLine</name>
    <configKey>rulesets/FunctionDeclaration</configKey>
    <description><![CDATA[The closing parenthesis of a multi-line function declaration must be on a new line]]></description>
  </rule>
  <rule key="PEAR.Functions.ValidDefaultValue.NotAtEnd" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidDefaultValueNotAtEnd</name>
    <configKey>rulesets/ValidDefaultValue</configKey>
    <description><![CDATA[Arguments with default values must be at the end of the argument list]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidClassName.StartWithCaptial" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidClassNameStartWithCaptial</name>
    <configKey>rulesets/ValidClassName</configKey>
    <description><![CDATA[%s name must begin with a capital letter]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidClassName.Invalid" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidClassNameInvalid</name>
    <configKey>rulesets/ValidClassName</configKey>
    <description><![CDATA[%s name is not valid]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidClassName.Invalid" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidClassNameInvalid</name>
    <configKey>rulesets/ValidClassName</configKey>
    <description><![CDATA[%s name is not valid; consider %s instead]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidFunctionName.MethodDoubleUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNameMethodDoubleUnderscore</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[Method name "%s" is invalid; only PHP magic methods should be prefixed with a double underscore]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNamePrivateNoUnderscore</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[Private method name "%s" must be prefixed with an underscore]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidFunctionName.PublicUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNamePublicUnderscore</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[%s method name "%s" must not be prefixed with an underscore]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNameScopeNotCamelCaps</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[%s method name "%s" is not in camel caps format]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidFunctionName.NotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNameNotCamelCaps</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[Method name "%s" is not in camel caps format]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidFunctionName.FunctionDoubleUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNameFunctionDoubleUnderscore</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[Function name "%s" is invalid; only PHP magic methods should be prefixed with a double underscore]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidFunctionName.FunctionUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNameFunctionUnderscore</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[Function name "%s" is invalid; only private methods should be prefixed with an underscore]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidFunctionName.FunctionNoCaptial" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNameFunctionNoCaptial</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[Function name "%s" is prefixed with a package name but does not begin with a capital letter]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidFunctionName.FunctionInvalid" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNameFunctionInvalid</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[Function name "%s" is not valid; name appears incomplete]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidFunctionName.FunctionNameInvalid" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNameFunctionNameInvalid</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[Function name "%s" is invalid; consider "%s" instead]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNamePrivateNoUnderscore</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Private member variable "%s" must be prefixed with an underscore]]></description>
  </rule>
  <rule key="PEAR.NamingConventions.ValidVariableName.PublicUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNamePublicUnderscore</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[%s member variable "%s" must not be prefixed with an underscore]]></description>
  </rule>
  <rule key="PEAR.WhiteSpace.ObjectOperatorIndent.Incorrect" priority="MAJOR">
    <category name="Maintainability" />
    <name>ObjectOperatorIndentIncorrect</name>
    <configKey>rulesets/ObjectOperatorIndent</configKey>
    <description><![CDATA[Object operator not indented correctly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="PEAR.WhiteSpace.ObjectOperatorIndent.StartOfLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>ObjectOperatorIndentStartOfLine</name>
    <configKey>rulesets/ObjectOperatorIndent</configKey>
    <description><![CDATA[Object operator must be at the start of the line]]></description>
  </rule>
  <rule key="PEAR.WhiteSpace.ScopeClosingBrace.Line" priority="MAJOR">
    <category name="Maintainability" />
    <name>ScopeClosingBraceLine</name>
    <configKey>rulesets/ScopeClosingBrace</configKey>
    <description><![CDATA[Closing brace must be on a line by itself]]></description>
  </rule>
  <rule key="PEAR.WhiteSpace.ScopeClosingBrace.BreakIdent" priority="MAJOR">
    <category name="Maintainability" />
    <name>ScopeClosingBraceBreakIdent</name>
    <configKey>rulesets/ScopeClosingBrace</configKey>
    <description><![CDATA[Break statement indented incorrectly; expected %s spaces]]></description>
  </rule>
  <rule key="PEAR.WhiteSpace.ScopeClosingBrace.Indent" priority="MAJOR">
    <category name="Maintainability" />
    <name>ScopeClosingBraceIndent</name>
    <configKey>rulesets/ScopeClosingBrace</configKey>
    <description><![CDATA[Closing brace indented incorrectly; expected %s spaces]]></description>
  </rule>
  <rule key="PEAR.WhiteSpace.ScopeIndent." priority="MAJOR">
    <category name="Maintainability" />
    <name>ScopeIndent</name>
    <configKey>rulesets/ScopeIndent</configKey>
    <description><![CDATA[Class Generic_Sniffs_WhiteSpace_ScopeIndentSniff not found]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayBracketSpacing.SpaceBeforeBracket" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayBracketSpacingSpaceBeforeBracket</name>
    <configKey>rulesets/ArrayBracketSpacing</configKey>
    <description><![CDATA[Space found before square bracket; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayBracketSpacing.SpaceAfterBracket" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayBracketSpacingSpaceAfterBracket</name>
    <configKey>rulesets/ArrayBracketSpacing</configKey>
    <description><![CDATA[Space found after square bracket; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.NotLowerCase" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationNotLowerCase</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Array keyword should be lower case; expected "array" but found "%s]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.SpaceAfterKeyword" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationSpaceAfterKeyword</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[There must be no space between the Array keyword and the opening parenthesis]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.SpaceInEmptyArray" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationSpaceInEmptyArray</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Empty array declaration must have no space between the parentheses]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.NoSpaceBeforeDoubleArrow" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationNoSpaceBeforeDoubleArrow</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Expected 1 space between "%s" and double arrow; 0 found]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.SpaceBeforeDoubleArrow" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationSpaceBeforeDoubleArrow</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Expected 1 space between "%s" and double arrow; %s found]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.NoSpaceAfterDoubleArrow" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationNoSpaceAfterDoubleArrow</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Expected 1 space between double arrow and "%s"; 0 found]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.SpaceAfterDoubleArrow" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationSpaceAfterDoubleArrow</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Expected 1 space between double arrow and "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationSingleLineNotAllowed</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Array with multiple values cannot be declared on a single line]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.NoSpaceAfterComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationNoSpaceAfterComma</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Expected 1 space between comma and "%s"; 0 found]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.SpaceAfterComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationSpaceAfterComma</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Expected 1 space between comma and "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationSpaceBeforeComma</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Expected 0 spaces between "%s" and comma; %s found]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationCloseBraceNewLine</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Closing parenthesis of array declaration must be on a new line]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationCloseBraceNotAligned</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Closing parenthesis not aligned correctly; expected %s space(s) but found %s]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.NoKeySpecified" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationNoKeySpecified</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[No key specified for array entry; first entry specifies key]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationSpaceBeforeComma</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Expected 0 spaces between "%s" and comma; %s found]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.KeySpecified" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationKeySpecified</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Key specified for array entry; first entry has no key]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.MulitLineNotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationMulitLineNotAllowed</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Multi-line array contains a single value; use single-line array instead]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationNoCommaAfterLast</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Comma required after last value in array declaration]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.ValueNotAligned" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationValueNotAligned</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Array value not aligned correctly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationFirstValueNoNewline</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[The first value in a multi-value array must be on a new line]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.FirstIndexNoNewline" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationFirstIndexNoNewline</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[The first index in a multi-value array must be on a new line]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.KeyNotAligned" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationKeyNotAligned</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Array key not aligned correctly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationDoubleArrowNotAligned</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Array double arrow not aligned correctly; expected %s space(s) but found %s]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.ValueNotAligned" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationValueNotAligned</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Array value not aligned correctly; expected %s space(s) but found %s]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.NoComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationNoComma</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Each line in an array declaration must end in a comma]]></description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>ArrayDeclarationSpaceBeforeComma</name>
    <configKey>rulesets/ArrayDeclaration</configKey>
    <description><![CDATA[Expected 0 spaces between "%s" and comma; %s found]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.MultipleClasses" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationMultipleClasses</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Only one interface or class is allowed in a file]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.SpaceBeforeKeyword" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationSpaceBeforeKeyword</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Expected 0 spaces before %s keyword; %s found]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.SpacesBeforeKeyword" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationSpacesBeforeKeyword</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Expected 1 space between %s and %s keywords; %s found]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.MissingBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationMissingBrace</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Possible parse error: %s missing opening or closing brace]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.NewLineBeforeCloseBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationNewLineBeforeCloseBrace</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Expected 0 spaces before closing brace; newline found]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.SpaceBeforeCloseBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationSpaceBeforeCloseBrace</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Expected 0 spaces before closing brace; %s found]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.EndFileAfterCloseBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationEndFileAfterCloseBrace</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Closing brace of a %s must be followed by a blank line and then a closing PHP tag]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.NoNewlineAfterCloseBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationNoNewlineAfterCloseBrace</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Closing brace of a %s must be followed by a single blank line]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.NewlinesAfterCloseBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationNewlinesAfterCloseBrace</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Closing brace of a %s must be followed by a single blank line; found %s]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.CloseBraceSameLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationCloseBraceSameLine</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Closing %s brace must be on a line by itself]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.SpaceAfterKeyword" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationSpaceAfterKeyword</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Expected 1 space between %s keyword and %s name; %s found]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.SpaceAfterName" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationSpaceAfterName</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Expected 1 space after %s name; %s found]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.NoSpaceBeforeName" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationNoSpaceBeforeName</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Expected 1 space before "%s"; 0 found]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.SpaceBeforeName" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationSpaceBeforeName</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Expected 1 space before "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassDeclaration.SpaceBeforeComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDeclarationSpaceBeforeComma</name>
    <configKey>rulesets/ClassDeclaration</configKey>
    <description><![CDATA[Expected 0 spaces between "%s" and comma; $%s found]]></description>
  </rule>
  <rule key="Squiz.Classes.ClassFileName.NoMatch" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassFileNameNoMatch</name>
    <configKey>rulesets/ClassFileName</configKey>
    <description><![CDATA[%s name doesn\'t match filename; expected "%s %s]]></description>
  </rule>
  <rule key="Squiz.Classes.DuplicateProperty.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DuplicatePropertyFound</name>
    <configKey>rulesets/DuplicateProperty</configKey>
    <description><![CDATA[Duplicate property definition found for "%s"; previously defined on line %s]]></description>
  </rule>
  <rule key="Squiz.Classes.LowercaseClassKeywords.FoundUppercase" priority="MAJOR">
    <category name="Maintainability" />
    <name>LowercaseClassKeywordsFoundUppercase</name>
    <configKey>rulesets/LowercaseClassKeywords</configKey>
    <description><![CDATA[%s keyword must be lowercase; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.Classes.SelfMemberReference.IncorrectCase" priority="MAJOR">
    <category name="Maintainability" />
    <name>SelfMemberReferenceIncorrectCase</name>
    <configKey>rulesets/SelfMemberReference</configKey>
    <description><![CDATA[Must use "self::" for local static member reference; found "%s::]]></description>
  </rule>
  <rule key="Squiz.Classes.SelfMemberReference.NotUsed" priority="MAJOR">
    <category name="Maintainability" />
    <name>SelfMemberReferenceNotUsed</name>
    <configKey>rulesets/SelfMemberReference</configKey>
    <description><![CDATA[Must use "self::" for local static member reference]]></description>
  </rule>
  <rule key="Squiz.Classes.SelfMemberReference.SpaceBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>SelfMemberReferenceSpaceBefore</name>
    <configKey>rulesets/SelfMemberReference</configKey>
    <description><![CDATA[Expected 0 spaces before double colon; %s found]]></description>
  </rule>
  <rule key="Squiz.Classes.SelfMemberReference.SpaceAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>SelfMemberReferenceSpaceAfter</name>
    <configKey>rulesets/SelfMemberReference</configKey>
    <description><![CDATA[Expected 0 spaces after double colon; %s found]]></description>
  </rule>
  <rule key="Squiz.Classes.ValidClassName.MissingBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidClassNameMissingBrace</name>
    <configKey>rulesets/ValidClassName</configKey>
    <description><![CDATA[Possible parse error: %s missing opening or closing brace]]></description>
  </rule>
  <rule key="Squiz.Classes.ValidClassName.NotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidClassNameNotCamelCaps</name>
    <configKey>rulesets/ValidClassName</configKey>
    <description><![CDATA[%s name "%s" is not in camel caps format]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.SingleLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentSingleLine</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[Single line block comment not allowed; use inline ("// text") comment instead]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentEmpty</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[Empty block comment not allowed]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.NoNewLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentNoNewLine</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[Block comment text must start on a new line]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.HasEmptyLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentHasEmptyLine</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[Empty line not allowed at start of comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.FirstLineIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentFirstLineIndent</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[First line of comment not aligned correctly; expected %s but found %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.NoCaptial" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentNoCaptial</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[Block comments must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.LineIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentLineIndent</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[Comment line indented incorrectly; expected at least %s but found %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.LastLineIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentLastLineIndent</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[Last line of comment aligned incorrectly; expected %s but found %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.HasEmptyLineBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentHasEmptyLineBefore</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[Empty line not required before block comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.NoEmptyLineBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentNoEmptyLineBefore</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[Empty line required before block comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.BlockComment.NoEmptyLineAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>BlockCommentNoEmptyLineAfter</name>
    <configKey>rulesets/BlockComment</configKey>
    <description><![CDATA[Empty line required after block comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.SpacingBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentSpacingBefore</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[There must be exactly one blank line before the class comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentEmpty</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Class doc comment is empty]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.SpacingAfterOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentSpacingAfterOpen</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[The open comment tag must be the only content on the line]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.MissingShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentMissingShort</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Missing short description in class doc comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.SpacingBeforeShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentSpacingBeforeShort</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Extra newline(s) found before class comment short description]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.SpacingBetween" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentSpacingBetween</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[There must be exactly one blank line between descriptions in class comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.LongNotCaptial" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentLongNotCaptial</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Class comment long description must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.SpacingBeforeTags" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentSpacingBeforeTags</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[There must be exactly one blank line before the tags in class comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.ShortSingleLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentShortSingleLine</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Class comment short description must be on a single line]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.ShortNotCapital" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentShortNotCapital</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Class comment short description must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.ShortFullStop" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentShortFullStop</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Class comment short description must end with a full stop]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.TagNotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentTagNotAllowed</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[@%s tag is not allowed in class comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClassComment.SpacingAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassCommentSpacingAfter</name>
    <configKey>rulesets/ClassComment</configKey>
    <description><![CDATA[Additional blank lines found at end of class comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClosingDeclarationComment.Abstract" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClosingDeclarationCommentAbstract</name>
    <configKey>rulesets/ClosingDeclarationComment</configKey>
    <description><![CDATA[Possible parse error: non-abstract method defined as abstract]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClosingDeclarationComment.MissingBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClosingDeclarationCommentMissingBrace</name>
    <configKey>rulesets/ClosingDeclarationComment</configKey>
    <description><![CDATA[Possible parse error: %s missing opening or closing brace]]></description>
  </rule>
  <rule key="Squiz.Commenting.ClosingDeclarationComment.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClosingDeclarationCommentMissing</name>
    <configKey>rulesets/ClosingDeclarationComment</configKey>
    <description><![CDATA[Expected '.$commen]]></description>
  </rule>
  <rule key="Squiz.Commenting.DocCommentAlignment.NoSpaceBeforeTag" priority="MAJOR">
    <category name="Maintainability" />
    <name>DocCommentAlignmentNoSpaceBeforeTag</name>
    <configKey>rulesets/DocCommentAlignment</configKey>
    <description><![CDATA[Expected 1 space between asterisk and tag; 0 found]]></description>
  </rule>
  <rule key="Squiz.Commenting.DocCommentAlignment.SpaceBeforeTag" priority="MAJOR">
    <category name="Maintainability" />
    <name>DocCommentAlignmentSpaceBeforeTag</name>
    <configKey>rulesets/DocCommentAlignment</configKey>
    <description><![CDATA[Expected 1 space between asterisk and tag; %s found]]></description>
  </rule>
  <rule key="Squiz.Commenting.DocCommentAlignment.SpaceBeforeAsterisk" priority="MAJOR">
    <category name="Maintainability" />
    <name>DocCommentAlignmentSpaceBeforeAsterisk</name>
    <configKey>rulesets/DocCommentAlignment</configKey>
    <description><![CDATA[Expected %s space(s) before asterisk; %s found]]></description>
  </rule>
  <rule key="Squiz.Commenting.EmptyCatchComment.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmptyCatchCommentMissing</name>
    <configKey>rulesets/EmptyCatchComment</configKey>
    <description><![CDATA[Empty CATCH statement must have a comment to explain why the exception is not handled]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.SpacingAfterOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentSpacingAfterOpen</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Extra newline found after the open tag]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.SpacingAfterComment" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentSpacingAfterComment</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[There must be exactly one blank line after the file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentEmpty</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[File doc comment is empty]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.ContentAfterOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentContentAfterOpen</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[The open comment tag must be the only content on the line]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.SpacingBeforeShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentSpacingBeforeShort</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Extra newline(s) found before file comment short description]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.SpacingBetween" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentSpacingBetween</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[There must be exactly one blank line between descriptions in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.LongNotCaptial" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentLongNotCaptial</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[File comment long description must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.SpacingBeforeTags" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentSpacingBeforeTags</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[There must be exactly one blank line before the tags in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.ShortSingleLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentShortSingleLine</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[File comment short description must be on a single line]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.ShortNotCapital" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentShortNotCapital</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[File comment short description must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.ShortFullStop" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentShortFullStop</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[File comment short description must end with a full stop]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.TagNotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentTagNotAllowed</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[@%s tag is not allowed in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.SpacingAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentSpacingAfter</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Additional blank lines found at end of file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.MissingTag" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissingTag</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Missing @%s tag in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.DuplicateTag" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentDuplicateTag</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Only 1 @%s tag is allowed in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.TagOrder" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentTagOrder</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[The @%s tag is in the wrong order; the tag %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.TagIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentTagIndent</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[@%s tag comment indented incorrectly; expected %s spaces but found %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.MissingPackage" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissingPackage</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Content missing for @package tag in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.IncorrectPackage" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentIncorrectPackage</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Package name "%s" is not valid; consider "%s" instead]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.MissingSubpackage" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissingSubpackage</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Content missing for @subpackage tag in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.IncorrectSubpackage" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentIncorrectSubpackage</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Subpackage name "%s" is not valid; consider "%s" instead]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.MissingAuthor" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissingAuthor</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Content missing for @author tag in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.IncorrectAuthor" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentIncorrectAuthor</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Expected "Squiz Pty Ltd <products@squiz.net>" for author tag]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.MissingCopyright" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissingCopyright</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Content missing for @copyright tag in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.IncorrectCopyright" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentIncorrectCopyright</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Expected "xxxx-xxxx Squiz Pty Ltd (ACN 084 670 600)" for copyright declaration]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.MissingLicense" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissingLicense</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Content missing for @license tag in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.MissingLinceseURL" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissingLinceseURL</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[License URL missing for @license tag in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.IncorrectLicenseURL" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentIncorrectLicenseURL</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Expected "http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt" for license URL]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.MissingLinceseName" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentMissingLinceseName</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[License name missing for @license tag in file comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FileComment.IncorrectLicenseName" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileCommentIncorrectLicenseName</name>
    <configKey>rulesets/FileComment</configKey>
    <description><![CDATA[Expected "GPLv2" for license name]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.WrongStyle" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentWrongStyle</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[You must use "/**" style comments for a function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissing</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Missing function doc comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentEmpty</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Function doc comment is empty]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ContentAfterOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentContentAfterOpen</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[The open comment tag must be the only content on the line]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.MissingShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingShort</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Missing short description in function doc comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SpacingBeforeShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingBeforeShort</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Extra newline(s) found before function comment short description]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SpacingBetween" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingBetween</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[There must be exactly one blank line between descriptions in function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.LongNotCapital" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentLongNotCapital</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Function comment long description must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SpacingBeforeTags" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingBeforeTags</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[There must be exactly one blank line before the tags in function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ShortSingleLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentShortSingleLine</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Function comment short description must be on a single line]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ShortNotCapital" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentShortNotCapital</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Function comment short description must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ShortFullStop" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentShortFullStop</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Function comment short description must end with a full stop]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SpacingAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingAfter</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Additional blank lines found at end of function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SeeOrder" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSeeOrder</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[The @see tag is in the wrong order; the tag precedes @return]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.EmptySee" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentEmptySee</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Content missing for @see tag in function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SeeIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSeeIndent</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[@see tag indented incorrectly; expected 4 spaces but found %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.DuplicateReturn" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentDuplicateReturn</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Only 1 @return tag is allowed in function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ReturnOrder" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentReturnOrder</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[The @return tag is in the wrong order; the tag follows @see (if used)]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.MissingReturnType" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingReturnType</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Return type missing for @return tag in function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.InvalidReturn" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentInvalidReturn</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Function return type "%s" is invalid]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.InvalidReturnVoid" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentInvalidReturnVoid</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Function return type is void]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.InvalidNoReturn" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentInvalidNoReturn</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Function return type is not void]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.InvalidReturnNotVoid" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentInvalidReturnNotVoid</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Function return type is not void]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ReturnIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentReturnIndent</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[@return tag indented incorrectly; expected 1 space but found %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.MissingReturn" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingReturn</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Missing @return tag in function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ReturnNotRequired" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentReturnNotRequired</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[@return tag is not required for constructor and destructor]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.InvalidThrows" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentInvalidThrows</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Exception type and comment missing for @throws tag in function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.EmptyThrows" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentEmptyThrows</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Comment missing for @throws tag in function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ThrowsNotCapital" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentThrowsNotCapital</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[@throws tag comment must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ThrowsNoFullStop" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentThrowsNoFullStop</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[@throws tag comment must end with a full stop]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ThrowsOrder" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentThrowsOrder</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[The @throws tag is in the wrong order; the tag follows @return]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SpacingAfterParams" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingAfterParams</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Last parameter comment requires a blank newline after it]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SpacingBeforeParams" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingBeforeParams</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Parameters must appear immediately after the comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SpacingBeforeParamType" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingBeforeParamType</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Expected 1 space before variable type]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ParameterNamesNotAligned" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentParameterNamesNotAligned</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[The variable names for parameters %s (%s) and %s (%s) do not align]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ParameterCommentsNotAligned" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentParameterCommentsNotAligned</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[The comments for parameters %s (%s) and %s (%s) do not align]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.IncorrectParamVarName" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentIncorrectParamVarName</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Expected "%s"; found "%s" for %s at position %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.TypeHintMissing" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentTypeHintMissing</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Type hint "%s" missing for %s at position %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.IncorrectTypeHint" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentIncorrectTypeHint</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Expected type hint "%s"; found "%s" for %s at position %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.InvalidTypeHint" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentInvalidTypeHint</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Unknown type hint "%s" found for %s at position %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.cod" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentcod</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Doc comment for var %s does not match ]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ExtraParamComment" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentExtraParamComment</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Superfluous doc comment at position '.$po]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.MissingParamName" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingParamName</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Missing parameter name at position '.$po]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.MissingParamType" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingParamType</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Missing type at position '.$po]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.MissingParamComment" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingParamComment</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Missing comment for param "%s" at position %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ParamCommentNotCapital" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentParamCommentNotCapital</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Param comment must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.ParamCommentFullStop" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentParamCommentFullStop</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Param comment must end with a full stop]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SpacingAfterLongType" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingAfterLongType</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Expected 1 space after the longest type]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.SpacingAfterLongName" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentSpacingAfterLongName</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Expected 1 space after the longest variable name]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.MissingParamTag" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentMissingParamTag</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[Doc comment for "%s" missing]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionComment.TagNotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentTagNotAllowed</name>
    <configKey>rulesets/FunctionComment</configKey>
    <description><![CDATA[@%s tag is not allowed in function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionCommentThrowTag.FailedParse" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentThrowTagFailedParse</name>
    <configKey>rulesets/FunctionCommentThrowTag</configKey>
    <description><![CDATA[Class PHP_CodeSniffer_Standards_AbstractScopeSniff not found]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionCommentThrowTag.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentThrowTagMissing</name>
    <configKey>rulesets/FunctionCommentThrowTag</configKey>
    <description><![CDATA[Missing @throws tag in function comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionCommentThrowTag.WrongNumber" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentThrowTagWrongNumber</name>
    <configKey>rulesets/FunctionCommentThrowTag</configKey>
    <description><![CDATA[Expected %s @throws tag(s) in function comment; %s found]]></description>
  </rule>
  <rule key="Squiz.Commenting.FunctionCommentThrowTag.WrongType" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionCommentThrowTagWrongType</name>
    <configKey>rulesets/FunctionCommentThrowTag</configKey>
    <description><![CDATA[Expected "%s" but found "%s" for @throws tag exception]]></description>
  </rule>
  <rule key="Squiz.Commenting.InlineComment.DocBlock" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineCommentDocBlock</name>
    <configKey>rulesets/InlineComment</configKey>
    <description><![CDATA[Inline doc block comments are not allowed; use "/* Comment */" or "// Comment" instead]]></description>
  </rule>
  <rule key="Squiz.Commenting.InlineComment.WrongStyle" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineCommentWrongStyle</name>
    <configKey>rulesets/InlineComment</configKey>
    <description><![CDATA[Perl-style comments are not allowed; use "// Comment" instead]]></description>
  </rule>
  <rule key="Squiz.Commenting.InlineComment.NoSpaceBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineCommentNoSpaceBefore</name>
    <configKey>rulesets/InlineComment</configKey>
    <description><![CDATA[No space before comment text; expected "// %s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.Commenting.InlineComment.SpacingBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineCommentSpacingBefore</name>
    <configKey>rulesets/InlineComment</configKey>
    <description><![CDATA[%s spaces found before inline comment; expected "// %s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.Commenting.InlineComment.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineCommentEmpty</name>
    <configKey>rulesets/InlineComment</configKey>
    <description><![CDATA[Blank comments are not allowed]]></description>
  </rule>
  <rule key="Squiz.Commenting.InlineComment.NotCapital" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineCommentNotCapital</name>
    <configKey>rulesets/InlineComment</configKey>
    <description><![CDATA[Inline comments must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.InlineComment.InvalidEndChar" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineCommentInvalidEndChar</name>
    <configKey>rulesets/InlineComment</configKey>
    <description><![CDATA[Inline comments must end in %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.InlineComment.SpacingAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineCommentSpacingAfter</name>
    <configKey>rulesets/InlineComment</configKey>
    <description><![CDATA[There must be no blank line following an inline comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.LongConditionClosingComment.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>LongConditionClosingCommentMissing</name>
    <configKey>rulesets/LongConditionClosingComment</configKey>
    <description><![CDATA[End comment for long condition not found; expected "%s]]></description>
  </rule>
  <rule key="Squiz.Commenting.LongConditionClosingComment.SpacingBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>LongConditionClosingCommentSpacingBefore</name>
    <configKey>rulesets/LongConditionClosingComment</configKey>
    <description><![CDATA[Space found before closing comment; expected "%s]]></description>
  </rule>
  <rule key="Squiz.Commenting.LongConditionClosingComment.Invalid" priority="MAJOR">
    <category name="Maintainability" />
    <name>LongConditionClosingCommentInvalid</name>
    <configKey>rulesets/LongConditionClosingComment</configKey>
    <description><![CDATA[Incorrect closing comment; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.Commenting.PostStatementComment.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>PostStatementCommentFound</name>
    <configKey>rulesets/PostStatementComment</configKey>
    <description><![CDATA[Comments may not appear after statements.]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentEmpty</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Variable doc comment is empty]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.ContentAfterOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentContentAfterOpen</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[The open comment tag must be the only content on the line]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.MissingShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentMissingShort</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Missing short description in variable doc comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.SpacingBeforeShort" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentSpacingBeforeShort</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Extra newline(s) found before variable comment short description]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.SpacingBetween" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentSpacingBetween</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[There must be exactly one blank line between descriptions in variable comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.LongNotCapital" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentLongNotCapital</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Variable comment long description must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.ShortSingleLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentShortSingleLine</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Variable comment short description must be on a single line]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.ShortNotCapital" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentShortNotCapital</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Variable comment short description must start with a capital letter]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.ShortFullStop" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentShortFullStop</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Variable comment short description must end with a full stop]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.SpacingBeforeTags" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentSpacingBeforeTags</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[There must be exactly one blank line before the tags in variable comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.TagNotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentTagNotAllowed</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[@%s tag is not allowed in variable comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.SpacingAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentSpacingAfter</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Additional blank lines found at end of variable comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.DuplicateVar" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentDuplicateVar</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Only 1 @var tag is allowed in variable comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.VarOrder" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentVarOrder</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[The @var tag must be the first tag in a variable comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.MissingVarType" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentMissingVarType</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Var type missing for @var tag in variable comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.IncorrectVarType" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentIncorrectVarType</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Expected "%s"; found "%s" for @var tag in variable comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.VarIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentVarIndent</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[@var tag indented incorrectly; expected 1 space but found %s]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.MissingVar" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentMissingVar</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Missing @var tag in variable comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.EmptySees" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentEmptySees</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[Content missing for @see tag in variable comment]]></description>
  </rule>
  <rule key="Squiz.Commenting.VariableComment.SeesIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>VariableCommentSeesIndent</name>
    <configKey>rulesets/VariableComment</configKey>
    <description><![CDATA[@see tag indented incorrectly; expected 1 spaces but found %s]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ElseIfDeclaration.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>ElseIfDeclarationNotAllowed</name>
    <configKey>rulesets/ElseIfDeclaration</configKey>
    <description><![CDATA[Usage of ELSEIF not allowed; use ELSE IF instead]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationSpaceAfterOpen</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[Space found after opening bracket of FOREACH loop]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationSpaceBeforeClose</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[Space found before closing bracket of FOREACH loop]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationAsNotLower</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[AS keyword must be lowercase; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeArrow" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationNoSpaceBeforeArrow</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space before "=>"; 0 found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeArrow" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationSpacingBeforeArrow</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space before "=>"; %s found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterArrow" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationNoSpaceAfterArrow</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space after "=>"; 0 found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterArrow" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationSpacingAfterArrow</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space after "=>"; %s found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeAs" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationNoSpaceBeforeAs</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space before "as"; 0 found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationSpacingBeforeAs</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space before "as"; %s found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterAs" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationNoSpaceAfterAs</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space after "as"; 0 found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterAs" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForEachLoopDeclarationSpacingAfterAs</name>
    <configKey>rulesets/ForEachLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space after "as"; %s found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForLoopDeclaration.NoOpenBracket" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopDeclarationNoOpenBracket</name>
    <configKey>rulesets/ForLoopDeclaration</configKey>
    <description><![CDATA[Possible parse error: no opening parenthesis for FOR keyword]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopDeclarationSpacingAfterOpen</name>
    <configKey>rulesets/ForLoopDeclaration</configKey>
    <description><![CDATA[Space found after opening bracket of FOR loop]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopDeclarationSpacingBeforeClose</name>
    <configKey>rulesets/ForLoopDeclaration</configKey>
    <description><![CDATA[Space found before closing bracket of FOR loop]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeFirst" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopDeclarationSpacingBeforeFirst</name>
    <configKey>rulesets/ForLoopDeclaration</configKey>
    <description><![CDATA[Space found before first semicolon of FOR loop]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterFirst" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopDeclarationNoSpaceAfterFirst</name>
    <configKey>rulesets/ForLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space after first semicolon of FOR loop; 0 found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterFirst" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopDeclarationSpacingAfterFirst</name>
    <configKey>rulesets/ForLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space after first semicolon of FOR loop; %s found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeSecond" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopDeclarationSpacingBeforeSecond</name>
    <configKey>rulesets/ForLoopDeclaration</configKey>
    <description><![CDATA[Space found before second semicolon of FOR loop]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterSecond" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopDeclarationNoSpaceAfterSecond</name>
    <configKey>rulesets/ForLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space after second semicolon of FOR loop; 0 found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterSecond" priority="MAJOR">
    <category name="Maintainability" />
    <name>ForLoopDeclarationSpacingAfterSecond</name>
    <configKey>rulesets/ForLoopDeclaration</configKey>
    <description><![CDATA[Expected 1 space after second semicolon of FOR loop; %s found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.InlineIfDeclaration.NotSingleLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineIfDeclarationNotSingleLine</name>
    <configKey>rulesets/InlineIfDeclaration</configKey>
    <description><![CDATA[Inline shorthand IF statement must be declared on a single line]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.InlineIfDeclaration.NoBrackets" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineIfDeclarationNoBrackets</name>
    <configKey>rulesets/InlineIfDeclaration</configKey>
    <description><![CDATA[Inline shorthand IF statement requires brackets around comparison]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeThen" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineIfDeclarationSpacingBeforeThen</name>
    <configKey>rulesets/InlineIfDeclaration</configKey>
    <description><![CDATA[Inline shorthand IF statement requires 1 space before THEN; %s found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterThen" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineIfDeclarationSpacingAfterThen</name>
    <configKey>rulesets/InlineIfDeclaration</configKey>
    <description><![CDATA[Inline shorthand IF statement requires 1 space after THEN; %s found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeElse" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineIfDeclarationSpacingBeforeElse</name>
    <configKey>rulesets/InlineIfDeclaration</configKey>
    <description><![CDATA[Inline shorthand IF statement requires 1 space before ELSE; %s found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterElse" priority="MAJOR">
    <category name="Maintainability" />
    <name>InlineIfDeclarationSpacingAfterElse</name>
    <configKey>rulesets/InlineIfDeclaration</configKey>
    <description><![CDATA[Inline shorthand IF statement requires 1 space after ELSE; %s found]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.LowercaseDeclaration.FoundUppercase" priority="MAJOR">
    <category name="Maintainability" />
    <name>LowercaseDeclarationFoundUppercase</name>
    <configKey>rulesets/LowercaseDeclaration</configKey>
    <description><![CDATA[%s keyword must be lowercase; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.CaseIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationCaseIndent</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[CASE keyword must be lowercase; expected \"$expected\" but found \"$content\]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationSpacingAfterCase</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[CASE keyword must be followed by a single space]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.SpaceBeforeColon" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationSpaceBeforeColon</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[There must be no space before the colon in a CASE statement]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.BreakIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationBreakIndent</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[BREAK statement must be indented 4 spaces from SWITCH keyword]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.EmptyCase" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationEmptyCase</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[Empty CASE statements are not allowed]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeBreak" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationSpacingBeforeBreak</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[Blank lines are not allowed before BREAK statements]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterBreak" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationSpacingAfterBreak</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[BREAK statements must be followed by a single blank line]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationSpacingAfterCase</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[Blank lines are not allowed after CASE statements]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.DefaultNotLower" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationDefaultNotLower</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[DEFAULT keyword must be lowercase; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeDefaultColon" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationSpacingBeforeDefaultColon</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[There must be no space before the colon in a DEFAULT statement]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.DefaultIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationDefaultIndent</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[DEFAULT keyword must be indented 4 spaces from SWITCH keyword]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.BreakIndent" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationBreakIndent</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[BREAK statement must be indented 4 spaces from SWITCH keyword]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefaultBreak" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationSpacingAfterDefaultBreak</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[Blank lines are not allowed after the DEFAULT case\'s BREAK statement]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.DefaultNoBreak" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationDefaultNoBreak</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[DEFAULT case must have a BREAK statement]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.EmptyDefault" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationEmptyDefault</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[Comment required for empty DEFAULT case]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefault" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationSpacingAfterDefault</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[Blank lines are not allowed after DEFAULT statements]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.MissingDefault" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationMissingDefault</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[All SWITCH statements must contain a DEFAULT case]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.CloseBraceAlign" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationCloseBraceAlign</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[Closing brace of SWITCH statement must be aligned with SWITCH keyword]]></description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.MissingCase" priority="MAJOR">
    <category name="Maintainability" />
    <name>SwitchDeclarationMissingCase</name>
    <configKey>rulesets/SwitchDeclaration</configKey>
    <description><![CDATA[SWITCH statements must contain at least one CASE statement]]></description>
  </rule>
  <rule key="Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingAfterClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDefinitionClosingBraceSpaceSpacingAfterClose</name>
    <configKey>rulesets/ClassDefinitionClosingBraceSpace</configKey>
    <description><![CDATA[Expected one blank line after closing brace of class definition; %s found]]></description>
  </rule>
  <rule key="Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingBeforeClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDefinitionClosingBraceSpaceSpacingBeforeClose</name>
    <configKey>rulesets/ClassDefinitionClosingBraceSpace</configKey>
    <description><![CDATA[Expected 0 blank lines before closing brace of class definition; %s found]]></description>
  </rule>
  <rule key="Squiz.CSS.ClassDefinitionNameSpacing.BlankLinesFound" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDefinitionNameSpacingBlankLinesFound</name>
    <configKey>rulesets/ClassDefinitionNameSpacing</configKey>
    <description><![CDATA[Blank lines are not allowed between class names]]></description>
  </rule>
  <rule key="Squiz.CSS.ClassDefinitionOpeningBraceSpace.NoneBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDefinitionOpeningBraceSpaceNoneBefore</name>
    <configKey>rulesets/ClassDefinitionOpeningBraceSpace</configKey>
    <description><![CDATA[Expected 1 space before opening brace of class definition; 0 found]]></description>
  </rule>
  <rule key="Squiz.CSS.ClassDefinitionOpeningBraceSpace.Before" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDefinitionOpeningBraceSpaceBefore</name>
    <configKey>rulesets/ClassDefinitionOpeningBraceSpace</configKey>
    <description><![CDATA[Expected 1 space before opening brace of class definition; %s found]]></description>
  </rule>
  <rule key="Squiz.CSS.ClassDefinitionOpeningBraceSpace.After" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClassDefinitionOpeningBraceSpaceAfter</name>
    <configKey>rulesets/ClassDefinitionOpeningBraceSpace</configKey>
    <description><![CDATA[Expected 0 blank lines after opening brace of class definition; %s found]]></description>
  </rule>
  <rule key="Squiz.CSS.ColonSpacing.Before" priority="MAJOR">
    <category name="Maintainability" />
    <name>ColonSpacingBefore</name>
    <configKey>rulesets/ColonSpacing</configKey>
    <description><![CDATA[There must be no space before a colon in a style definition]]></description>
  </rule>
  <rule key="Squiz.CSS.ColonSpacing.NoneAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>ColonSpacingNoneAfter</name>
    <configKey>rulesets/ColonSpacing</configKey>
    <description><![CDATA[Expected 1 space after colon in style definition; 0 found]]></description>
  </rule>
  <rule key="Squiz.CSS.ColonSpacing.After" priority="MAJOR">
    <category name="Maintainability" />
    <name>ColonSpacingAfter</name>
    <configKey>rulesets/ColonSpacing</configKey>
    <description><![CDATA[Expected 1 space after colon in style definition; %s found]]></description>
  </rule>
  <rule key="Squiz.CSS.ColonSpacing.AfterNewline" priority="MAJOR">
    <category name="Maintainability" />
    <name>ColonSpacingAfterNewline</name>
    <configKey>rulesets/ColonSpacing</configKey>
    <description><![CDATA[Expected 1 space after colon in style definition; newline found]]></description>
  </rule>
  <rule key="Squiz.CSS.ColourDefinition.NotUpper" priority="MAJOR">
    <category name="Maintainability" />
    <name>ColourDefinitionNotUpper</name>
    <configKey>rulesets/ColourDefinition</configKey>
    <description><![CDATA[CSS colours must be defined in uppercase; expected %s but found %s]]></description>
  </rule>
  <rule key="Squiz.CSS.ColourDefinition.Shorthand" priority="MAJOR">
    <category name="Maintainability" />
    <name>ColourDefinitionShorthand</name>
    <configKey>rulesets/ColourDefinition</configKey>
    <description><![CDATA[CSS colours must use shorthand if available; expected %s but found %s]]></description>
  </rule>
  <rule key="Squiz.CSS.DisallowMultipleStyleDefinitions.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowMultipleStyleDefinitionsFound</name>
    <configKey>rulesets/DisallowMultipleStyleDefinitions</configKey>
    <description><![CDATA[Each style definition must be on a line by itself]]></description>
  </rule>
  <rule key="Squiz.CSS.DuplicateClassDefinition.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DuplicateClassDefinitionFound</name>
    <configKey>rulesets/DuplicateClassDefinition</configKey>
    <description><![CDATA[Duplicate class definition found; first defined on line %s]]></description>
  </rule>
  <rule key="Squiz.CSS.DuplicateStyleDefinition.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DuplicateStyleDefinitionFound</name>
    <configKey>rulesets/DuplicateStyleDefinition</configKey>
    <description><![CDATA[Duplicate style definition found; first defined on line %s]]></description>
  </rule>
  <rule key="Squiz.CSS.EmptyClassDefinition.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmptyClassDefinitionFound</name>
    <configKey>rulesets/EmptyClassDefinition</configKey>
    <description><![CDATA[Class definition is empty]]></description>
  </rule>
  <rule key="Squiz.CSS.EmptyStyleDefinition.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmptyStyleDefinitionFound</name>
    <configKey>rulesets/EmptyStyleDefinition</configKey>
    <description><![CDATA[Style definition is empty]]></description>
  </rule>
  <rule key="Squiz.CSS.Indentation.BlankLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>IndentationBlankLine</name>
    <configKey>rulesets/Indentation</configKey>
    <description><![CDATA[Blank lines are not allowed in class definitions]]></description>
  </rule>
  <rule key="Squiz.CSS.Indentation.Incorrect" priority="MAJOR">
    <category name="Maintainability" />
    <name>IndentationIncorrect</name>
    <configKey>rulesets/Indentation</configKey>
    <description><![CDATA[Line indented incorrectly; expected %s spaces]]></description>
  </rule>
  <rule key="Squiz.CSS.LowercaseStyleDefinition.FoundUpper" priority="MAJOR">
    <category name="Maintainability" />
    <name>LowercaseStyleDefinitionFoundUpper</name>
    <configKey>rulesets/LowercaseStyleDefinition</configKey>
    <description><![CDATA[Style definitions must be lowercase; expected %s but found %s]]></description>
  </rule>
  <rule key="Squiz.CSS.MissingColon.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>MissingColonFound</name>
    <configKey>rulesets/MissingColon</configKey>
    <description><![CDATA[No style definition found on line; check for missing colon]]></description>
  </rule>
  <rule key="Squiz.CSS.Opacity.Invalid" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpacityInvalid</name>
    <configKey>rulesets/Opacity</configKey>
    <description><![CDATA[Opacity values must be between 0 and 1]]></description>
  </rule>
  <rule key="Squiz.CSS.Opacity.SpacingAfterPoint" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpacitySpacingAfterPoint</name>
    <configKey>rulesets/Opacity</configKey>
    <description><![CDATA[Opacity values must have a single value after the decimal point]]></description>
  </rule>
  <rule key="Squiz.CSS.Opacity.PointNotRequired" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpacityPointNotRequired</name>
    <configKey>rulesets/Opacity</configKey>
    <description><![CDATA[Opacity value does not require decimal point; use %s instead]]></description>
  </rule>
  <rule key="Squiz.CSS.Opacity.StartWithPoint" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpacityStartWithPoint</name>
    <configKey>rulesets/Opacity</configKey>
    <description><![CDATA[Opacity values must not start with a decimal point; use 0%s instead]]></description>
  </rule>
  <rule key="Squiz.CSS.Opacity.Invalid" priority="MAJOR">
    <category name="Maintainability" />
    <name>OpacityInvalid</name>
    <configKey>rulesets/Opacity</configKey>
    <description><![CDATA[Opacity values must be between 0 and 1]]></description>
  </rule>
  <rule key="Squiz.CSS.SemicolonSpacing.NotAtEnd" priority="MAJOR">
    <category name="Maintainability" />
    <name>SemicolonSpacingNotAtEnd</name>
    <configKey>rulesets/SemicolonSpacing</configKey>
    <description><![CDATA[Style definitions must end with a semicolon]]></description>
  </rule>
  <rule key="Squiz.CSS.SemicolonSpacing.SpaceFound" priority="MAJOR">
    <category name="Maintainability" />
    <name>SemicolonSpacingSpaceFound</name>
    <configKey>rulesets/SemicolonSpacing</configKey>
    <description><![CDATA[Expected 0 spaces before semicolon in style definition; %s found]]></description>
  </rule>
  <rule key="Squiz.Files.FileExtension.ClassFound" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileExtensionClassFound</name>
    <configKey>rulesets/FileExtension</configKey>
    <description><![CDATA[%s found in ".php" file; use ".inc" extension instead]]></description>
  </rule>
  <rule key="Squiz.Files.FileExtension.NoClass" priority="MAJOR">
    <category name="Maintainability" />
    <name>FileExtensionNoClass</name>
    <configKey>rulesets/FileExtension</configKey>
    <description><![CDATA[No interface or class found in ".inc" file; use ".php" extension instead]]></description>
  </rule>
  <rule key="Squiz.Formatting.OperatorBracket.SpacingAfterMinus" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorBracketSpacingAfterMinus</name>
    <configKey>rulesets/OperatorBracket</configKey>
    <description><![CDATA[No space allowed between minus sign and number]]></description>
  </rule>
  <rule key="Squiz.Formatting.OperatorBracket.MissingBrackets" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorBracketMissingBrackets</name>
    <configKey>rulesets/OperatorBracket</configKey>
    <description><![CDATA[Arithmetic operation must be bracketed]]></description>
  </rule>
  <rule key="Squiz.Formatting.OperatorBracket.MissingBrackets" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorBracketMissingBrackets</name>
    <configKey>rulesets/OperatorBracket</configKey>
    <description><![CDATA[Arithmetic operation must be bracketed]]></description>
  </rule>
  <rule key="Squiz.Formatting.OperatorBracket.MissingBrackets" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorBracketMissingBrackets</name>
    <configKey>rulesets/OperatorBracket</configKey>
    <description><![CDATA[Arithmetic operation must be bracketed]]></description>
  </rule>
  <rule key="Squiz.Formatting.OperatorBracket.MissingBrackets" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorBracketMissingBrackets</name>
    <configKey>rulesets/OperatorBracket</configKey>
    <description><![CDATA[Arithmetic operation must be bracketed]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeEquals" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpaceBeforeEquals</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 0 spaces between argument "%s" and equals sign; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceAfterDefault" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpaceAfterDefault</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 0 spaces between default value and equals sign for argument "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpaceBeforeComma</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 0 spaces between argument "%s" and comma; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpacingAfterHint</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 1 space between type hint and argument "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSapceBeforeHint" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingNoSapceBeforeHint</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 1 space between comma and type hint "%s"; 0 found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeHint" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpacingBeforeHint</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 1 space between comma and type hint "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeArg" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpacingBeforeArg</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 1 space between comma and argument "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSpaceBeforeArg" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingNoSpaceBeforeArg</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 1 space between comma and argument "%s"; 0 found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpacingAfterHint</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 1 space between type hint and argument "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpenHint" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpacingAfterOpenHint</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 0 spaces between opening bracket and type hint "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpacingAfterOpen</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 0 spaces between opening bracket and argument "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBetween" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpacingBetween</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 0 spaces between brackets of function declaration; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDeclarationArgumentSpacingSpacingBeforeClose</name>
    <configKey>rulesets/FunctionDeclarationArgumentSpacing</configKey>
    <description><![CDATA[Expected 0 spaces between argument "%s" and closing bracket; %s found]]></description>
  </rule>
  <rule key="Squiz.Functions.FunctionDuplicateArgument.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionDuplicateArgumentFound</name>
    <configKey>rulesets/FunctionDuplicateArgument</configKey>
    <description><![CDATA[Variable "%s" appears more than once in function declaration]]></description>
  </rule>
  <rule key="Squiz.Functions.GlobalFunction.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>GlobalFunctionFound</name>
    <configKey>rulesets/GlobalFunction</configKey>
    <description><![CDATA[Consider putting global function "%s" in a static class]]></description>
  </rule>
  <rule key="Squiz.Functions.LowercaseFunctionKeywords.FoundUppercase" priority="MAJOR">
    <category name="Maintainability" />
    <name>LowercaseFunctionKeywordsFoundUppercase</name>
    <configKey>rulesets/LowercaseFunctionKeywords</configKey>
    <description><![CDATA[%s keyword must be lowercase; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.FirstParamSpacing" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultiLineFunctionDeclarationFirstParamSpacing</name>
    <configKey>rulesets/MultiLineFunctionDeclaration</configKey>
    <description><![CDATA[The first parameter of a multi-line function declaration must be on the line after the opening bracket]]></description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.OneParamPerLine" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultiLineFunctionDeclarationOneParamPerLine</name>
    <configKey>rulesets/MultiLineFunctionDeclaration</configKey>
    <description><![CDATA[Multi-line function declarations must define one parameter per line]]></description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterComma" priority="MAJOR">
    <category name="Maintainability" />
    <name>MultiLineFunctionDeclarationContentAfterComma</name>
    <configKey>rulesets/MultiLineFunctionDeclaration</configKey>
    <description><![CDATA[Commas in multi-line function declarations must be the last content on a line]]></description>
  </rule>
  <rule key="Squiz.NamingConventions.ConstantCase." priority="MAJOR">
    <category name="Maintainability" />
    <name>ConstantCase</name>
    <configKey>rulesets/ConstantCase</configKey>
    <description><![CDATA[Class Generic_Sniffs_PHP_LowerCaseConstantSniff not found]]></description>
  </rule>
  <rule key="Squiz.NamingConventions.ValidFunctionName.DoubleUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNameDoubleUnderscore</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[Function name "%s" is invalid; only PHP magic methods should be prefixed with a double underscore]]></description>
  </rule>
  <rule key="Squiz.NamingConventions.ValidFunctionName.NotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidFunctionNameNotCamelCaps</name>
    <configKey>rulesets/ValidFunctionName</configKey>
    <description><![CDATA[Function name "%s" is not in camel caps format]]></description>
  </rule>
  <rule key="Squiz.NamingConventions.ValidVariableName.NotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNameNotCamelCaps</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
  </rule>
  <rule key="Squiz.NamingConventions.ValidVariableName.NotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNameNotCamelCaps</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
  </rule>
  <rule key="Squiz.NamingConventions.ValidVariableName.PublicHasUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNamePublicHasUnderscore</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[%s member variable "%s" must not contain a leading underscore]]></description>
  </rule>
  <rule key="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNamePrivateNoUnderscore</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Private member variable "%s" must contain a leading underscore]]></description>
  </rule>
  <rule key="Squiz.NamingConventions.ValidVariableName.MemberNotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNameMemberNotCamelCaps</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
  </rule>
  <rule key="Squiz.NamingConventions.ValidVariableName.StringNotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNameStringNotCamelCaps</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
  </rule>
  <rule key="Squiz.Objects.DisallowObjectStringIndex.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowObjectStringIndexFound</name>
    <configKey>rulesets/DisallowObjectStringIndex</configKey>
    <description><![CDATA[Object indexes must be written in dot notation]]></description>
  </rule>
  <rule key="Squiz.Objects.ObjectInstantiation.NotAssigned" priority="MAJOR">
    <category name="Maintainability" />
    <name>ObjectInstantiationNotAssigned</name>
    <configKey>rulesets/ObjectInstantiation</configKey>
    <description><![CDATA[New objects must be assigned to a variable]]></description>
  </rule>
  <rule key="Squiz.Objects.ObjectMemberComma.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>ObjectMemberCommaMissing</name>
    <configKey>rulesets/ObjectMemberComma</configKey>
    <description><![CDATA[Last member of object must not be followed by a comma]]></description>
  </rule>
  <rule key="Squiz.Operators.ComparisonOperatorUsage.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>ComparisonOperatorUsageNotAllowed</name>
    <configKey>rulesets/ComparisonOperatorUsage</configKey>
    <description><![CDATA[Operator %s prohibited; use %s instead]]></description>
  </rule>
  <rule key="Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue" priority="MAJOR">
    <category name="Maintainability" />
    <name>ComparisonOperatorUsageImplicitTrue</name>
    <configKey>rulesets/ComparisonOperatorUsage</configKey>
    <description><![CDATA[Implicit true comparisons prohibited; use === TRUE instead]]></description>
  </rule>
  <rule key="Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue" priority="MAJOR">
    <category name="Maintainability" />
    <name>ComparisonOperatorUsageImplicitTrue</name>
    <configKey>rulesets/ComparisonOperatorUsage</configKey>
    <description><![CDATA[Implicit true comparisons prohibited; use === TRUE instead]]></description>
  </rule>
  <rule key="Squiz.Operators.IncrementDecrementUsage.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>IncrementDecrementUsageNotAllowed</name>
    <configKey>rulesets/IncrementDecrementUsage</configKey>
    <description><![CDATA[Increment and decrement operators cannot be used in an arithmetic operation]]></description>
  </rule>
  <rule key="Squiz.Operators.IncrementDecrementUsage.NoBrackets" priority="MAJOR">
    <category name="Maintainability" />
    <name>IncrementDecrementUsageNoBrackets</name>
    <configKey>rulesets/IncrementDecrementUsage</configKey>
    <description><![CDATA[Increment and decrement operators must be bracketed when used in string concatenation]]></description>
  </rule>
  <rule key="Squiz.Operators.IncrementDecrementUsage." priority="MAJOR">
    <category name="Maintainability" />
    <name>IncrementDecrementUsage</name>
    <configKey>rulesets/IncrementDecrementUsage</configKey>
    <description><![CDATA[Increment]]></description>
  </rule>
  <rule key="Squiz.Operators.ValidLogicalOperators.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidLogicalOperatorsNotAllowed</name>
    <configKey>rulesets/ValidLogicalOperators</configKey>
    <description><![CDATA[Logical operator "%s" is prohibited; use "%s" instead]]></description>
  </rule>
  <rule key="Squiz.PHP.CommentedOutCode.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>CommentedOutCodeFound</name>
    <configKey>rulesets/CommentedOutCode</configKey>
    <description><![CDATA[This comment is %s%% valid code; is this commented out code?]]></description>
  </rule>
  <rule key="Squiz.PHP.DisallowComparisonAssignment.AssignedComparison" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowComparisonAssignmentAssignedComparison</name>
    <configKey>rulesets/DisallowComparisonAssignment</configKey>
    <description><![CDATA[The value of a comparison must not be assigned to a variable]]></description>
  </rule>
  <rule key="Squiz.PHP.DisallowComparisonAssignment.AssignedBool" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowComparisonAssignmentAssignedBool</name>
    <configKey>rulesets/DisallowComparisonAssignment</configKey>
    <description><![CDATA[The value of a boolean operation must not be assigned to a variable]]></description>
  </rule>
  <rule key="Squiz.PHP.DisallowMultipleAssignments.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowMultipleAssignmentsFound</name>
    <configKey>rulesets/DisallowMultipleAssignments</configKey>
    <description><![CDATA[Assignments must be the first block of code on a line]]></description>
  </rule>
  <rule key="Squiz.PHP.DisallowSizeFunctionsInLoops.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>DisallowSizeFunctionsInLoopsFound</name>
    <configKey>rulesets/DisallowSizeFunctionsInLoops</configKey>
    <description><![CDATA[The use of %s inside a loop condition is not allowed; assign the return value to a variable and use the variable in the loop condition instead]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpEmpty</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Empty embedded PHP tag found]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.SpacingBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpSpacingBefore</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Blank line found at start of embedded PHP content]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.ContentAfterOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpContentAfterOpen</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Opening PHP tag must be on a line by itself]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.Indent" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpIndent</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[First line of embedded PHP code must be indented %s spaces; %s found]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.SpacingAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpSpacingAfter</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Blank line found at end of embedded PHP content]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.ContentAfterEnd" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpContentAfterEnd</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Closing PHP tag must be on a line by itself]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.Empty" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpEmpty</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Empty embedded PHP tag found]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.SpacingAfterOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpSpacingAfterOpen</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Expected 1 space after opening PHP tag; %s found]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.NoSemicolon" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpNoSemicolon</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Inline PHP statement must end with a semicolon]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.MultipleStatements" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpMultipleStatements</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Inline PHP statement must contain one statement per line; %s found]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.NoSpaceBeforeClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpNoSpaceBeforeClose</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Expected 1 space before closing PHP tag; 0 found]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.NoSpaceBeforeClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpNoSpaceBeforeClose</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Expected 1 space before closing PHP tag; 0 found]]></description>
  </rule>
  <rule key="Squiz.PHP.EmbeddedPhp.SpacingBeforeClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>EmbeddedPhpSpacingBeforeClose</name>
    <configKey>rulesets/EmbeddedPhp</configKey>
    <description><![CDATA[Expected 1 space before closing PHP tag; %s found]]></description>
  </rule>
  <rule key="Squiz.PHP.Eval.Discouraged" priority="MAJOR">
    <category name="Maintainability" />
    <name>EvalDiscouraged</name>
    <configKey>rulesets/Eval</configKey>
    <description><![CDATA[Use of eval() is discouraged]]></description>
  </rule>
  <rule key="Squiz.PHP.GlobalKeyword.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>GlobalKeywordNotAllowed</name>
    <configKey>rulesets/GlobalKeyword</configKey>
    <description><![CDATA[Use of the "global" keyword is forbidden; use "$GLOBALS[\'%s\']" instead]]></description>
  </rule>
  <rule key="Squiz.PHP.Heredoc.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>HeredocNotAllowed</name>
    <configKey>rulesets/Heredoc</configKey>
    <description><![CDATA[Use of heredoc syntax ("<<<") is not allowed; use standard strings or inline HTML instead]]></description>
  </rule>
  <rule key="Squiz.PHP.InnerFunctions.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>InnerFunctionsNotAllowed</name>
    <configKey>rulesets/InnerFunctions</configKey>
    <description><![CDATA[The use of inner functions is forbidden]]></description>
  </rule>
  <rule key="Squiz.PHP.LowercasePHPFunctions.KeywordUppercase" priority="MAJOR">
    <category name="Maintainability" />
    <name>LowercasePHPFunctionsKeywordUppercase</name>
    <configKey>rulesets/LowercasePHPFunctions</configKey>
    <description><![CDATA[%s keyword must be lowercase; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.PHP.LowercasePHPFunctions.CallUppercase" priority="MAJOR">
    <category name="Maintainability" />
    <name>LowercasePHPFunctionsCallUppercase</name>
    <configKey>rulesets/LowercasePHPFunctions</configKey>
    <description><![CDATA[Calls to inbuilt PHP functions must be lowercase; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.Scope.MemberVarScope.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>MemberVarScopeMissing</name>
    <configKey>rulesets/MemberVarScope</configKey>
    <description><![CDATA[Scope modifier not specified for member variable "%s]]></description>
  </rule>
  <rule key="Squiz.Scope.MethodScope.Missing" priority="MAJOR">
    <category name="Maintainability" />
    <name>MethodScopeMissing</name>
    <configKey>rulesets/MethodScope</configKey>
    <description><![CDATA[No scope modifier specified for function "%s]]></description>
  </rule>
  <rule key="Squiz.Scope.StaticThisUsage.Found" priority="MAJOR">
    <category name="Maintainability" />
    <name>StaticThisUsageFound</name>
    <configKey>rulesets/StaticThisUsage</configKey>
    <description><![CDATA[Usage of "$this" in static methods will cause runtime errors]]></description>
  </rule>
  <rule key="Squiz.Strings.DoubleQuoteUsage.ContainsVar" priority="MAJOR">
    <category name="Maintainability" />
    <name>DoubleQuoteUsageContainsVar</name>
    <configKey>rulesets/DoubleQuoteUsage</configKey>
    <description><![CDATA[Variable "%s" not allowed in double quoted string; use concatenation instead]]></description>
  </rule>
  <rule key="Squiz.Strings.DoubleQuoteUsage.NotRequired" priority="MAJOR">
    <category name="Maintainability" />
    <name>DoubleQuoteUsageNotRequired</name>
    <configKey>rulesets/DoubleQuoteUsage</configKey>
    <description><![CDATA[String %s does not require double quotes; use single quotes instead]]></description>
  </rule>
  <rule key="Squiz.Strings.EchoedStrings.HasBracket" priority="MAJOR">
    <category name="Maintainability" />
    <name>EchoedStringsHasBracket</name>
    <configKey>rulesets/EchoedStrings</configKey>
    <description><![CDATA[Echoed strings should not be bracketed]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.CastSpacing.ContainsWhiteSpace" priority="MAJOR">
    <category name="Maintainability" />
    <name>CastSpacingContainsWhiteSpace</name>
    <configKey>rulesets/CastSpacing</configKey>
    <description><![CDATA[Cast statements must not contain whitespace; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ControlStructureSpacingSpacingAfterOpenBrace</name>
    <configKey>rulesets/ControlStructureSpacing</configKey>
    <description><![CDATA[Expected 0 spaces after opening bracket; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ControlStructureSpacing.SpaceBeforeCloseBrace" priority="MAJOR">
    <category name="Maintainability" />
    <name>ControlStructureSpacingSpaceBeforeCloseBrace</name>
    <configKey>rulesets/ControlStructureSpacing</configKey>
    <description><![CDATA[Expected 0 spaces before closing bracket; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeOpen" priority="MAJOR">
    <category name="Maintainability" />
    <name>ControlStructureSpacingSpacingBeforeOpen</name>
    <configKey>rulesets/ControlStructureSpacing</configKey>
    <description><![CDATA[Blank line found at start of control structure]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>ControlStructureSpacingSpacingAfterClose</name>
    <configKey>rulesets/ControlStructureSpacing</configKey>
    <description><![CDATA[Blank line found at end of control structure]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ControlStructureSpacing.LineAfterClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>ControlStructureSpacingLineAfterClose</name>
    <configKey>rulesets/ControlStructureSpacing</configKey>
    <description><![CDATA[Blank line found after control structure]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>ControlStructureSpacingNoLineAfterClose</name>
    <configKey>rulesets/ControlStructureSpacing</configKey>
    <description><![CDATA[No blank line found after control structure]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBetween" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionClosingBraceSpaceSpacingBetween</name>
    <configKey>rulesets/FunctionClosingBraceSpace</configKey>
    <description><![CDATA[The opening and closing braces of empty functions must be directly next to each other; e.g.]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.FunctionClosingBraceSpace.ContentBeforeClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionClosingBraceSpaceContentBeforeClose</name>
    <configKey>rulesets/FunctionClosingBraceSpace</configKey>
    <description><![CDATA[Closing brace of nested function must be on a new line]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeNestedClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionClosingBraceSpaceSpacingBeforeNestedClose</name>
    <configKey>rulesets/FunctionClosingBraceSpace</configKey>
    <description><![CDATA[Expected 0 blank lines before closing brace of nested function; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionClosingBraceSpaceSpacingBeforeClose</name>
    <configKey>rulesets/FunctionClosingBraceSpace</configKey>
    <description><![CDATA[Expected 1 blank line before closing function brace; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionOpeningBraceSpaceSpacingAfter</name>
    <configKey>rulesets/FunctionOpeningBraceSpace</configKey>
    <description><![CDATA[Expected 0 blank lines after opening function brace; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfterNested" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionOpeningBraceSpaceSpacingAfterNested</name>
    <configKey>rulesets/FunctionOpeningBraceSpace</configKey>
    <description><![CDATA[Expected 0 blank lines before opening brace of nested function; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.FunctionOpeningBraceSpace.ContentBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionOpeningBraceSpaceContentBefore</name>
    <configKey>rulesets/FunctionOpeningBraceSpace</configKey>
    <description><![CDATA[Opening brace should be on a new line]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionOpeningBraceSpaceSpacingBefore</name>
    <configKey>rulesets/FunctionOpeningBraceSpace</configKey>
    <description><![CDATA[Opening brace should be on the line after the declaration; found %s blank line(s)]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.FunctionSpacing.After" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionSpacingAfter</name>
    <configKey>rulesets/FunctionSpacing</configKey>
    <description><![CDATA[Expected 2 blank lines after function; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.FunctionSpacing.Before" priority="MAJOR">
    <category name="Maintainability" />
    <name>FunctionSpacingBefore</name>
    <configKey>rulesets/FunctionSpacing</configKey>
    <description><![CDATA[Expected 2 blank lines before function; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.LanguageConstructSpacing.IncorrectSingle" priority="MAJOR">
    <category name="Maintainability" />
    <name>LanguageConstructSpacingIncorrectSingle</name>
    <configKey>rulesets/LanguageConstructSpacing</configKey>
    <description><![CDATA[Language constructs must be followed by a single space; expected 1 space but found %s]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.LanguageConstructSpacing.Incorrect" priority="MAJOR">
    <category name="Maintainability" />
    <name>LanguageConstructSpacingIncorrect</name>
    <configKey>rulesets/LanguageConstructSpacing</configKey>
    <description><![CDATA[Language constructs must be followed by a single space; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>LogicalOperatorSpacingNoSpaceBefore</name>
    <configKey>rulesets/LogicalOperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space before logical operator; 0 found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>LogicalOperatorSpacingTooMuchSpaceBefore</name>
    <configKey>rulesets/LogicalOperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space before logical operator; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>LogicalOperatorSpacingNoSpaceAfter</name>
    <configKey>rulesets/LogicalOperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space after logical operator; 0 found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>LogicalOperatorSpacingTooMuchSpaceAfter</name>
    <configKey>rulesets/LogicalOperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space after logical operator; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.MemberVarSpacing.After" priority="MAJOR">
    <category name="Maintainability" />
    <name>MemberVarSpacingAfter</name>
    <configKey>rulesets/MemberVarSpacing</configKey>
    <description><![CDATA[Expected 1 blank line before member var; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ObjectOperatorSpacing.Before" priority="MAJOR">
    <category name="Maintainability" />
    <name>ObjectOperatorSpacingBefore</name>
    <configKey>rulesets/ObjectOperatorSpacing</configKey>
    <description><![CDATA[Space found before object operator]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ObjectOperatorSpacing.After" priority="MAJOR">
    <category name="Maintainability" />
    <name>ObjectOperatorSpacingAfter</name>
    <configKey>rulesets/ObjectOperatorSpacing</configKey>
    <description><![CDATA[Space found after object operator]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.OperatorSpacing.NoSpaceBeforeAmp" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorSpacingNoSpaceBeforeAmp</name>
    <configKey>rulesets/OperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space before "&" operator; 0 found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.OperatorSpacing.SpacingBeforeAmp" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorSpacingSpacingBeforeAmp</name>
    <configKey>rulesets/OperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space before "&" operator; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfterAmp" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorSpacingNoSpaceAfterAmp</name>
    <configKey>rulesets/OperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space after "&" operator; 0 found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.OperatorSpacing.SpacingAfterAmp" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorSpacingSpacingAfterAmp</name>
    <configKey>rulesets/OperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space after "&" operator; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.OperatorSpacing.NoSpaceBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorSpacingNoSpaceBefore</name>
    <configKey>rulesets/OperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space before \"$operator\"; 0 found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.OperatorSpacing.SpacingBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorSpacingSpacingBefore</name>
    <configKey>rulesets/OperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space before "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorSpacingNoSpaceAfter</name>
    <configKey>rulesets/OperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space after \"$operator\"; 0 found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.OperatorSpacing.SpacingAfter" priority="MAJOR">
    <category name="Maintainability" />
    <name>OperatorSpacingSpacingAfter</name>
    <configKey>rulesets/OperatorSpacing</configKey>
    <description><![CDATA[Expected 1 space after "%s"; %s found]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.PropertyLabelSpacing.Before" priority="MAJOR">
    <category name="Maintainability" />
    <name>PropertyLabelSpacingBefore</name>
    <configKey>rulesets/PropertyLabelSpacing</configKey>
    <description><![CDATA[There must be no space before the colon in a property/label declaration]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.PropertyLabelSpacing.After" priority="MAJOR">
    <category name="Maintainability" />
    <name>PropertyLabelSpacingAfter</name>
    <configKey>rulesets/PropertyLabelSpacing</configKey>
    <description><![CDATA[There must be a single space after the colon in a property/label declaration]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ScopeClosingBraceContentBefore</name>
    <configKey>rulesets/ScopeClosingBrace</configKey>
    <description><![CDATA[Closing brace must be on a line by itself]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ScopeClosingBrace.Indent" priority="MAJOR">
    <category name="Maintainability" />
    <name>ScopeClosingBraceIndent</name>
    <configKey>rulesets/ScopeClosingBrace</configKey>
    <description><![CDATA[Closing brace indented incorrectly; expected %s spaces]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.ScopeKeywordSpacing.Incorrect" priority="MAJOR">
    <category name="Maintainability" />
    <name>ScopeKeywordSpacingIncorrect</name>
    <configKey>rulesets/ScopeKeywordSpacing</configKey>
    <description><![CDATA[Scope keyword "%s" must be followed by a single space]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.SemicolonSpacing.Incorrect" priority="MAJOR">
    <category name="Maintainability" />
    <name>SemicolonSpacingIncorrect</name>
    <configKey>rulesets/SemicolonSpacing</configKey>
    <description><![CDATA[Space found before semicolon; expected "%s" but found "%s]]></description>
  </rule>
  <rule key="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines" priority="MAJOR">
    <category name="Maintainability" />
    <name>SuperfluousWhitespaceEmptyLines</name>
    <configKey>rulesets/SuperfluousWhitespace</configKey>
    <description><![CDATA[Functions must not contain multiple empty lines in a row; found %s empty lines]]></description>
  </rule>
  <rule key="Zend.Files.ClosingTag.NotAllowed" priority="MAJOR">
    <category name="Maintainability" />
    <name>ClosingTagNotAllowed</name>
    <configKey>rulesets/ClosingTag</configKey>
    <description><![CDATA[A closing tag is not permitted at the end of a PHP file]]></description>
  </rule>
  <rule key="Zend.NamingConventions.ValidVariableName.NotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNameNotCamelCaps</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
  </rule>
  <rule key="Zend.NamingConventions.ValidVariableName.NotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNameNotCamelCaps</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
  </rule>
  <rule key="Zend.NamingConventions.ValidVariableName.PublicHasUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNamePublicHasUnderscore</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Public member variable "%s" must not contain a leading underscore]]></description>
  </rule>
  <rule key="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNamePrivateNoUnderscore</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[%s member variable "%s" must contain a leading underscore]]></description>
  </rule>
  <rule key="Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNameMemberVarNotCamelCaps</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
  </rule>
  <rule key="Zend.NamingConventions.ValidVariableName.StringVarNotCamelCaps" priority="MAJOR">
    <category name="Maintainability" />
    <name>ValidVariableNameStringVarNotCamelCaps</name>
    <configKey>rulesets/ValidVariableName</configKey>
    <description><![CDATA[Variable "%s" is not in valid camel caps format]]></description>
  </rule>
</rules>

