<?xml version="1.0" encoding="ISO-8859-1"?>
<profile>
  <name>Sonar Way</name>
  <language>php</language>
  <rules>

    <!-- PHPMD rules -->
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/CyclomaticComplexity]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/NPathComplexity]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveMethodLength]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveClassLength]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveParameterList]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessivePublicCount]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/TooManyFields]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/TooManyMethods]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Code Size Rules/ExcessiveClassComplexity]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/ExitExpression]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/EvalExpression]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/GotoStatement]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/NumberOfChildren]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/DepthOfInheritance]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Design Rules/CouplingBetweenObjects]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedPrivateField]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedLocalVariable]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedPrivateMethod]]></key>
    </rule>
    <rule>
      <repositoryKey>phppmd_rules</repositoryKey>
      <key><![CDATA[Unused Code Rules/UnusedPrivateMethod]]></key>
    </rule>

    <!-- PHP CodeSniffer rules -->
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.EmptyStatement.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.ForLoopShouldBeWhileLoop.CanSimplify</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.JumbledIncrementer.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.UnconditionalIfStatement.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.UnnecessaryFinalModifier.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.CodeAnalysis.UnusedFunctionParameter.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Commenting.Todo.TaskFound</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Files.LineEndings.InvalidEOLChar</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Files.LineLength.MaxExceeded</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.DisallowMultipleStatements.SameLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.MultipleStatementAlignment.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.NoSpaceAfterCast.SpaceFound</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.SpaceAfterCast.NoSpace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Formatting.SpaceAfterCast.TooMuchSpace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.CallTimePassByReference.NotAllowed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.FunctionCallArgumentSpacing.SpaceBeforeComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceBeforeEquals</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterEquals</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceSpacing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceIndent</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Metrics.CyclomaticComplexity.MaxExceeded</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Metrics.NestingLevel.MaxExceeded</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.ConstructorName.OldStyle</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.ConstructorName.OldStyleCall</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.DisallowShortOpenTag.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.DisallowShortOpenTag.EchoFound</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.ForbiddenFunctions.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.LowerCaseConstant.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.NoSilencedErrors.Forbidden</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.NoSilencedErrors.Discouraged</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.PHP.UpperCaseConstant.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.Strings.UnnecessaryStringConcat.Found</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.VersionControl.SubversionProperties.Unexpected</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.VersionControl.SubversionProperties.Missing</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.VersionControl.SubversionProperties.NoMatch</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.VersionControl.SubversionProperties.</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.WhiteSpace.DisallowTabIndent.TabsUsed</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.WhiteSpace.ScopeIndent.Incorrect</key>
    </rule>
    <rule>
      <repositoryKey>php_codesniffer_rules</repositoryKey>
      <key>Generic.WhiteSpace.ScopeIndent.Incorrect</key>
    </rule>
    
  </rules>
</profile>
